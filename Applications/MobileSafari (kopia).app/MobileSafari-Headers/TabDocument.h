//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "AppBannerMetaTagContentObserver.h"
#import "BCSActionDelegate.h"
#import "LoadingControllerDelegate.h"
#import "MergeableItem.h"
#import "QuickWebsiteSearchEventListener.h"
#import "ReadingListMetadataProvider.h"
#import "SFFormAutoFillControllerDelegate.h"
#import "StoreBannerDelegate.h"
#import "WBSFluidProgressControllerWindowDelegate.h"
#import "WBSFluidProgressStateSource.h"
#import "WKNavigationDelegatePrivate.h"
#import "WKUIDelegatePrivate.h"
#import "_SFAppleConnectExtensionUIDelegate.h"
#import "_SFAutomaticBugCaptureObserver.h"
#import "_SFDialogControllerDelegate.h"
#import "_SFDialogPresenting.h"
#import "_SFDialogViewControllerPresenting.h"
#import "_SFFindOnPageViewDelegate.h"
#import "_SFPageLoadErrorControllerDelegate.h"
#import "_SFPrintControllerDelegate.h"
#import "_SFQuickLookDocumentSource.h"
#import "_SFReaderControllerDelegate.h"
#import "_SFSafeBrowsingControllerDelegate.h"
#import "_SFWebViewDelegate.h"
#import "_WKDiagnosticLoggingDelegate.h"
#import "_WKFullscreenDelegate.h"
#import "_WKInputDelegate.h"

@class BrowserController, CSSearchableItemAttributeSet, FindOnPageCompletionProvider, FindOnPageView, LinkPreviewViewController, LoadingController, NSDictionary, NSError, NSMutableArray, NSNumber, NSPointerArray, NSString, NSTimer, NSURL, NSUUID, NSUserActivity, PageLoadTest, PageLoadTestStatistics, PinnableBanner, StoreBanner, TabBarItem, TabOverviewItem, TiltedTabItem, TouchIconFetcher, UIImage, UIView, WBSFluidProgressController, WBSFluidProgressState, WBSHistoryVisit, WBSSameDocumentNavigationToHistoryVisitCorrelator, WKBackForwardListItem, WebBookmark, _SFAppleConnectExtensionPageController, _SFApplicationManifestFetcher, _SFBrowserConfiguration, _SFCalendarEventDetector, _SFDialogController, _SFDownloadController, _SFFluidProgressView, _SFFormAutoFillController, _SFInjectedJavaScriptController, _SFNavigationBarItem, _SFNavigationIntent, _SFPageLoadErrorController, _SFPrintController, _SFQuickLookDocument, _SFQuickLookDocumentController, _SFQuickLookDocumentWriter, _SFReaderController, _SFReloadOptionsController, _SFSafariSharingExtensionController, _SFSafeBrowsingController, _SFSecIdentityPreferencesController, _SFTabStateData, _SFTelephonyNavigationMitigationPolicy, _SFURLSpoofingMitigator, _SFWebClipMetadataFetcher, _SFWebView, _WKRemoteObjectInterface, _WKSessionState, _WKUserInitiatedAction;

@interface TabDocument : NSObject <AppBannerMetaTagContentObserver, LoadingControllerDelegate, QuickWebsiteSearchEventListener, _SFAutomaticBugCaptureObserver, SFFormAutoFillControllerDelegate, StoreBannerDelegate, WBSFluidProgressStateSource, WBSFluidProgressControllerWindowDelegate, WKNavigationDelegatePrivate, WKUIDelegatePrivate, _WKDiagnosticLoggingDelegate, _SFDialogControllerDelegate, _SFDialogViewControllerPresenting, _SFFindOnPageViewDelegate, _SFPageLoadErrorControllerDelegate, _SFPrintControllerDelegate, _SFReaderControllerDelegate, _SFSafeBrowsingControllerDelegate, _SFWebViewDelegate, _WKFullscreenDelegate, _WKInputDelegate, _SFQuickLookDocumentSource, BCSActionDelegate, _SFAppleConnectExtensionUIDelegate, ReadingListMetadataProvider, MergeableItem, _SFDialogPresenting>
{
    unsigned long long _progressAnimationSuppressedCount;
    _Bool _EVOrganizationNameIsValid;
    NSString *_EVOrganizationName;
    NSUserActivity *_userActivity;
    _Bool _forwardActivityToCoreSpotlight;
    NSError *_lastLoadError;
    _SFURLSpoofingMitigator *_URLSpoofingMitigator;
    _WKSessionState *_savedSessionState;
    _WKRemoteObjectInterface *_siteSpecificSearchEventListenerInterface;
    _WKRemoteObjectInterface *_appBannerMetaTagContentObserverInterface;
    _WKRemoteObjectInterface *_automaticBugCaptureObserverInterface;
    _SFSafariSharingExtensionController *_sharingExtensionController;
    _SFReloadOptionsController *_reloadOptionsController;
    _SFCalendarEventDetector *_calendarEventDetector;
    _SFQuickLookDocumentWriter *_quickLookDocumentWriter;
    _SFInjectedJavaScriptController *_activityJSController;
    _SFWebClipMetadataFetcher *_webClipMetadataFetcher;
    TouchIconFetcher *_touchIconFetcher;
    NSMutableArray *_fallbackURLs;
    _Bool _loadWasUserDriven;
    _Bool _userDrivenLoadWasConsumed;
    _Bool _shouldDismissReaderInReponseToSameDocumentNavigation;
    unsigned long long _lastReaderDeactivationMode;
    FindOnPageCompletionProvider *_findCompletionProvider;
    _SFFormAutoFillController *_autoFillController;
    CDUnknownBlockType _autoFillAuthenticationCompletionBlock;
    _Bool _allowURLAsTitle;
    LoadingController *_loadingController;
    WBSFluidProgressController *_fluidProgressController;
    _Bool _wasOpenedFromHistory;
    NSDictionary *_initialArticleScrollDictionaryForCloudTab;
    NSURL *_overrideURLForHTTPAuthenticationDialog;
    WKBackForwardListItem *_parentTabItem;
    _SFApplicationManifestFetcher *_applicationManifestFetcher;
    _SFFluidProgressView *_progressView;
    _SFNavigationBarItem *_navigationBarItem;
    _Bool _displayingStandaloneImage;
    _Bool _displayingStandaloneMedia;
    _Bool _quickLookDocumentCheckCompleted;
    _Bool _didFirstPaint;
    _SFDialogController *_dialogController;
    _Bool _shouldSuppressDialogsThatBlockWebProcess;
    _Bool _shouldResetPrintSuppressionOnNextCommit;
    WebBookmark *_bookmarkForIconFetching;
    WKBackForwardListItem *_backForwardListItemForCurrentAppLinkBannerCheck;
    StoreBanner *_storeBanner;
    PinnableBanner *_appBannerPendingFirstPaint;
    _Bool _sourceApplicationIsValid;
    _Bool _isDisplayingTelephonyPrompt;
    _SFTelephonyNavigationMitigationPolicy *_telephonyNavigationPolicy;
    _Bool _hasFocusedInputFieldOnCurrentPage;
    _Bool _isEditingFormFieldOnCurrentPage;
    _WKUserInitiatedAction *_lastUserInitiatedAction;
    _SFSecIdentityPreferencesController *_secIdentityPreferencesController;
    PageLoadTest *_pageLoadTest;
    NSTimer *_donateTextTimer;
    NSTimer *_unresponsiveWebProcessTimer;
    CDUnknownBlockType _unresponsiveWebProcessBlock;
    _Bool _suppressCrashBanner;
    _SFNavigationIntent *_deferredDropNavigationIntent;
    unsigned long long _deferredDropNavigationIntentGeneration;
    NSNumber *_deferredDropWasHandledByWebKit;
    id <UIDragSession> _webKitDragSession;
    unsigned long long _cachedMediaCaptureDeviceIcon;
    NSPointerArray *_spawnedTabDocuments;
    NSURL *_cachedCanonicalURL;
    _Bool _currentLoadIsEligibleForAutoFillAuthentication;
    _SFAppleConnectExtensionPageController *_appleConnectPageController;
    CDUnknownBlockType _pendingNavigationActionDueToExternalSchemePromptHandler;
    _Bool _hasDoneReaderAvailabilityDetection;
    _Bool _wasOpenedFromLink;
    _Bool _showingReader;
    _Bool _shouldRestoreReader;
    _Bool _shouldRevealAppLinkBannerForNextCommit;
    _Bool _storeBannersAreDisabled;
    _Bool _siteCustomIconPrecomposed;
    _Bool _suppressingProgressAnimationForNavigationGesture;
    _Bool _wantsReaderWhenActivated;
    _Bool _hibernatedDueToMemoryWarning;
    _Bool _showingContinuous;
    _Bool _persistWhenHibernated;
    _Bool _active;
    _Bool _blankDocument;
    _Bool _preparingForNewUserActivity;
    _Bool _hibernated;
    _Bool _closed;
    _Bool _didFinishDocumentLoad;
    _Bool _didFirstLayout;
    _Bool _contentIsReadyForSnapshot;
    _Bool _downloadedFileTypeIsQuickLookDocument;
    WBSFluidProgressState *_fluidProgressState;
    BrowserController *_browserController;
    TabDocument *_parentTabDocument;
    FindOnPageView *_findOnPageView;
    _SFDownloadController *_downloadController;
    _SFQuickLookDocument *_quickLookDocument;
    _SFQuickLookDocumentController *_quickLookDocumentController;
    long long _readerViewTopScrollOffset;
    PinnableBanner *_appBanner;
    NSString *_sourceApplicationBundleIdentifierForNextCommit;
    long long _externalAppRedirectState;
    UIImage *_siteCustomIcon;
    TabOverviewItem *_tabOverviewItem;
    TiltedTabItem *_tiltedTabItem;
    WebBookmark *_readingListBookmark;
    unsigned long long _sessionStateRestorationSource;
    id <TabDocumentDelegate> _delegate;
    _SFBrowserConfiguration *_configuration;
    PageLoadTestStatistics *_pageLoadStatistics;
    NSURL *_webFeedURL;
    NSURL *_URLFromExternalApplication;
    _SFPageLoadErrorController *_pageLoadErrorController;
    WBSSameDocumentNavigationToHistoryVisitCorrelator *_sameDocumentNavigationToHistoryVisitCorrelator;
    _SFWebView *_webView;
    TabBarItem *_tabBarItem;
    _SFSafeBrowsingController *_safeBrowsingController;
    NSURL *_tabReuseURL;
    NSUUID *_UUID;
    double _lastViewedTime;
    WBSHistoryVisit *_lastVisit;
    LinkPreviewViewController *_previewViewController;
    _SFPrintController *_printController;
    NSUUID *_ownerUUID;
    CSSearchableItemAttributeSet *_searchableItemAttributes;
    NSString *_sourceApplicationBundleIdentifier;
    _SFReaderController *_readerContext;
    _SFWebView *_readerWebView;
    struct CGPoint _scrollPoint;
}

+ (id)tabDocumentForWKWebView:(id)arg1;
@property(readonly, nonatomic) _SFWebView *readerWebView; // @synthesize readerWebView=_readerWebView;
@property(readonly, nonatomic) _SFReaderController *readerContext; // @synthesize readerContext=_readerContext;
@property(copy, nonatomic) NSString *sourceApplicationBundleIdentifier; // @synthesize sourceApplicationBundleIdentifier=_sourceApplicationBundleIdentifier;
@property(retain, nonatomic) CSSearchableItemAttributeSet *searchableItemAttributes; // @synthesize searchableItemAttributes=_searchableItemAttributes;
@property(nonatomic) __weak NSUUID *ownerUUID; // @synthesize ownerUUID=_ownerUUID;
@property(readonly, nonatomic) _SFPrintController *printController; // @synthesize printController=_printController;
@property(nonatomic) _Bool downloadedFileTypeIsQuickLookDocument; // @synthesize downloadedFileTypeIsQuickLookDocument=_downloadedFileTypeIsQuickLookDocument;
@property(retain, nonatomic) LinkPreviewViewController *previewViewController; // @synthesize previewViewController=_previewViewController;
@property(readonly, nonatomic) _Bool contentIsReadyForSnapshot; // @synthesize contentIsReadyForSnapshot=_contentIsReadyForSnapshot;
@property(readonly, nonatomic) _Bool didFirstLayout; // @synthesize didFirstLayout=_didFirstLayout;
@property(readonly, nonatomic) _Bool didFinishDocumentLoad; // @synthesize didFinishDocumentLoad=_didFinishDocumentLoad;
@property(retain, nonatomic) WBSHistoryVisit *lastVisit; // @synthesize lastVisit=_lastVisit;
@property(nonatomic, getter=isClosed) _Bool closed; // @synthesize closed=_closed;
@property(nonatomic) double lastViewedTime; // @synthesize lastViewedTime=_lastViewedTime;
@property(copy, nonatomic) NSUUID *UUID; // @synthesize UUID=_UUID;
@property(copy, nonatomic) NSURL *tabReuseURL; // @synthesize tabReuseURL=_tabReuseURL;
@property(nonatomic) struct CGPoint scrollPoint; // @synthesize scrollPoint=_scrollPoint;
@property(readonly, nonatomic, getter=isHibernated) _Bool hibernated; // @synthesize hibernated=_hibernated;
@property(readonly, nonatomic) _SFSafeBrowsingController *safeBrowsingController; // @synthesize safeBrowsingController=_safeBrowsingController;
@property(readonly, nonatomic) TabBarItem *tabBarItem; // @synthesize tabBarItem=_tabBarItem;
@property(nonatomic, getter=isPreparingForNewUserActivity) _Bool preparingForNewUserActivity; // @synthesize preparingForNewUserActivity=_preparingForNewUserActivity;
@property(nonatomic, getter=isBlankDocument) _Bool blankDocument; // @synthesize blankDocument=_blankDocument;
@property(readonly, nonatomic) _SFWebView *webView; // @synthesize webView=_webView;
@property(nonatomic, getter=isActive) _Bool active; // @synthesize active=_active;
@property(nonatomic) _Bool persistWhenHibernated; // @synthesize persistWhenHibernated=_persistWhenHibernated;
@property(readonly, nonatomic) WBSSameDocumentNavigationToHistoryVisitCorrelator *sameDocumentNavigationToHistoryVisitCorrelator; // @synthesize sameDocumentNavigationToHistoryVisitCorrelator=_sameDocumentNavigationToHistoryVisitCorrelator;
@property(readonly, nonatomic) _SFDialogController *dialogController; // @synthesize dialogController=_dialogController;
@property(readonly, nonatomic) _SFPageLoadErrorController *pageLoadErrorController; // @synthesize pageLoadErrorController=_pageLoadErrorController;
@property(retain, nonatomic) NSURL *URLFromExternalApplication; // @synthesize URLFromExternalApplication=_URLFromExternalApplication;
@property(retain, nonatomic) NSURL *webFeedURL; // @synthesize webFeedURL=_webFeedURL;
@property(nonatomic, getter=isShowingContinuous) _Bool showingContinuous; // @synthesize showingContinuous=_showingContinuous;
@property(retain, nonatomic) PageLoadTestStatistics *pageLoadStatistics; // @synthesize pageLoadStatistics=_pageLoadStatistics;
@property(readonly, nonatomic) _SFBrowserConfiguration *configuration; // @synthesize configuration=_configuration;
@property(nonatomic) __weak id <TabDocumentDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) unsigned long long sessionStateRestorationSource; // @synthesize sessionStateRestorationSource=_sessionStateRestorationSource;
@property(nonatomic, getter=wasHibernatedDueToMemoryWarning) _Bool hibernatedDueToMemoryWarning; // @synthesize hibernatedDueToMemoryWarning=_hibernatedDueToMemoryWarning;
@property(nonatomic, getter=isDisplayingStandaloneMedia) _Bool displayingStandaloneMedia; // @synthesize displayingStandaloneMedia=_displayingStandaloneMedia;
@property(nonatomic, getter=isDisplayingStandaloneImage) _Bool displayingStandaloneImage; // @synthesize displayingStandaloneImage=_displayingStandaloneImage;
@property(nonatomic) _Bool wantsReaderWhenActivated; // @synthesize wantsReaderWhenActivated=_wantsReaderWhenActivated;
@property(nonatomic) _Bool suppressingProgressAnimationForNavigationGesture; // @synthesize suppressingProgressAnimationForNavigationGesture=_suppressingProgressAnimationForNavigationGesture;
@property(retain, nonatomic) WebBookmark *readingListBookmark; // @synthesize readingListBookmark=_readingListBookmark;
@property(readonly, nonatomic) TiltedTabItem *tiltedTabItem; // @synthesize tiltedTabItem=_tiltedTabItem;
@property(readonly, nonatomic) TabOverviewItem *tabOverviewItem; // @synthesize tabOverviewItem=_tabOverviewItem;
@property(nonatomic) _Bool siteCustomIconPrecomposed; // @synthesize siteCustomIconPrecomposed=_siteCustomIconPrecomposed;
@property(retain, nonatomic) UIImage *siteCustomIcon; // @synthesize siteCustomIcon=_siteCustomIcon;
@property(nonatomic) long long externalAppRedirectState; // @synthesize externalAppRedirectState=_externalAppRedirectState;
@property(nonatomic) _Bool storeBannersAreDisabled; // @synthesize storeBannersAreDisabled=_storeBannersAreDisabled;
@property(copy, nonatomic) NSString *sourceApplicationBundleIdentifierForNextCommit; // @synthesize sourceApplicationBundleIdentifierForNextCommit=_sourceApplicationBundleIdentifierForNextCommit;
@property(nonatomic) _Bool shouldRevealAppLinkBannerForNextCommit; // @synthesize shouldRevealAppLinkBannerForNextCommit=_shouldRevealAppLinkBannerForNextCommit;
@property(retain, nonatomic) PinnableBanner *appBanner; // @synthesize appBanner=_appBanner;
@property(nonatomic) long long readerViewTopScrollOffset; // @synthesize readerViewTopScrollOffset=_readerViewTopScrollOffset;
@property(nonatomic) _Bool shouldRestoreReader; // @synthesize shouldRestoreReader=_shouldRestoreReader;
@property(nonatomic, getter=isShowingReader) _Bool showingReader; // @synthesize showingReader=_showingReader;
@property(readonly, retain, nonatomic) _SFQuickLookDocumentController *quickLookDocumentController; // @synthesize quickLookDocumentController=_quickLookDocumentController;
@property(nonatomic) _Bool wasOpenedFromLink; // @synthesize wasOpenedFromLink=_wasOpenedFromLink;
@property(retain, nonatomic) _SFQuickLookDocument *quickLookDocument; // @synthesize quickLookDocument=_quickLookDocument;
@property(retain, nonatomic) _SFDownloadController *downloadController; // @synthesize downloadController=_downloadController;
@property(readonly, nonatomic) FindOnPageView *findOnPageView; // @synthesize findOnPageView=_findOnPageView;
@property(readonly, nonatomic) _SFReloadOptionsController *reloadOptionsController; // @synthesize reloadOptionsController=_reloadOptionsController;
@property(nonatomic) __weak TabDocument *parentTabDocument; // @synthesize parentTabDocument=_parentTabDocument;
@property(nonatomic) __weak BrowserController *browserController; // @synthesize browserController=_browserController;
@property(readonly, nonatomic) _Bool hasDoneReaderDetection; // @synthesize hasDoneReaderDetection=_hasDoneReaderAvailabilityDetection;
@property(readonly, nonatomic) WBSFluidProgressState *progressState; // @synthesize progressState=_fluidProgressState;
- (void).cxx_destruct;
- (void)_webViewDidExitElementFullscreen:(id)arg1;
- (void)appleConnectExtensionPageController:(id)arg1 dismissViewController:(id)arg2;
- (void)appleConnectExtensionPageController:(id)arg1 presentViewController:(id)arg2;
- (id)_tabDocumentsSharingWebProcess;
- (void)_terminateWebProcessAndReloadIfActive:(_Bool)arg1;
- (void)_terminateWebProcessThenDoUnresponsiveWebProcessBlock;
- (void)_unresponsiveWebProcessTimerFired:(id)arg1;
- (void)_terminateWebProcessIfNeededAndShowCrashBanner:(_Bool)arg1 thenDo:(CDUnknownBlockType)arg2;
- (void)fetchMetadataForBookmark:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)presentDialog:(id)arg1 sender:(id)arg2;
- (void)createReaderWebViewForReaderController:(id)arg1;
- (id)readerURLForReaderController:(id)arg1;
- (void)collectReadingListItemInfo;
- (void)clearReaderContext;
- (void)clearReaderView;
- (void)createBrowserReaderViewIfNeeded;
- (void)prepareToUseReader;
- (id)readerPageArchiveURL;
- (_Bool)isShowingReadingListArchive;
- (void)readerController:(id)arg1 didExtractArticleText:(id)arg2;
- (void)readerController:(id)arg1 didTwoFingerTapLinkInReaderWithContext:(id)arg2;
- (void)readerController:(id)arg1 didClickLinkRequestingNewWindowInReaderWithRequest:(id)arg2;
- (void)readerController:(id)arg1 didClickLinkInReaderWithRequest:(id)arg2;
- (void)readerController:(id)arg1 didDeactivateReaderWithMode:(unsigned long long)arg2;
- (void)readerController:(id)arg1 contentDidBecomeReadyWithDetectedLanguage:(id)arg2;
- (void)readerController:(id)arg1 didDetermineReaderAvailability:(_Bool)arg2 dueToSameDocumentNavigation:(_Bool)arg3;
- (void)didActivateReader;
- (_Bool)isReaderAvailable;
- (void)updateReadingListItemPreviewText:(id)arg1;
- (void)clearReaderScrollInformation;
- (_Bool)shouldShowReaderOnActivate;
- (id)safeBrowsingControllerExpectedOrCurrentURL:(id)arg1;
- (void)safeBrowsingControllerDidShowSecurityWarningPage:(id)arg1;
- (void)safeBrowsingControllerClosePage:(id)arg1;
- (void)safeBrowsingControllerGoBack:(id)arg1;
- (void)safeBrowsingController:(id)arg1 didIgnoreWarningWithURL:(id)arg2;
- (void)startCheckingFraudulentWebSitesWithURL:(id)arg1;
- (void)cancelCheckForFraudulentWebsites;
- (_Bool)pageLoadErrorControllerShouldPermanentlyAcceptCertificate:(id)arg1;
- (void)pageLoadErrorController:(id)arg1 presentViewController:(id)arg2;
- (void)pageLoadErrorControllerClosePage:(id)arg1;
- (id)pageLoadErrorControllerGetSecIdentityPreferencesController:(id)arg1;
- (void)pageLoadErrorController:(id)arg1 setAllowsSpecificHTTPSCertificate:(id)arg2 forHost:(id)arg3;
- (void)pageLoadErrorController:(id)arg1 loadFailedRequestAfterError:(id)arg2;
- (_Bool)pageLoadErrorControllerShouldHandleCertificateError:(id)arg1;
- (void)pageLoadErrorControllerDidAddAlert:(id)arg1;
- (void)dialogController:(id)arg1 dismissViewController:(id)arg2 withAdditionalAnimations:(CDUnknownBlockType)arg3;
- (void)dialogController:(id)arg1 presentViewController:(id)arg2 withAdditionalAnimations:(CDUnknownBlockType)arg3;
- (void)dialogController:(id)arg1 didDismissDialog:(id)arg2;
- (void)dialogController:(id)arg1 willPresentDialog:(id)arg2;
- (long long)dialogController:(id)arg1 presentationPolicyForDialog:(id)arg2;
- (id)loadingDialogPageTitleForPrintController:(id)arg1;
- (id)pageTitleForPrintController:(id)arg1;
- (id)URLStringForPrintController:(id)arg1;
- (_Bool)printControllerCanPresentPrintUI:(id)arg1;
- (void)printController:(id)arg1 didCreatePrintInfo:(id)arg2;
- (_Bool)printControllerPageIsLoading:(id)arg1;
- (_Bool)printControllerShouldPrintReader:(id)arg1;
- (void)_getAuthenticationForAutoFillOnPageLoad:(_Bool)arg1 autoFillController:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)formAutoFillControllerGetAuthenticationForAutoFill:(id)arg1 onPageLoad:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)formAutoFillControllerGetAuthenticationForAutoFillOnPageLoad:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)formAutoFillControllerDidFocusSensitiveFormField:(id)arg1;
- (_Bool)formAutoFillControllerShouldDisableAutoFill:(id)arg1;
- (id)formAutoFillControllerURLForFormAutoFill:(id)arg1;
- (_Bool)formAutoFillControllerCanPrefillForm:(id)arg1;
- (struct UIEdgeInsets)_webView:(id)arg1 finalObscuredInsetsForScrollView:(id)arg2 withVelocity:(struct CGPoint)arg3 targetContentOffset:(inout struct CGPoint *)arg4;
- (void)findOnPageCompletionProvider:(id)arg1 setStringToComplete:(id)arg2;
- (void)updateFindCompletionProviderWithMatchesCount:(unsigned long long)arg1 forString:(id)arg2 forFindOnPageView:(id)arg3;
- (void)visibilityWillChangeForFindOnPageView:(id)arg1;
- (id)webViewForFindOnPageView:(id)arg1;
- (void)deferredLoadingWatchdogTimerFired;
- (void)didFindAppBannerWithContent:(id)arg1;
- (void)didAutoDetectSiteSpecificSearchProviderWithOriginatingURL:(id)arg1 searchURLTemplate:(id)arg2;
- (void)_webView:(id)arg1 logDiagnosticMessageWithEnhancedPrivacy:(id)arg2 description:(id)arg3;
- (void)_webView:(id)arg1 logDiagnosticMessageWithValue:(id)arg2 description:(id)arg3 value:(id)arg4;
- (void)_webView:(id)arg1 logDiagnosticMessageWithResult:(id)arg2 description:(id)arg3 result:(long long)arg4;
- (void)_webView:(id)arg1 logDiagnosticMessage:(id)arg2 description:(id)arg3;
- (void)loadingControllerWillStartUserDrivenLoad:(id)arg1;
- (void)loadingController:(id)arg1 willLoadRequest:(id)arg2 userDriven:(_Bool)arg3;
- (void)_webView:(id)arg1 insertTextSuggestion:(id)arg2 inInputSession:(id)arg3;
- (void)_webView:(id)arg1 accessoryViewCustomButtonTappedInFormInputSession:(id)arg2;
- (void)_webView:(id)arg1 willSubmitFormValues:(id)arg2 userObject:(id)arg3 submissionHandler:(CDUnknownBlockType)arg4;
- (void)_webView:(id)arg1 didStartInputSession:(id)arg2;
- (long long)_webView:(id)arg1 dataOwnerForDragSession:(id)arg2;
- (long long)_webView:(id)arg1 dataOwnerForDropSession:(id)arg2;
- (void)_webView:(id)arg1 didChangeSafeAreaShouldAffectObscuredInsets:(_Bool)arg2;
- (void)_webView:(id)arg1 requestGeolocationAuthorizationForURL:(id)arg2 frame:(id)arg3 decisionHandler:(CDUnknownBlockType)arg4;
- (void)_attemptDeferredDropNavigation;
- (void)_webView:(id)arg1 dataInteractionOperationWasHandled:(_Bool)arg2 forSession:(id)arg3 itemProviders:(id)arg4;
- (_Bool)_webView:(id)arg1 performDataInteractionOperationWithItemProviders:(id)arg2;
- (unsigned long long)_webView:(id)arg1 willUpdateDataInteractionOperationToOperation:(unsigned long long)arg2 forSession:(id)arg3;
- (void)_webView:(id)arg1 dataInteraction:(id)arg2 session:(id)arg3 didEndWithOperation:(unsigned long long)arg4;
- (void)_webView:(id)arg1 dataInteraction:(id)arg2 sessionWillBegin:(id)arg3;
- (void)_webView:(id)arg1 imageOrMediaDocumentSizeChanged:(struct CGSize)arg2;
- (void)_webView:(id)arg1 printFrame:(id)arg2;
- (void)_webView:(id)arg1 decideWebApplicationCacheQuotaForSecurityOrigin:(id)arg2 currentQuota:(unsigned long long)arg3 totalBytesNeeded:(unsigned long long)arg4 decisionHandler:(CDUnknownBlockType)arg5;
- (void)_webView:(id)arg1 decideDatabaseQuotaForSecurityOrigin:(id)arg2 currentQuota:(unsigned long long)arg3 currentOriginUsage:(unsigned long long)arg4 currentDatabaseUsage:(unsigned long long)arg5 expectedUsage:(unsigned long long)arg6 decisionHandler:(CDUnknownBlockType)arg7;
- (id)_presentingViewControllerForWebView:(id)arg1;
- (id)_webView:(id)arg1 actionsForElement:(id)arg2 defaultActions:(id)arg3;
- (_Bool)_webView:(id)arg1 shouldIncludeAppLinkActionsForElement:(id)arg2;
- (id)_actionsForElement:(id)arg1 defaultActions:(id)arg2 previewViewController:(id)arg3;
- (id)actionPickerItemsForAction:(id)arg1 proposedItems:(id)arg2;
- (struct CGRect)sourceRectForPopoverActionPicker:(id)arg1;
- (id)presentingViewControllerForAction:(id)arg1;
- (id)_webView:(id)arg1 alternateURLFromImage:(id)arg2 userInfo:(id *)arg3;
- (void)_webView:(id)arg1 getAlternateURLFromImage:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)actionsForElement:(id)arg1 defaultActions:(id)arg2;
- (id)_addToReadingListActionForElement:(id)arg1 withURL:(id)arg2;
- (id)_openInNewPageActionForElement:(id)arg1 previewViewController:(id)arg2;
- (void)_animateElement:(id)arg1 toToolbarButton:(long long)arg2;
- (struct CGRect)_convertRectFromDocumentToWebView:(struct CGRect)arg1;
- (void)_webViewDidExitFullscreen:(id)arg1;
- (void)_webViewDidEnterFullscreen:(id)arg1;
- (void)_webViewFullscreenMayReturnToInline:(id)arg1;
- (void)webViewDidClose:(id)arg1;
- (void)_webView:(id)arg1 createWebViewWithConfiguration:(id)arg2 forNavigationAction:(id)arg3 windowFeatures:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)webView:(id)arg1 runJavaScriptTextInputPanelWithPrompt:(id)arg2 defaultText:(id)arg3 initiatedByFrame:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)webView:(id)arg1 runJavaScriptConfirmPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webView:(id)arg1 runJavaScriptAlertPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_webView:(id)arg1 mediaCaptureStateDidChange:(unsigned long long)arg2;
- (void)_webView:(id)arg1 checkUserMediaPermissionForURL:(id)arg2 mainFrameURL:(id)arg3 frameIdentifier:(unsigned long long)arg4 decisionHandler:(CDUnknownBlockType)arg5;
- (void)_webView:(id)arg1 requestUserMediaAuthorizationForDevices:(unsigned long long)arg2 url:(id)arg3 mainFrameURL:(id)arg4 decisionHandler:(CDUnknownBlockType)arg5;
- (void)_webView:(id)arg1 willSnapshotBackForwardListItem:(id)arg2;
- (void)_webViewDidEndNavigationGesture:(id)arg1 withNavigationToBackForwardListItem:(id)arg2;
- (void)_webViewWillEndNavigationGesture:(id)arg1 withNavigationToBackForwardListItem:(id)arg2;
- (void)_webViewDidBeginNavigationGesture:(id)arg1;
- (void)_webView:(id)arg1 didFinishLoadForQuickLookDocumentInMainFrame:(id)arg2;
- (void)_webView:(id)arg1 didStartLoadForQuickLookDocumentInMainFrameWithFileName:(id)arg2 uti:(id)arg3;
- (id)_webCryptoMasterKeyForWebView:(id)arg1;
- (void)_webViewWebProcessDidCrash:(id)arg1;
- (void)_webView:(id)arg1 renderingProgressDidChange:(unsigned long long)arg2;
- (void)_webView:(id)arg1 navigation:(id)arg2 didSameDocumentNavigation:(long long)arg3;
- (void)webView:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (_Bool)_isLowMemoryDevice;
- (void)getApplicationManifestWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)touchIconFetcher;
@property(readonly, nonatomic) _SFWebClipMetadataFetcher *webClipMetadataFetcher;
@property(readonly, nonatomic) _SFInjectedJavaScriptController *activityJSController;
- (void)_webView:(id)arg1 didDismissPreviewViewController:(id)arg2;
- (void)_webView:(id)arg1 commitPreviewedImageWithURL:(id)arg2;
- (void)_webView:(id)arg1 willPreviewImageWithURL:(id)arg2;
- (void)_webView:(id)arg1 commitPreviewedViewController:(id)arg2;
- (id)_webView:(id)arg1 previewViewControllerForAnimatedImageAtURL:(id)arg2 defaultActions:(id)arg3 elementInfo:(id)arg4 imageSize:(struct CGSize)arg5;
- (id)_webView:(id)arg1 previewViewControllerForImage:(id)arg2 alternateURL:(id)arg3 defaultActions:(id)arg4 elementInfo:(id)arg5;
- (id)_webView:(id)arg1 previewViewControllerForURL:(id)arg2 defaultActions:(id)arg3 elementInfo:(id)arg4;
- (id)_webView:(id)arg1 previewViewControllerForURL:(id)arg2;
- (id)tabDocumentForPreviewURL:(id)arg1 relatedToWebView:(id)arg2;
- (void)_didCommitPreviewViewController:(id)arg1;
- (void)_willCommitPreviewViewController:(id)arg1;
- (void)_webView:(id)arg1 navigationDidFinishDocumentLoad:(id)arg2;
- (void)_webView:(id)arg1 navigation:(id)arg2 didFailProvisionalLoadInSubframe:(id)arg3 withError:(id)arg4;
- (void)webView:(id)arg1 didCommitNavigation:(id)arg2;
- (void)_donateTextAllowingDonationWithoutReaderText:(_Bool)arg1;
- (void)_donateTextSoon;
- (void)_clearNavigationSource;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didReceiveServerRedirectForProvisionalNavigation:(id)arg2;
- (void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2;
- (void)webView:(id)arg1 decidePolicyForNavigationResponse:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (_Bool)_handleTwoFingerTapOnLinkWithContext:(id)arg1;
- (void)setMediaCaptureDeviceIcon:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long mediaCaptureDeviceIcon;
- (void)toggleMediaCaptureMuted;
@property(nonatomic) _Bool mediaCaptureEnabled;
- (void)sfWebViewDidEndFormControlInteraction:(id)arg1;
- (void)sfWebViewDidChangeSafeAreaInsets:(id)arg1;
- (void)_checkForAppLink;
- (void)_openAppLinkInApp:(id)arg1 fromOriginalRequest:(id)arg2 updateAppLinkStrategy:(_Bool)arg3 webBrowserState:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (id)tabStateDataForQuickUpdate;
@property(readonly, nonatomic) _SFTabStateData *tabStateData;
- (void)invalidateSourceApplication;
- (void)saveWebArchiveToPath:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setQuickLookDocumentForCurrentBackForwardListItem:(id)arg1;
- (id)quickLookDocumentForCurrentBackForwardListItem;
- (void)_performSafeBrowsingCheckForURL:(id)arg1 isMainFrame:(_Bool)arg2;
- (void)_performSafeBrowsingCheckForURLIfNecessary:(id)arg1 isMainFrame:(_Bool)arg2;
- (_Bool)quickLookDocumentIsReady;
@property(readonly, nonatomic) _SFSafariSharingExtensionController *sharingExtensionController;
- (void)loadTestURL:(id)arg1 withCallback:(CDUnknownBlockType)arg2 pagesNeedingMemoryWarningSent:(id)arg3;
- (void)loadTestURL:(id)arg1 withCallback:(CDUnknownBlockType)arg2;
- (id)suggestedFileNameForQuickLookDocument:(id)arg1;
- (id)dataForQuickLookDocument:(id)arg1;
- (id)suggestedFilenameForDisplayedPDF;
- (id)dataForDisplayedPDF;
@property(copy, nonatomic) NSString *customUserAgent;
- (id)_addTitlePrefixToString:(id)arg1;
- (void)_forceStopLoading;
- (void)_loadStartedDuringSimulatedClickForURL:(id)arg1;
- (void)_updateInitialZoomScaleForPPT;
- (id)_backForwardList;
- (void)loadAlternateHTMLString:(id)arg1 baseURL:(id)arg2 forUnreachableURL:(id)arg3;
- (void)_destroyDocumentView;
- (void)_createDocumentViewWithConfiguration:(id)arg1;
- (void)_createDocumentViewRelatedTo:(id)arg1;
- (id)_webViewConfiguration;
- (void)performAutoFillAction;
- (void)_authenticateForAutoFillIfNeeded;
- (void)presentNextDialogIfNeeded;
- (void)setAllowsRemoteInspection:(_Bool)arg1;
- (_Bool)hasFailedURL;
- (id)expectedOrCurrentURL;
- (id)committedURL;
- (void)becomeFirstResponderWithSelectionMovingForward:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (struct __SecTrust *)_serverTrust;
- (_Bool)mustShowBarsForBackForwardListItem:(id)arg1;
- (void)restoreSessionState:(id)arg1 andNavigate:(_Bool)arg2 fromSafariViewService:(_Bool)arg3;
- (void)restoreSessionState:(id)arg1 andNavigate:(_Bool)arg2;
@property(readonly, nonatomic) _WKSessionState *sessionState;
@property(readonly, nonatomic, getter=isAlive) _Bool alive;
- (void)unhibernateWithRelatedWebView:(id)arg1;
- (void)unhibernate;
- (void)hibernate;
- (void)clearBackForwardList;
- (void)clearBackForwardListKeepingCurrentItem;
- (void)goToBackForwardListItem:(id)arg1;
- (id)_forwardListWithLimit:(unsigned long long)arg1;
- (id)_backListWithLimit:(unsigned long long)arg1;
- (_Bool)isPDFDocument;
- (void)stopLoading;
- (id)_loadNextFallbackURLWithWebClip:(id)arg1;
- (id)loadWebClip:(id)arg1 userDriven:(_Bool)arg2;
- (void)_updateFallbackURLsForUserTypedAddress:(id)arg1;
- (id)loadSearchResultForQuery:(id)arg1;
- (id)loadUserTypedAddress:(id)arg1;
- (void)setOverlaidAccessoryViewsInset:(struct CGSize)arg1;
- (id)pdfView;
- (id)URLString;
- (void)_loadingControllerDidStopLoadingWithError:(id)arg1;
- (void)_didFinishLoading;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)_initWithBrowserController:(id)arg1 configuration:(id)arg2;
- (void)doneWaitingToContinueUserActivity;
- (void)didFailToContinueUserActivity;
- (void)prepareToContinueUserActivity;
- (_Bool)shouldBlockStoreBanner:(id)arg1;
- (void)setStoreBanner:(id)arg1 isPinned:(_Bool)arg2;
- (void)dismissStoreBanner:(id)arg1;
- (void)setClosed:(_Bool)arg1 userDriven:(_Bool)arg2;
- (void)userDidManipulateVisibleRegion;
- (_Bool)canSubscribeToWebFeed;
- (void)_showGenericDownloadAlert;
- (void)downloadDidFinish:(id)arg1;
- (_Bool)_canShowDownloadWithoutPrompting:(id)arg1;
- (void)_showDownload:(id)arg1;
- (_Bool)_showICSControllerForPath:(id)arg1 sourceURL:(id)arg2;
- (void)_showPassBookControllerForPass:(id)arg1;
- (id)resultOfLoadingURL:(id)arg1;
- (id)_resultOfLoadingRequest:(id)arg1 inMainFrame:(_Bool)arg2 userInitiated:(_Bool)arg3;
- (id)_readingListArchiveNextPageLinkForRequest:(id)arg1 targetFrame:(id)arg2;
- (void)_redirectToExternalNavigationResult:(id)arg1 fromOriginalRequest:(id)arg2 promptPolicy:(long long)arg3 isMainFrame:(_Bool)arg4 userAction:(id)arg5;
- (void)loadWindowDotOpenExternalNavigationResult:(id)arg1 fromOriginalRequest:(id)arg2;
- (void)_queueAlertForRedirectToExternalNavigationResult:(id)arg1 fromOriginalRequest:(id)arg2 isMainFrame:(_Bool)arg3 promptPolicy:(long long)arg4 userAction:(id)arg5;
- (void)_addNoFeedAppSupportAlert;
- (void)_completeRedirectToExternalNavigationResult:(id)arg1 fromOriginalRequest:(id)arg2 userCancelled:(_Bool)arg3;
- (void)_cleanUpAfterRedirectToExternalApp;
- (void)_stoppedLoadingResources;
- (void)_startedLoadingResources;
- (void)_setAppBannerWhenPainted:(id)arg1;
- (void)_clearAppBannerIfNotCurrentStoreBanner;
- (id)_EVOrganizationName;
- (void)_invalidateEVOrganizationName;
@property(readonly, nonatomic) _Bool canGoBackToParentTab;
- (_Bool)isSecure;
- (_Bool)isPageEligibileToShowNotSecureWarning;
- (id)forwardListControllerWithLimit:(int)arg1;
- (id)backListControllerWithLimit:(int)arg1;
- (_Bool)canGoForward;
- (_Bool)canGoBack;
- (void)_updateShowingContinuous;
- (int)readingListBookmarkID;
@property(readonly, nonatomic, getter=isShowingErrorPage) _Bool showingErrorPage;
- (_Bool)shouldActivateReaderWhenAvailable;
- (_Bool)currentPageLoadedFromReadingList;
- (void)userTappedReloadButton;
- (void)reloadAllowingContentBlockers:(_Bool)arg1;
- (void)reload;
- (void)goForward;
- (void)goBackToParentTab;
- (void)goBack;
- (void)restoreScrollPositionWithCloudTab:(id)arg1;
- (id)loadCloudTab:(id)arg1;
- (id)loadBookmark:(id)arg1;
- (id)loadURL:(id)arg1 fromBookmark:(id)arg2;
- (void)clearPageLoadStatistics;
- (id)_loadURLInternal:(id)arg1 userDriven:(_Bool)arg2;
- (id)loadURL:(id)arg1 userDriven:(_Bool)arg2;
- (void)snapshotWithSize:(struct CGSize)arg1 topBackdropHeight:(double)arg2 options:(unsigned long long)arg3 completion:(CDUnknownBlockType)arg4;
- (void)snapshotWithSize:(struct CGSize)arg1 options:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)snapshotForWebClipIcon:(CDUnknownBlockType)arg1;
- (void)_updateSnapshotForWebClip:(id)arg1;
- (id)_loadRequest:(id)arg1 userDriven:(_Bool)arg2 shouldOpenExternalURLs:(_Bool)arg3;
- (id)loadRequest:(id)arg1 userDriven:(_Bool)arg2;
@property(readonly, nonatomic) NSString *suggestedTitleForCurrentURL;
- (id)titleForSharing;
- (id)titleForNewBookmark;
- (id)title;
- (_Bool)hasQuickLookContent;
- (_Bool)isLoading;
- (void)clearBrowserController;
- (void)clearTabReuseURL;
- (id)URLForStatePersisting;
@property(readonly, nonatomic) NSURL *cachedCanonicalURLOrURLForSharing;
- (void)_clearCachedCanonicalURL;
- (void)fetchCanonicalURLWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)URLForSharing;
- (id)URL;
- (id)customUserVisibleStringForReadingListBookmarkURL:(id)arg1;
@property(readonly, nonatomic) __weak id <WBSFluidProgressStateSource> currentFluidProgressStateSource;
- (void)fluidProgressRocketAnimationDidComplete;
- (void)endSuppressingProgressAnimationAnimated:(_Bool)arg1;
- (void)endSuppressingProgressAnimation;
- (void)beginSuppressingProgressAnimation;
- (void)clearFluidProgressState;
- (_Bool)createFluidProgressState;
- (void)animateProgressForCompletedDocument;
- (void)_loadingControllerEstimatedProgressChangedTo:(double)arg1;
- (void)_loadingControllerDidStartLoading;
- (void)_loadingControllerWillLoadRequest:(id)arg1 userDriven:(_Bool)arg2;
- (void)_hideQuickLookDocumentView;
- (void)_showQuickLookDocumentView;
- (void)reinsertQuickLookDocumentView;
- (double)estimatedProgress;
- (void)willClose;
- (void)_closeTabDocumentAnimated:(_Bool)arg1;
- (void)stopAdvertisingProactiveActivityContent;
- (void)invalidateUserActivity;
- (void)updateUserActivity;
@property(readonly, nonatomic) UIView *frontView;
- (void)setNeedsNewTabSnapshot;
- (void)unfreezeAfterNavigationGesture:(_Bool)arg1;
- (void)freezeForNavigationGesture;
- (void)_cancelAntiPhishingCheckAndInvalidateSafeBrowsingObserver;
@property(readonly, nonatomic) _SFNavigationBarItem *navigationBarItem;
- (id)initWithTabStateData:(id)arg1 hibernated:(_Bool)arg2 browserController:(id)arg3;
- (id)initWithTitle:(id)arg1 URL:(id)arg2 UUID:(id)arg3 privateBrowsingEnabled:(_Bool)arg4 hibernated:(_Bool)arg5 bookmark:(id)arg6 browserController:(id)arg7 relatedWebView:(id)arg8;
- (void)_removeParentChildTabDocumentRelations;
- (id)_sessionStateWithoutParentItem;
- (void)resetTabViewItems;
- (id)_initWithTitle:(id)arg1 URL:(id)arg2 UUID:(id)arg3 privateBrowsingEnabled:(_Bool)arg4 bookmark:(id)arg5 browserController:(id)arg6 createDocumentView:(CDUnknownBlockType)arg7;
- (void)_updateNavigationBarItem;
- (void)_searchEngineControllerDidBecomeAvailable:(id)arg1;
- (void)updateTabTitle;
- (id)tabBarTitle;
- (id)_titleIncludeLoading:(_Bool)arg1 allowURLStringFallback:(_Bool)arg2;
- (id)_titleIncludeLoading:(_Bool)arg1 allowURLStringFallback:(_Bool)arg2 allowUntitled:(_Bool)arg3;
@property(readonly, nonatomic, getter=isPrivateBrowsingEnabled) _Bool privateBrowsingEnabled;
- (void)dealloc;
- (void)setInitialURLForStatePersisting:(id)arg1 title:(id)arg2;
@property(readonly, copy) NSString *description;
- (id)initWithTitle:(id)arg1 URL:(id)arg2 UUID:(id)arg3 privateBrowsingEnabled:(_Bool)arg4 hibernated:(_Bool)arg5 bookmark:(id)arg6 browserController:(id)arg7;
- (id)initWithBrowserController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

