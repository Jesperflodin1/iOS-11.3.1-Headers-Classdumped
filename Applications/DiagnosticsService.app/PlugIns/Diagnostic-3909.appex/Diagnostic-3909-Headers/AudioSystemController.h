//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "DKDiagnosticController.h"

@class AudioSystemInputs, DAAudioDevice, DAEventNotification, NSMutableArray, NSMutableDictionary, NSNumber;

@interface AudioSystemController : DKDiagnosticController
{
    _Bool _isOriginallyMono;
    _Bool _monoChanged;
    _Bool _balanceChanged;
    DAAudioDevice *_audioDevice;
    DAEventNotification *_eventNotification;
    NSMutableDictionary *_fileNameToURL;
    NSMutableArray *_playResults;
    id <DKResponder> _diagnosticResponder;
    NSNumber *_originalBalance;
    AudioSystemInputs *_inputs;
}

+ (_Bool)setCode:(long long)arg1 forError:(id *)arg2;
@property(retain, nonatomic) AudioSystemInputs *inputs; // @synthesize inputs=_inputs;
@property(nonatomic) _Bool balanceChanged; // @synthesize balanceChanged=_balanceChanged;
@property(nonatomic) _Bool monoChanged; // @synthesize monoChanged=_monoChanged;
@property(retain, nonatomic) NSNumber *originalBalance; // @synthesize originalBalance=_originalBalance;
@property(nonatomic) _Bool isOriginallyMono; // @synthesize isOriginallyMono=_isOriginallyMono;
@property(retain, nonatomic) id <DKResponder> diagnosticResponder; // @synthesize diagnosticResponder=_diagnosticResponder;
@property(retain, nonatomic) NSMutableArray *playResults; // @synthesize playResults=_playResults;
@property(retain, nonatomic) NSMutableDictionary *fileNameToURL; // @synthesize fileNameToURL=_fileNameToURL;
@property(retain, nonatomic) DAEventNotification *eventNotification; // @synthesize eventNotification=_eventNotification;
@property(retain, nonatomic) DAAudioDevice *audioDevice; // @synthesize audioDevice=_audioDevice;
- (void).cxx_destruct;
- (void)setAccessibilityStateIfRequired;
- (_Bool)isBalanceChangeRequired;
- (_Bool)isMonoChangeRequired;
- (void)restoreAccesibilityStateIfRequired;
- (void)teardown;
- (void)cancel;
- (_Bool)isDockRequired;
- (_Bool)confirmDeviceDocked;
- (void)receivedNotification:(id)arg1;
- (void)setUpEventNotifications;
- (void)cleanUpPlayResults;
- (void)failedToExecuteWithError:(id)arg1;
- (void)start;
- (void)setupWithInputs:(id)arg1 responder:(id)arg2;

@end

