/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:30:48 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/VideoProcessors/MetalFilter.bundle/MetalFilter
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol MTLRenderPipelineState, MTLTexture;
#import <MetalFilter/MetalFilter-Structs.h>
@class FigMetalContext;

@interface FigColorCubeMetalFilter : NSObject {

	unsigned long long _yuvFormat;
	id<MTLRenderPipelineState> _colorCubePipelineState[2][2][2];
	id<MTLRenderPipelineState> _colorCubePipelineStateY[2][2][2];
	id<MTLRenderPipelineState> _colorCubePipelineStateUV[2][2][2];
	id<MTLRenderPipelineState> _cubeConvert[2];
	int _cubeDimension;
	id<MTLTexture> _fgCubesTexture;
	id<MTLTexture> _fgCubesTextureTemp;
	id<MTLTexture> _bgCubeTexture;
	id<MTLTexture> _bgCubeTextureTemp;
	BOOL _useBgCube;
	int _inOutFormat;
	BOOL _isSingleFgCube;
	FigMetalContext* _context;

}

@property (readonly) FigMetalContext * context;              //@synthesize context=_context - In the implementation block
+(int)createCubeTexture:(id*)arg1 ofSize:(int)arg2 cubesCount:(int)arg3 textureType:(unsigned long long)arg4 withDevice:(id)arg5 ;
+(int)loadCube:(id)arg1 ofSize:(int)arg2 intoTexture:(id)arg3 toSliceIndex:(int)arg4 ;
+(int)prewarm;
-(id)initWithCommandQueue:(id)arg1 ;
-(void)prewarmMetalInternalShader;
-(void)convertCubeWithSrcTexture:(id)arg1 dstTexture:(id)arg2 isP3Cube:(BOOL)arg3 ;
-(id)createPipelineStateWithVertexFunction:(id)arg1 fragmentName:(id)arg2 isLuma:(BOOL)arg3 useBgCube:(BOOL)arg4 manyFgCubes:(BOOL)arg5 colorSpace:(int)arg6 ;
-(int)createPipelineStatesWithFragmentName:(id)arg1 vertexFunction:(id)arg2 ;
-(int)createPipelineStatesForCubeConversionWithVertexFunction:(id)arg1 ;
-(int)setForegroundCubes:(id)arg1 ;
-(int)setBackgroundCube:(id)arg1 ;
-(void)releaseResources;
-(int)allocateResourcesWithCubeDimension:(int)arg1 maxFgCubesCount:(int)arg2 allocBgCube:(BOOL)arg3 inOutFormat:(int)arg4 ;
-(int)setForegroundCubesWithNames:(id)arg1 data:(id)arg2 ;
-(int)setBackgroundCubeWithName:(id)arg1 data:(id)arg2 ;
-(int)runWithInputPixelBuffer:(CVBufferRef)arg1 mattePixelBuffer:(CVBufferRef)arg2 outputPixelBuffer:(CVBufferRef)arg3 ;
-(int)allocateResourcesWithCubeDimension:(int)arg1 maxFgCubesCount:(int)arg2 allocBgCube:(BOOL)arg3 ;
-(id)init;
-(void)dealloc;
-(FigMetalContext *)context;
-(int)createKernels;
@end

