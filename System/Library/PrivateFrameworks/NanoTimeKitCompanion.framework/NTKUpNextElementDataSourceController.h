/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:24:03 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/NanoTimeKitCompanion.framework/NanoTimeKitCompanion
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/NTKUpNextElementDataSourceDelegate.h>

@protocol OS_dispatch_queue, NTKUpNextElementDataSourceControllerDelegate;
@class NSString, NSMutableSet, NSMutableDictionary, NSRecursiveLock, NSObject, NSMutableArray, NTKUpNextScheduler, NTKUpNextElementDataSource, NSArray;

@interface NTKUpNextElementDataSourceController : NSObject <NTKUpNextElementDataSourceDelegate> {

	NSString* _loggingHeader;
	NSMutableSet* _elements;
	NSMutableDictionary* _elementSectionMap;
	NSMutableDictionary* _elementIdentifierMap;
	NSRecursiveLock* _elementIdentifierMapLock;
	NSObject*<OS_dispatch_queue> _queue;
	NSMutableArray* _updates;
	NTKUpNextScheduler* _updateScheduler;
	NTKUpNextScheduler* _reloadScheduler;
	BOOL _hasUnlockedSinceFirstBoot;
	BOOL _wantsReloadWhilePaused;
	BOOL _isPerformingReload;
	NSMutableArray* _enqueuedBlocks;
	BOOL _willUnload;
	BOOL _allowsLocationUse;
	Class _dataSourceClass;
	NTKUpNextElementDataSource* _dataSource;
	unsigned long long _state;
	id<NTKUpNextElementDataSourceControllerDelegate> _delegate;

}

@property (assign,nonatomic,__weak) id<NTKUpNextElementDataSourceControllerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) Class dataSourceClass;                                                       //@synthesize dataSourceClass=_dataSourceClass - In the implementation block
@property (nonatomic,readonly) NTKUpNextElementDataSource * dataSource;                                     //@synthesize dataSource=_dataSource - In the implementation block
@property (nonatomic,readonly) NSString * bundleIdentifier; 
@property (nonatomic,readonly) NSArray * allElements; 
@property (assign,nonatomic) unsigned long long state;                                                      //@synthesize state=_state - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)_sharedDataSourceQueue;
-(id<NTKUpNextElementDataSourceControllerDelegate>)delegate;
-(void)setDelegate:(id<NTKUpNextElementDataSourceControllerDelegate>)arg1 ;
-(void)dealloc;
-(NTKUpNextElementDataSource *)dataSource;
-(unsigned long long)state;
-(void)setState:(unsigned long long)arg1 ;
-(NSString *)bundleIdentifier;
-(void)resume;
-(void)pause;
-(Class)dataSourceClass;
-(void)setAllowsLocationUse:(BOOL)arg1 ;
-(void)reloadElement:(id)arg1 inSection:(unsigned long long)arg2 ;
-(void)refreshElement:(id)arg1 inSection:(unsigned long long)arg2 ;
-(void)_loadLoggingHeader;
-(void)_queue_performUpdates;
-(void)_queue_reload;
-(void)_handleSignifiantTimeChange:(id)arg1 ;
-(void)_handleDeviceLockStateChange:(id)arg1 ;
-(void)invalidateElements;
-(void)_queue_updateDataSourceLocationUse;
-(void)_performOrEnqueueUpdateBlock:(/*^block*/id)arg1 ;
-(void)_queue_scheduleUpdate:(id)arg1 ;
-(void)reloadElement:(id)arg1 withElementId:(id)arg2 inSection:(unsigned long long)arg3 ;
-(void)reloadElement:(id)arg1 ;
-(void)refreshElement:(id)arg1 ;
-(void)removeElements:(id)arg1 fromSection:(unsigned long long)arg2 ;
-(void)removeElementsWithIds:(id)arg1 ;
-(id)_groupElements:(id)arg1 bySections:(id)arg2 ;
-(id)_elementsForIds:(id)arg1 ;
-(void)_queue_processUpdates:(id)arg1 forSection:(unsigned long long)arg2 ;
-(id)elementOperationQueue;
-(void)addElements:(id)arg1 toSection:(unsigned long long)arg2 ;
-(BOOL)hasElementWithId:(id)arg1 inSection:(unsigned long long)arg2 ;
-(BOOL)isElementWithIdVisible:(id)arg1 ;
-(id)initWithDataSourceClass:(Class)arg1 ;
-(void)prepareToUnload;
-(void)elementWillBecomeVisible:(id)arg1 ;
-(void)elementDidBecomeHidden:(id)arg1 ;
-(NSArray *)allElements;
-(id)logName;
-(id)loggedState;
@end

