/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:24:07 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/NanoTimeKitCompanion.framework/NanoTimeKitCompanion
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue, NTKUpNextDataSourceManagerDelegate;
@class NSMutableArray, NSSet, NSLock, NSObject;

@interface NTKUpNextDataSourceManager : NSObject {

	NSMutableArray* _dataSourceControllers;
	unsigned long long _aggregatedState;
	NSSet* _disabledDataSources;
	NSLock* _lock;
	NSObject*<OS_dispatch_queue> _queue;
	BOOL _paused;
	BOOL _allowsLocationUse;
	NSObject*<OS_dispatch_queue> _coordinatorQueue;
	id<NTKUpNextDataSourceManagerDelegate> _delegate;

}

@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> coordinatorQueue;                       //@synthesize coordinatorQueue=_coordinatorQueue - In the implementation block
@property (nonatomic,retain) NSSet * userDisabledDataSources; 
@property (assign,nonatomic) unsigned long long dataSourceState; 
@property (assign,nonatomic) BOOL allowsLocationUse;                                                //@synthesize allowsLocationUse=_allowsLocationUse - In the implementation block
@property (getter=isPaused,nonatomic,readonly) BOOL paused; 
@property (nonatomic,__weak,readonly) id<NTKUpNextDataSourceManagerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) NSSet * currentDataSourceIdentifiers; 
+(BOOL)shouldPreWarmApplicationWithBundleIdentifier:(id)arg1 ;
+(id)availableDataSourceIdentifiers;
+(BOOL)wantsLocationInUseAssertonForBundleIdentifier:(id)arg1 ;
+(void)loadDataSourceImageForBundleIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
+(void)loadDataSourceTitlesUsingBlock:(/*^block*/id)arg1 ;
+(id)sampleContentForBundleIdentifier:(id)arg1 ;
+(id)_activeDataSourceIdentifiers;
+(id)_dataSourceLoadingQueue;
+(id)_dataSourceImageCache;
+(id)_dataSourceIdentifierMap;
+(id)_dataSourceTitleCache;
+(id)_availableDataSourceIdentifiers;
+(id)_removedDataSourceIdentifiers;
-(id<NTKUpNextDataSourceManagerDelegate>)delegate;
-(void)dealloc;
-(BOOL)isPaused;
-(id)initWithQueue:(id)arg1 delegate:(id)arg2 ;
-(void)setAllowsLocationUse:(BOOL)arg1 ;
-(BOOL)allowsLocationUse;
-(void)_availableDataSourcesDidChange;
-(void)_loadDataSourceWithIdentifier:(id)arg1 ;
-(void)enumerateElementDataSourceControllersAsync:(/*^block*/id)arg1 ;
-(void)enumerateElementDataSourceControllers:(/*^block*/id)arg1 ;
-(void)_unloadDataSourceWithIdentifier:(id)arg1 ;
-(unsigned long long)dataSourceState;
-(void)setDataSourceState:(unsigned long long)arg1 ;
-(void)pauseDataSources;
-(void)resumeDataSources;
-(NSSet *)userDisabledDataSources;
-(void)setUserDisabledDataSources:(NSSet *)arg1 ;
-(NSSet *)currentDataSourceIdentifiers;
-(NSObject*<OS_dispatch_queue>)coordinatorQueue;
@end

