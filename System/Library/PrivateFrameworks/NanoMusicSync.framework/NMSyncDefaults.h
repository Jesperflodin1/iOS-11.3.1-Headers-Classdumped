/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:23:56 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/NanoMusicSync.framework/NanoMusicSync
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/NMSNotificationDispatcherDelegate.h>

@protocol OS_dispatch_queue;
@class NSString, NSObject, NPSDomainAccessor, NSDictionary, NMSNotificationDispatcher, NSNumber, NSDate, MPMediaPlaylist, NSArray, NSData;

@interface NMSyncDefaults : NSObject <NMSNotificationDispatcherDelegate> {

	BOOL _needsSync;
	NSString* _pairingID;
	NSObject*<OS_dispatch_queue> _domainAccessorQueue;
	NPSDomainAccessor* _domainAccessor;
	NSDictionary* _notifiersDict;
	NMSNotificationDispatcher* _settingsNotifier;
	NMSNotificationDispatcher* _pinningSettingsNotifier;
	NMSNotificationDispatcher* _pinningSelectionsNotifier;
	NMSNotificationDispatcher* _recoSelectionsNotifier;
	NMSNotificationDispatcher* _libraryRecoNotifier;
	NMSNotificationDispatcher* _storeRecoNotifier;
	NMSNotificationDispatcher* _syncStateNotifier;
	NSNumber* _assetSyncLimit;
	NSDate* _modificationDate;
	NSNumber* _lastFullySentAssetSyncPlaylistPersistentID;
	NSNumber* _lastFullySentAssetSyncPlaylistVersion;
	unsigned long long _assetSyncLimitType;
	unsigned long long _assetSyncType;
	NSNumber* _assetSyncPlaylistPersistentID;

}

@property (nonatomic,retain) MPMediaPlaylist * assetSyncPlaylist; 
@property (assign,nonatomic) BOOL allowOffChargerAssetSync; 
@property (nonatomic,readonly) NSDate * modificationDate;                                                                    //@synthesize modificationDate=_modificationDate - In the implementation block
@property (nonatomic,copy) NSNumber * assetSyncLimit;                                                                        //@synthesize assetSyncLimit=_assetSyncLimit - In the implementation block
@property (nonatomic,copy) NSArray * pinnedPlaylists; 
@property (nonatomic,retain) NSNumber * workoutPlaylistID; 
@property (nonatomic,copy) NSArray * pinnedAlbums; 
@property (nonatomic,copy) NSArray * libraryRecommendationPlaylists; 
@property (nonatomic,copy) NSArray * libraryRecommendationAlbums; 
@property (assign,nonatomic) BOOL shouldUseLibraryRecommendations; 
@property (nonatomic,copy) NSDictionary * musicRecommendationDict; 
@property (nonatomic,copy) NSData * cachedRecommendationsData; 
@property (nonatomic,copy) NSDate * recommendationExpirationDate; 
@property (nonatomic,copy,readonly) NSNumber * availableMediaStorageOnWatch; 
@property (nonatomic,copy) NSNumber * lastFullySentAssetSyncPlaylistPersistentID;                                            //@synthesize lastFullySentAssetSyncPlaylistPersistentID=_lastFullySentAssetSyncPlaylistPersistentID - In the implementation block
@property (nonatomic,copy) NSNumber * lastFullySentAssetSyncPlaylistVersion;                                                 //@synthesize lastFullySentAssetSyncPlaylistVersion=_lastFullySentAssetSyncPlaylistVersion - In the implementation block
@property (nonatomic,copy) NSDate * lastMusicAppActiveDate; 
@property (nonatomic,copy) NSDate * lastSiriFaceActiveDate; 
@property (nonatomic,copy) NSDictionary * clientPinningSettingsToken; 
@property (nonatomic,readonly) NSDictionary * syncStateDict; 
@property (assign,nonatomic) unsigned long long assetSyncLimitType;                                                          //@synthesize assetSyncLimitType=_assetSyncLimitType - In the implementation block
@property (assign,nonatomic) unsigned long long assetSyncType;                                                               //@synthesize assetSyncType=_assetSyncType - In the implementation block
@property (setter=setAssetSyncPlaylistPersistentID:,nonatomic,retain) NSNumber * assetSyncPlaylistPersistentID;              //@synthesize assetSyncPlaylistPersistentID=_assetSyncPlaylistPersistentID - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedDefaults;
-(id)init;
-(NSString *)description;
-(NSDate *)modificationDate;
-(NSNumber *)availableMediaStorageOnWatch;
-(NSNumber *)assetSyncLimit;
-(NSArray *)pinnedAlbums;
-(NSArray *)pinnedPlaylists;
-(void)setPinnedPlaylists:(NSArray *)arg1 ;
-(void)setPinnedAlbums:(NSArray *)arg1 ;
-(NSNumber *)workoutPlaylistID;
-(void)setWorkoutPlaylistID:(NSNumber *)arg1 ;
-(NSDictionary *)clientPinningSettingsToken;
-(void)setClientPinningSettingsToken:(NSDictionary *)arg1 ;
-(BOOL)shouldUseLibraryRecommendations;
-(NSArray *)libraryRecommendationPlaylists;
-(NSArray *)libraryRecommendationAlbums;
-(void)_perDeviceSettingsDidResetNotification:(id)arg1 ;
-(void)_setupNotifiers;
-(void)_reloadPropertiesFromDefaultsOnMainThread;
-(NSDictionary *)musicRecommendationDict;
-(void)_removeOldMusicRecommendationsInfoIfPossible;
-(BOOL)_deviceHasCapability:(id)arg1 forCapabilitiesKey:(id)arg2 ;
-(id)_objectForKey:(id)arg1 domain:(id)arg2 ;
-(void)_addCapability:(id)arg1 forCapabilitiesKey:(id)arg2 ;
-(void)_setObject:(id)arg1 forKey:(id)arg2 domain:(id)arg3 ;
-(void)_reloadPropertiesFromDefaults;
-(void)_resetDomainAccessor;
-(void)_migrateDataIfNecessary;
-(void)_updateMediaCapacityIfNecessary;
-(id)_companionSidePerDeviceDefaults;
-(void)_clearAssetSyncPlaylistDependentDefaults;
-(void)_writePropertiesToDefaults;
-(void)beginBatchUpdates;
-(id)_defaultPlaylistPersistentID;
-(unsigned long long)assetSyncLimitType;
-(unsigned long long)_spaceQuotaForNumberOfSongs:(unsigned long long)arg1 ;
-(void)_addPhoneCapability:(id)arg1 ;
-(void)_removeObjectForKey:(id)arg1 domain:(id)arg2 ;
-(void)endBatchUpdates;
-(id)_playlistPersistentIDForPlaylistName:(id)arg1 ;
-(void)_setNeedsSynchronize;
-(void)_setLegacyObject:(id)arg1 forKey:(id)arg2 ifRemoteDeviceMissingCapability:(id)arg3 ;
-(BOOL)_boolForKey:(id)arg1 domain:(id)arg2 defaultValue:(BOOL)arg3 ;
-(void)_setBool:(BOOL)arg1 forKey:(id)arg2 domain:(id)arg3 ;
-(BOOL)_continueUsingMusicRecommendationKey;
-(void)_preSeed2_setMusicRecommendationDict:(id)arg1 ;
-(BOOL)_watchHasCapability:(id)arg1 ;
-(void)_notifyChangesForKey:(id)arg1 ;
-(void)dispatcherDidReceiveNotificationFromRemoteDevice:(id)arg1 ;
-(void)dispatcherDidReceiveNotificationFromOtherProcess:(id)arg1 ;
-(BOOL)_phoneHasCapability:(id)arg1 ;
-(void)_addWatchCapability:(id)arg1 ;
-(void)setAssetSyncLimitType:(unsigned long long)arg1 ;
-(void)setAssetSyncLimit:(NSNumber *)arg1 ;
-(void)setAssetSyncType:(unsigned long long)arg1 ;
-(void)setAssetSyncPlaylistPersistentID:(NSNumber *)arg1 ;
-(void)setLastFullySentAssetSyncPlaylistPersistentID:(NSNumber *)arg1 ;
-(void)setLastFullySentAssetSyncPlaylistVersion:(NSNumber *)arg1 ;
-(BOOL)allowOffChargerAssetSync;
-(void)setAllowOffChargerAssetSync:(BOOL)arg1 ;
-(void)setLibraryRecommendationAlbums:(NSArray *)arg1 ;
-(void)setLibraryRecommendationPlaylists:(NSArray *)arg1 ;
-(void)setShouldUseLibraryRecommendations:(BOOL)arg1 ;
-(void)setMusicRecommendationDict:(NSDictionary *)arg1 ;
-(NSDate *)recommendationExpirationDate;
-(void)setRecommendationExpirationDate:(NSDate *)arg1 ;
-(NSData *)cachedRecommendationsData;
-(void)setCachedRecommendationsData:(NSData *)arg1 ;
-(NSDate *)lastMusicAppActiveDate;
-(void)setLastMusicAppActiveDate:(NSDate *)arg1 ;
-(NSDate *)lastSiriFaceActiveDate;
-(void)setLastSiriFaceActiveDate:(NSDate *)arg1 ;
-(NSDictionary *)syncStateDict;
-(NSNumber *)lastFullySentAssetSyncPlaylistPersistentID;
-(NSNumber *)lastFullySentAssetSyncPlaylistVersion;
-(unsigned long long)assetSyncType;
-(NSNumber *)assetSyncPlaylistPersistentID;
-(id)_associatedObject;
-(MPMediaPlaylist *)assetSyncPlaylist;
-(void)setAssetSyncPlaylist:(MPMediaPlaylist *)arg1 ;
@end

