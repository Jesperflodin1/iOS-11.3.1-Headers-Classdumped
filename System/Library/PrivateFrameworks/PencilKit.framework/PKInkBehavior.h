/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:25:35 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/PencilKit.framework/PencilKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <PencilKit/PencilKit-Structs.h>
@class NSString;

@interface PKInkBehavior : NSObject {

	vector<PKOutputFunction, std::__1::allocator<PKOutputFunction> >* _radiusOutput;
	vector<PKOutputFunction, std::__1::allocator<PKOutputFunction> >* _opacityOutput;
	vector<PKOutputFunction, std::__1::allocator<PKOutputFunction> >* _edgeWidthOutput;
	vector<PKOutputFunction, std::__1::allocator<PKOutputFunction> >* _aspectRatioOutput;
	vector<PKOutputFunction, std::__1::allocator<PKOutputFunction> >* _brushOpacityOutput;
	double _baseRadiusStylus;
	double _baseRadiusTouchPad;
	double _baseRadiusTouchPhone;
	BOOL _rotateEachParticle;
	BOOL _randomRotation;
	BOOL _adjustEndCapParticleAlpha;
	BOOL _variableSnappedWidth;
	BOOL _usesAzimuth;
	BOOL _isEraser;
	BOOL _isObjectEraser;
	BOOL _immutableVelocity;
	BOOL _showBrushIndicator;
	BOOL _timeDependent;
	unsigned _particleCount;
	NSString* _actionName;
	NSString* _textureName;
	NSString* _accessibilityToolName;
	NSString* _accessibilityToolSelectedString;
	NSString* _toolIcon;
	unsigned long long _type;
	unsigned long long _blendMode;
	double _baseAlpha;
	double _blendAlpha;
	double _targetMultiple;
	double _particleSpacing;
	double _dynamicStep;
	double _touchStartCapTime;
	double _touchStartCapFade;
	double _touchEndCapTime;
	double _touchEndCapFade;
	double _stylusSmoothing;
	double _touchSmoothing;
	double _velocitySmoothing;
	double _rulerOffsetScale;
	double _rulerOffsetConstant;
	CGSize _particleSize;

}

@property (nonatomic,copy) NSString * actionName;                                     //@synthesize actionName=_actionName - In the implementation block
@property (nonatomic,copy) NSString * textureName;                                    //@synthesize textureName=_textureName - In the implementation block
@property (assign,nonatomic) NSString * accessibilityToolName;                        //@synthesize accessibilityToolName=_accessibilityToolName - In the implementation block
@property (assign,nonatomic) NSString * accessibilityToolSelectedString;              //@synthesize accessibilityToolSelectedString=_accessibilityToolSelectedString - In the implementation block
@property (nonatomic,copy) NSString * toolIcon;                                       //@synthesize toolIcon=_toolIcon - In the implementation block
@property (assign,nonatomic) unsigned long long type;                                 //@synthesize type=_type - In the implementation block
@property (assign,nonatomic) unsigned long long blendMode;                            //@synthesize blendMode=_blendMode - In the implementation block
@property (assign,nonatomic) double baseAlpha;                                        //@synthesize baseAlpha=_baseAlpha - In the implementation block
@property (assign,nonatomic) double blendAlpha;                                       //@synthesize blendAlpha=_blendAlpha - In the implementation block
@property (assign,nonatomic) double targetMultiple;                                   //@synthesize targetMultiple=_targetMultiple - In the implementation block
@property (assign,nonatomic) double particleSpacing;                                  //@synthesize particleSpacing=_particleSpacing - In the implementation block
@property (assign,nonatomic) double dynamicStep;                                      //@synthesize dynamicStep=_dynamicStep - In the implementation block
@property (assign,nonatomic) unsigned particleCount;                                  //@synthesize particleCount=_particleCount - In the implementation block
@property (assign,nonatomic) CGSize particleSize;                                     //@synthesize particleSize=_particleSize - In the implementation block
@property (assign,nonatomic) BOOL rotateEachParticle;                                 //@synthesize rotateEachParticle=_rotateEachParticle - In the implementation block
@property (assign,nonatomic) BOOL randomRotation;                                     //@synthesize randomRotation=_randomRotation - In the implementation block
@property (assign,nonatomic) BOOL adjustEndCapParticleAlpha;                          //@synthesize adjustEndCapParticleAlpha=_adjustEndCapParticleAlpha - In the implementation block
@property (assign,nonatomic) BOOL variableSnappedWidth;                               //@synthesize variableSnappedWidth=_variableSnappedWidth - In the implementation block
@property (assign,nonatomic) double touchStartCapTime;                                //@synthesize touchStartCapTime=_touchStartCapTime - In the implementation block
@property (assign,nonatomic) double touchStartCapFade;                                //@synthesize touchStartCapFade=_touchStartCapFade - In the implementation block
@property (assign,nonatomic) double touchEndCapTime;                                  //@synthesize touchEndCapTime=_touchEndCapTime - In the implementation block
@property (assign,nonatomic) double touchEndCapFade;                                  //@synthesize touchEndCapFade=_touchEndCapFade - In the implementation block
@property (assign,nonatomic) BOOL usesAzimuth;                                        //@synthesize usesAzimuth=_usesAzimuth - In the implementation block
@property (assign,nonatomic) BOOL isEraser;                                           //@synthesize isEraser=_isEraser - In the implementation block
@property (assign,nonatomic) BOOL isObjectEraser;                                     //@synthesize isObjectEraser=_isObjectEraser - In the implementation block
@property (assign,nonatomic) double stylusSmoothing;                                  //@synthesize stylusSmoothing=_stylusSmoothing - In the implementation block
@property (assign,nonatomic) double touchSmoothing;                                   //@synthesize touchSmoothing=_touchSmoothing - In the implementation block
@property (assign,nonatomic) double velocitySmoothing;                                //@synthesize velocitySmoothing=_velocitySmoothing - In the implementation block
@property (assign,nonatomic) BOOL immutableVelocity;                                  //@synthesize immutableVelocity=_immutableVelocity - In the implementation block
@property (assign,nonatomic) BOOL showBrushIndicator;                                 //@synthesize showBrushIndicator=_showBrushIndicator - In the implementation block
@property (assign,nonatomic) double rulerOffsetScale;                                 //@synthesize rulerOffsetScale=_rulerOffsetScale - In the implementation block
@property (assign,nonatomic) double rulerOffsetConstant;                              //@synthesize rulerOffsetConstant=_rulerOffsetConstant - In the implementation block
@property (assign,nonatomic) BOOL timeDependent;                                      //@synthesize timeDependent=_timeDependent - In the implementation block
+(id)plistDictionaryForInk:(id)arg1 ;
-(id)init;
-(void)setType:(unsigned long long)arg1 ;
-(unsigned long long)type;
-(unsigned long long)blendMode;
-(void)setBlendMode:(unsigned long long)arg1 ;
-(void)setActionName:(NSString *)arg1 ;
-(NSString *)actionName;
-(void)setParticleSize:(CGSize)arg1 ;
-(BOOL)isEraser;
-(BOOL)showBrushIndicator;
-(double)alphaForStroke:(id)arg1 ;
-(BOOL)adjustEndCapParticleAlpha;
-(id)shaderFrom:(id)arg1 ;
-(double)particleSpacing;
-(double)dynamicStep;
-(BOOL)randomRotation;
-(BOOL)rotateEachParticle;
-(double)targetMultiple;
-(double)blendAlpha;
-(BOOL)timeDependent;
-(PKStrokePoint)outputTimePoint:(PKStrokePoint)arg1 atTime:(double)arg2 stillChanging:(BOOL*)arg3 ;
-(id)initWithInk:(id)arg1 version:(unsigned long long)arg2 ;
-(void)loadInkWithName:(id)arg1 version:(unsigned long long)arg2 ;
-(void)loadInkWithDictionary:(id)arg1 ;
-(void)loadBaseRadius:(id)arg1 ;
-(vector<PKOutputFunction, std::__1::allocator<PKOutputFunction> >*)loadOutput:(id)arg1 ;
-(void)verifyParameters;
-(unique_ptr<PKFunction, std::__1::default_delete<PKFunction> >*)loadFunction:(id)arg1 ;
-(void)validatePiecewiseBezierFunction:(PKFunctionPiecewiseBezier*)arg1 ;
-(double)solve:(vector<PKOutputFunction, std::__1::allocator<PKOutputFunction> >*)arg1 forPoint:(SCD_Struct_PK21)arg2 context:(SCD_Struct_PK22*)arg3 ;
-(double)solveForTime:(vector<PKOutputFunction, std::__1::allocator<PKOutputFunction> >*)arg1 forTime:(double)arg2 stillChanging:(BOOL*)arg3 ;
-(id)setupParticleShader:(id)arg1 resourceHandler:(id)arg2 ;
-(unsigned)particleTexture;
-(id)initWithInk:(id)arg1 ;
-(double)brushOpacityForPoint:(SCD_Struct_PK21)arg1 context:(SCD_Struct_PK22*)arg2 ;
-(PKStrokePoint)outputForPoint:(SCD_Struct_PK21)arg1 context:(SCD_Struct_PK22*)arg2 ;
-(NSString *)accessibilityToolName;
-(NSString *)accessibilityToolSelectedString;
-(double)baseRadiusForInputType:(long long)arg1 ;
-(double)rulerOffsetForBaseValues:(PKStrokePoint)arg1 inputType:(long long)arg2 inputScale:(double)arg3 ;
-(NSString *)textureName;
-(void)setTextureName:(NSString *)arg1 ;
-(void)setAccessibilityToolName:(NSString *)arg1 ;
-(void)setAccessibilityToolSelectedString:(NSString *)arg1 ;
-(NSString *)toolIcon;
-(void)setToolIcon:(NSString *)arg1 ;
-(double)baseAlpha;
-(void)setBaseAlpha:(double)arg1 ;
-(void)setBlendAlpha:(double)arg1 ;
-(void)setTargetMultiple:(double)arg1 ;
-(void)setParticleSpacing:(double)arg1 ;
-(void)setDynamicStep:(double)arg1 ;
-(void)setParticleCount:(unsigned)arg1 ;
-(void)setRotateEachParticle:(BOOL)arg1 ;
-(void)setRandomRotation:(BOOL)arg1 ;
-(void)setAdjustEndCapParticleAlpha:(BOOL)arg1 ;
-(BOOL)variableSnappedWidth;
-(void)setVariableSnappedWidth:(BOOL)arg1 ;
-(double)touchStartCapTime;
-(void)setTouchStartCapTime:(double)arg1 ;
-(double)touchStartCapFade;
-(void)setTouchStartCapFade:(double)arg1 ;
-(double)touchEndCapTime;
-(void)setTouchEndCapTime:(double)arg1 ;
-(double)touchEndCapFade;
-(void)setTouchEndCapFade:(double)arg1 ;
-(BOOL)usesAzimuth;
-(void)setUsesAzimuth:(BOOL)arg1 ;
-(void)setIsEraser:(BOOL)arg1 ;
-(BOOL)isObjectEraser;
-(void)setIsObjectEraser:(BOOL)arg1 ;
-(double)stylusSmoothing;
-(void)setStylusSmoothing:(double)arg1 ;
-(double)touchSmoothing;
-(void)setTouchSmoothing:(double)arg1 ;
-(double)velocitySmoothing;
-(void)setVelocitySmoothing:(double)arg1 ;
-(BOOL)immutableVelocity;
-(void)setImmutableVelocity:(BOOL)arg1 ;
-(void)setShowBrushIndicator:(BOOL)arg1 ;
-(double)rulerOffsetScale;
-(void)setRulerOffsetScale:(double)arg1 ;
-(double)rulerOffsetConstant;
-(void)setRulerOffsetConstant:(double)arg1 ;
-(void)setTimeDependent:(BOOL)arg1 ;
-(unsigned)particleCount;
-(CGSize)particleSize;
@end

