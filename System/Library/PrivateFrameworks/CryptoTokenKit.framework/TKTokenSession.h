/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:20:27 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/CryptoTokenKit.framework/CryptoTokenKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_xpc_object, OS_dispatch_queue, TKTokenSessionDelegate;
#import <CryptoTokenKit/CryptoTokenKit-Structs.h>
@class NSObject, TKToken, LAContext, NSDictionary, NSNumber;

@interface TKTokenSession : NSObject {

	NSObject*<OS_xpc_object> _clientConnection;
	NSObject*<OS_dispatch_queue> _sessionQueue;
	TKToken* _token;
	id<TKTokenSessionDelegate> _delegate;
	LAContext* _LAContext;
	NSDictionary* _parameters;
	NSNumber* _callerPID;

}

@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> sessionQueue;              //@synthesize sessionQueue=_sessionQueue - In the implementation block
@property (retain) LAContext * LAContext;                                              //@synthesize LAContext=_LAContext - In the implementation block
@property (retain) NSDictionary * parameters;                                          //@synthesize parameters=_parameters - In the implementation block
@property (retain) NSNumber * callerPID;                                               //@synthesize callerPID=_callerPID - In the implementation block
@property (readonly) NSObject*<OS_xpc_object> clientConnection;                        //@synthesize clientConnection=_clientConnection - In the implementation block
@property (readonly) id<TKTokenSessionPrivateDelegate> privateDelegate; 
@property (readonly) TKToken * token;                                                  //@synthesize token=_token - In the implementation block
@property (__weak) id<TKTokenSessionDelegate> delegate;                                //@synthesize delegate=_delegate - In the implementation block
-(id<TKTokenSessionDelegate>)delegate;
-(void)setDelegate:(id<TKTokenSessionDelegate>)arg1 ;
-(NSDictionary *)parameters;
-(void)setParameters:(NSDictionary *)arg1 ;
-(TKToken *)token;
-(NSObject*<OS_dispatch_queue>)sessionQueue;
-(id<TKTokenSessionPrivateDelegate>)privateDelegate;
-(void)terminate;
-(void)setLAContext:(LAContext *)arg1 ;
-(void)setCallerPID:(NSNumber *)arg1 ;
-(void)assignClientConnection:(id)arg1 ;
-(BOOL)beginRequest:(long long)arg1 error:(id*)arg2 ;
-(void)endRequest;
-(BOOL)handleOperation:(long long)arg1 auditToken:(SCD_Struct_TK4)arg2 event:(id)arg3 reply:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(NSNumber *)callerPID;
-(LAContext *)LAContext;
-(void)evaluateAuthOperation:(id)arg1 auditToken:(SCD_Struct_TK4)arg2 context:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)finalizeAuthOperation:(id)arg1 evaluatedAuthOperation:(id)arg2 auditToken:(SCD_Struct_TK4)arg3 reply:(/*^block*/id)arg4 ;
-(void)evaluateAuthOperation:(id)arg1 context:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)beginAuthForOperation:(long long)arg1 constraint:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)getAccessControlOfObject:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)getPublicKeyDataOfObject:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)getDataOfObject:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)signData:(id)arg1 usingKey:(id)arg2 algorithm:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)decryptData:(id)arg1 usingKey:(id)arg2 algorithm:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)performKeyExchangeWithPublicKey:(id)arg1 usingKey:(id)arg2 algorithm:(id)arg3 parameters:(id)arg4 reply:(/*^block*/id)arg5 ;
-(void)checkOperation:(long long)arg1 usingKey:(id)arg2 algorithm:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)completeReply:(id)arg1 objectID:(id)arg2 attributes:(id)arg3 error:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)createObjectWithAttributes:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)updateObject:(id)arg1 attributes:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)deleteObject:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)controlWithAttributes:(id)arg1 reply:(/*^block*/id)arg2 ;
-(BOOL)handleEvaluateAccessControlEvent:(id)arg1 auditToken:(SCD_Struct_TK4)arg2 reply:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(BOOL)handleGetObjectAccessControlEvent:(id)arg1 reply:(id)arg2 objectID:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(BOOL)handleGetPublicKeyEvent:(id)arg1 reply:(id)arg2 objectID:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(BOOL)handleReadDataEvent:(id)arg1 reply:(id)arg2 objectID:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(BOOL)handlePerformOperationEvent:(id)arg1 reply:(id)arg2 objectID:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(BOOL)handleCreateObjectEvent:(id)arg1 reply:(id)arg2 attributes:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(BOOL)handleUpdateObjectEvent:(id)arg1 reply:(id)arg2 objectID:(id)arg3 attributes:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(BOOL)handleDeleteObjectEvent:(id)arg1 reply:(id)arg2 objectID:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(BOOL)handleControlEvent:(id)arg1 reply:(id)arg2 attributes:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(BOOL)handleCopyIdentitiesEvent:(id)arg1 reply:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(BOOL)handleCopyItemsEvent:(id)arg1 reply:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(NSObject*<OS_xpc_object>)clientConnection;
-(id)initWithToken:(id)arg1 ;
@end

