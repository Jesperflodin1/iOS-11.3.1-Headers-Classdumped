/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:13:53 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AvatarKit/AvatarKit-Structs.h>
#import <AvatarKit/AVTAvatarView.h>
#import <libobjc.A.dylib/ARRecordingTechniqueDelegate.h>

@protocol OS_dispatch_semaphore, OS_dispatch_queue;
@class ARSession, ARConfiguration, ARRecordingTechnique, NSObject, NSLock, CAAnimation, NSURL, SCNNode, SCNMaterial, NSArray, NSMutableData, CAAnimationGroup, AVCaptureSession, AVCaptureMovieFileOutput, AVPlayer, AVAssetWriterInput, AVAssetWriter, NSTimer, AVTPuppetDebugView, NSMutableArray, NSDictionary, NSString;

@interface AVTPuppetView : AVTAvatarView <ARRecordingTechniqueDelegate> {

	ARSession* _arSession;
	ARConfiguration* _faceTracking;
	ARRecordingTechnique* _recordingTechnique;
	NSObject*<OS_dispatch_semaphore> _recordingSemaphore;
	NSLock* _trackingDataLock;
	double _lastTrackingDate;
	double _currentlyRenderedTrackingDate;
	unsigned _blendShapesCount;
	CAAnimation* _backedAnimation;
	BOOL _playBackedAnimation;
	BOOL _disableRendering;
	int _isFading;
	BOOL _forceFaceTrackingOff;
	BOOL _trackingIsPaused;
	BOOL _directRetargetingMode;
	NSURL* _faceTrackingRecordingURL;
	SCD_Struct_AV4 _trackingData;
	long long _frame_id;
	unsigned long long _lastTrackingCaptureTimestamp;
	unsigned long long _lastTrackingUpdateTimestamp;
	unsigned long long _noTrackingFrameCount;
	BOOL _enableGazeCorrection;
	SCNNode* _trackingLostIndicator;
	BOOL _trackingLostIndicatorVisible;
	BOOL _waitMetalAndReplay;
	SCNNode* _neckNode;
	SCNNode* _neckPivotNode;
	SCNNode* _headNode;
	SCNMaterial* _shadowPlaneMaterial;
	SCNNode* _whitePlane;
	int* _weightIndexIndirection;
	int _morphTargetCount;
	NSArray* _blendShapeNames;
	double _actionT0;
	BOOL _actionStarted;
	BOOL _recording;
	NSMutableData* _rawTimesData;
	NSMutableData* _rawBlendShapesData;
	NSMutableData* _rawTransformsData;
	double* _rawTimes;
	float* _rawBlendShapes;
	SCD_Struct_AV5* _rawTransforms;
	int _recordedCount;
	int _recordingCapacity;
	CAAnimationGroup* _recordedAnimationGroup;
	AVCaptureSession* _audioCaptureSession;
	AVCaptureMovieFileOutput* _movieFileOutput;
	AVPlayer* _audioPlayer;
	AVAssetWriterInput* _audioWriterInput;
	AVAssetWriter* _audioWriter;
	NSLock* _audioLock;
	SCD_Struct_AV6 _currentAudioTime;
	SCD_Struct_AV6 _startAudioTime;
	SCD_Struct_AV6 _stopAudioTime;
	long long _recordedSampleCount;
	BOOL _audioIsRecording;
	double _lastAudioPlayerTime;
	double _lastAudioSystemTime;
	BOOL _playing;
	BOOL _mute;
	BOOL _faceIsTracked;
	BOOL _captureImageIsTooDark;
	BOOL _transitioningFromSnapshot;
	BOOL _shouldPauseFaceTracking;
	BOOL _exportingMovie;
	SCNNode* _specializedLighting;
	SCNNode* _defaultLighting;
	double _t0;
	int _benchFrameCounter;
	NSLock* _lock;
	SCD_Struct_AV8* _perfTimes;
	NSTimer* _perfTimeRefreshTimer;
	SCD_Struct_AV9 _perfPacket;
	BOOL _packetNeedRecording;
	int _droppedFrameCount;
	double _timeBetweenARFrame;
	double _lastARFrameTime;
	AVTPuppetDebugView* _debugView;
	BOOL _doubleBuffer;
	NSMutableArray* _droppedDoubleBufferFrames;
	long long _preferredFramesPerSecond_user;
	long long _preferredFramesPerSecond_thermal;
	NSObject*<OS_dispatch_queue> _preloadQueue;
	BOOL _showPerfHUD;

}

@property (getter=isRecording,nonatomic,readonly) BOOL recording;                              //@synthesize recording=_recording - In the implementation block
@property (getter=isPreviewing,nonatomic,readonly) BOOL previewing; 
@property (nonatomic,readonly) BOOL faceIsTracked;                                             //@synthesize faceIsTracked=_faceIsTracked - In the implementation block
@property (nonatomic,readonly) BOOL captureImageIsTooDark;                                     //@synthesize captureImageIsTooDark=_captureImageIsTooDark - In the implementation block
@property (nonatomic,readonly) BOOL faceIsFullyActive; 
@property (assign,getter=faceTrackingIsPaused,nonatomic) BOOL faceTrackingPaused; 
@property (assign,nonatomic) BOOL mute;                                                        //@synthesize mute=_mute - In the implementation block
@property (copy) NSURL * faceTrackingRecordingURL; 
@property (assign,nonatomic) BOOL playBakedAnimation; 
@property (assign,nonatomic) BOOL disableRendering; 
@property (assign,nonatomic) BOOL showPerfHUD;                                                 //@synthesize showPerfHUD=_showPerfHUD - In the implementation block
@property (assign,nonatomic) BOOL directRetargetingMode;                                       //@synthesize directRetargetingMode=_directRetargetingMode - In the implementation block
@property (readonly) ARSession * arSession; 
@property (assign,nonatomic) BOOL enableGazeCorrection;                                        //@synthesize enableGazeCorrection=_enableGazeCorrection - In the implementation block
@property (nonatomic,retain) NSDictionary * puppetState; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(BOOL)usesInternalTrackingPipeline;
+(SCNVector4)applyGazeCorrectionWithInputAngle:tranlation:;
+(void)setUsesInternalTrackingPipeline:(BOOL)arg1 ;
-(void)setup;
-(id)init;
-(void)layoutSubviews;
-(void)setBackgroundColor:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)dealloc;
-(void)setPreferredFramesPerSecond:(long long)arg1 ;
-(BOOL)isPreviewing;
-(void)session:(id)arg1 didUpdateFrame:(id)arg2 ;
-(void)session:(id)arg1 didFailWithError:(id)arg2 ;
-(void)sessionWasInterrupted:(id)arg1 ;
-(void)sessionInterruptionEnded:(id)arg1 ;
-(void)session:(id)arg1 didOutputAudioSampleBuffer:(opaqueCMSampleBufferRef)arg2 ;
-(long long)preferredFramesPerSecond;
-(void)setMute:(BOOL)arg1 ;
-(BOOL)mute;
-(double)_renderer:(id)arg1 inputTimeForCurrentFrameWithTime:(double)arg2 ;
-(void)renderer:(id)arg1 didRenderScene:(id)arg2 atTime:(double)arg3 ;
-(void)renderer:(id)arg1 willRenderScene:(id)arg2 atTime:(double)arg3 ;
-(void)renderer:(id)arg1 updateAtTime:(double)arg2 ;
-(void)_drawAtTime:(double)arg1 ;
-(BOOL)disableRendering;
-(BOOL)isRecording;
-(void)cancelRecording;
-(void)stopPlayingAudio;
-(void)stopRecording;
-(void)startRecording;
-(BOOL)recording;
-(void)technique:(id)arg1 didFinishWithResult:(id)arg2 ;
-(void)updateAtTime:(double)arg1 ;
-(void)avatarInstanceDidChange;
-(void)setAvatarInstance:(id)arg1 ;
-(void)_processInfoThermalStateDidChange:(id)arg1 ;
-(void)_updateFrameRateForThermalState:(long long)arg1 ;
-(void)_avt_commonInit;
-(void)_setEffectivePreferredFramesPerSecond;
-(void)setupARKit;
-(void)_setupARKitWithRecordTechnique:(BOOL)arg1 ;
-(BOOL)requireAudioOnlyWhenRecording;
-(NSURL *)faceTrackingRecordingURL;
-(void)hideDropShadow:(BOOL)arg1 ;
-(void)_updateFaceIsTrackedState;
-(void)setFaceIsTracked:(BOOL)arg1 ;
-(BOOL)directRetargetingMode;
-(float)blendShapeGammaFilter:(float)arg1 name:(id)arg2 ;
-(void)setCaptureImageIsTooDark:(BOOL)arg1 ;
-(void)_updateAtTime:(double)arg1 ;
-(void)hideTrackingLossIndicator;
-(void)showTrackingLossIndicator;
-(void)playPreviewOnce;
-(void)_setAvatarInstance:(id)arg1 ;
-(id)transitionTexture;
-(void)updateBlendShapeIndirection;
-(void)installLighting:(id)arg1 ;
-(void)setupARKitWithRecordTechnique;
-(void)cancelRecordingAudio;
-(void)startRecordingAudio;
-(void)stopRecordingAudio;
-(void)trimRecordedData;
-(void)finalizeAudioFile;
-(void)_smoothRecordedData;
-(id)convertRecordedDataToAnimationGroup;
-(void)_playLivePreviewAnimation;
-(void)updateAudioState;
-(void)_updateTrackingState;
-(void)startPlayingAudio;
-(void)startPreviewing;
-(void)_refreshPerfTimesInfo;
-(BOOL)showPerfHUD;
-(double)recordingDuration;
-(id)_tmpVideoURL;
-(void)fadePuppetToWhite:(float)arg1 ;
-(id)_tmpAudioURL;
-(void)mergeAudio:(id)arg1 andVideoTo:(id)arg2 error:(id*)arg3 ;
-(double)finalVideoDuration;
-(opaqueCMSampleBufferRef)createSilentAudioAtFrame:(long long)arg1 nFrames:(int)arg2 sampleRate:(double)arg3 numChannels:(int)arg4 ;
-(void)mutePlayingAudio;
-(void)audioPlayerItemDidReachEnd:(id)arg1 ;
-(void)drawableNotAvailableForTime:(double)arg1 ;
-(id)puppet;
-(ARSession *)arSession;
-(void)setFaceTrackingRecordingURL:(NSURL *)arg1 ;
-(void)_resetFaceToIdlePosition;
-(void)_resetFaceToRandomPosition;
-(BOOL)faceIsTracked;
-(BOOL)captureImageIsTooDark;
-(BOOL)faceIsFullyActive;
-(void)simulateFaceTrackingLoss:(BOOL)arg1 ;
-(NSDictionary *)puppetState;
-(void)setPuppetState:(NSDictionary *)arg1 ;
-(void)stopPreviewing;
-(void)setShowPerfHUD:(BOOL)arg1 ;
-(BOOL)playBakedAnimation;
-(void)setPlayBakedAnimation:(BOOL)arg1 ;
-(void)setDisableRendering:(BOOL)arg1 ;
-(void)setFaceTrackingPaused:(BOOL)arg1 ;
-(BOOL)faceTrackingIsPaused;
-(BOOL)exportMovieToURL:(id)arg1 options:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)cancelMovieExport;
-(UIImage*)snapshotWithSize:(CGSize)arg1 ;
-(void)setDirectRetargetingMode:(BOOL)arg1 ;
-(BOOL)enableGazeCorrection;
-(void)setEnableGazeCorrection:(BOOL)arg1 ;
@end

