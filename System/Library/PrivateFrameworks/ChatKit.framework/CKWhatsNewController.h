/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:14:21 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/CKWhatsNewViewControllerDelegate.h>
#import <libobjc.A.dylib/CKAAUIDeviceToDeviceEncryptionHelperDelegate.h>

@protocol CKWhatsNewControllerDelegate;
@class UIViewController, NSUserDefaults, CKWhatsNewViewController, CKDeviceToDeviceEncryptionHelper, IMCloudKitHooks, NSString;

@interface CKWhatsNewController : NSObject <CKWhatsNewViewControllerDelegate, CKAAUIDeviceToDeviceEncryptionHelperDelegate> {

	BOOL _waitingForMOCState;
	id<CKWhatsNewControllerDelegate> _delegate;
	UIViewController* _controllerToPresentFrom;
	NSUserDefaults* _userDefaults;
	CKWhatsNewViewController* _presentedViewController;
	CKDeviceToDeviceEncryptionHelper* _presentedViewControllerEncryptionHelper;
	unsigned long long _cachedMOCEnabledState;
	IMCloudKitHooks* _cloudKitHooks;

}

@property (nonatomic,readonly) UIViewController * controllerToPresentFrom;                                            //@synthesize controllerToPresentFrom=_controllerToPresentFrom - In the implementation block
@property (nonatomic,readonly) NSUserDefaults * userDefaults;                                                         //@synthesize userDefaults=_userDefaults - In the implementation block
@property (nonatomic,retain) CKWhatsNewViewController * presentedViewController;                                      //@synthesize presentedViewController=_presentedViewController - In the implementation block
@property (nonatomic,retain) CKDeviceToDeviceEncryptionHelper * presentedViewControllerEncryptionHelper;              //@synthesize presentedViewControllerEncryptionHelper=_presentedViewControllerEncryptionHelper - In the implementation block
@property (assign,nonatomic) BOOL waitingForMOCState;                                                                 //@synthesize waitingForMOCState=_waitingForMOCState - In the implementation block
@property (assign,nonatomic) unsigned long long cachedMOCEnabledState;                                                //@synthesize cachedMOCEnabledState=_cachedMOCEnabledState - In the implementation block
@property (nonatomic,retain) IMCloudKitHooks * cloudKitHooks;                                                         //@synthesize cloudKitHooks=_cloudKitHooks - In the implementation block
@property (assign,nonatomic,__weak) id<CKWhatsNewControllerDelegate> delegate;                                        //@synthesize delegate=_delegate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)init;
-(id<CKWhatsNewControllerDelegate>)delegate;
-(void)setDelegate:(id<CKWhatsNewControllerDelegate>)arg1 ;
-(void)dealloc;
-(CKWhatsNewViewController *)presentedViewController;
-(NSUserDefaults *)userDefaults;
-(void)setPresentedViewController:(CKWhatsNewViewController *)arg1 ;
-(IMCloudKitHooks *)cloudKitHooks;
-(id)initWithPresentationViewController:(id)arg1 userDefaults:(id)arg2 cloudKitHooks:(id)arg3 ;
-(void)cloudKitHooksReturnedWithMOCState:(id)arg1 ;
-(BOOL)_shouldPresentSurf;
-(void)_beginSurfWhatsNew;
-(BOOL)_shouldPresentMOC;
-(void)_beginMOCWhatsNew;
-(UIViewController *)controllerToPresentFrom;
-(void)setWaitingForMOCState:(BOOL)arg1 ;
-(void)setCachedMOCEnabledState:(unsigned long long)arg1 ;
-(void)_presentViewController:(id)arg1 ;
-(CKDeviceToDeviceEncryptionHelper *)presentedViewControllerEncryptionHelper;
-(void)_tryToEnableMOC;
-(void)_beginMOCFlowForState:(unsigned long long)arg1 ;
-(void)_writeDefaultWhatsNewDidShow;
-(void)_tryToEnableHSA2;
-(void)_dismissPresentedViewControllerIfNeeded;
-(void)whatsNewConfirmPressed;
-(void)whatsNewNotNowButtonPressed;
-(id)initWithPresentationViewController:(id)arg1 ;
-(void)presentViewControllerIfNeeded;
-(void)setPresentedViewControllerEncryptionHelper:(CKDeviceToDeviceEncryptionHelper *)arg1 ;
-(BOOL)waitingForMOCState;
-(unsigned long long)cachedMOCEnabledState;
-(void)setCloudKitHooks:(IMCloudKitHooks *)arg1 ;
@end

