/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:24:24 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <NewsCore/FCOperation.h>

@protocol FCContentContext;
@class NSArray, NSDictionary, FCHeldRecords, NSMutableSet, NSMutableArray;

@interface FCRecordChainFetchOperation : FCOperation {

	BOOL _shouldReturnErrorWhenSomeRecordsMissing;
	id<FCContentContext> _context;
	NSArray* _topLevelRecordIDs;
	NSDictionary* _linkKeysByRecordType;
	NSDictionary* _cachePoliciesByRecordType;
	/*^block*/id _dynamicCachePolicyBlock;
	long long _requestTypeOverride;
	/*^block*/id _recordChainCompletionHandler;
	FCHeldRecords* _cachedRecords;
	NSMutableSet* _actualTopLevelRecordIDs;
	NSMutableSet* _skippedTopLevelRecordIDs;
	NSDictionary* _resultHeldRecordsByType;
	NSMutableArray* _mutableNetworkEvents;

}

@property (nonatomic,retain) FCHeldRecords * cachedRecords;                             //@synthesize cachedRecords=_cachedRecords - In the implementation block
@property (nonatomic,retain) NSMutableSet * actualTopLevelRecordIDs;                    //@synthesize actualTopLevelRecordIDs=_actualTopLevelRecordIDs - In the implementation block
@property (nonatomic,retain) NSMutableSet * skippedTopLevelRecordIDs;                   //@synthesize skippedTopLevelRecordIDs=_skippedTopLevelRecordIDs - In the implementation block
@property (nonatomic,retain) NSDictionary * resultHeldRecordsByType;                    //@synthesize resultHeldRecordsByType=_resultHeldRecordsByType - In the implementation block
@property (nonatomic,retain) NSMutableArray * mutableNetworkEvents;                     //@synthesize mutableNetworkEvents=_mutableNetworkEvents - In the implementation block
@property (nonatomic,retain) id<FCContentContext> context;                              //@synthesize context=_context - In the implementation block
@property (nonatomic,copy) NSArray * topLevelRecordIDs;                                 //@synthesize topLevelRecordIDs=_topLevelRecordIDs - In the implementation block
@property (nonatomic,copy) NSDictionary * linkKeysByRecordType;                         //@synthesize linkKeysByRecordType=_linkKeysByRecordType - In the implementation block
@property (nonatomic,copy) NSDictionary * cachePoliciesByRecordType;                    //@synthesize cachePoliciesByRecordType=_cachePoliciesByRecordType - In the implementation block
@property (nonatomic,copy) id dynamicCachePolicyBlock;                                  //@synthesize dynamicCachePolicyBlock=_dynamicCachePolicyBlock - In the implementation block
@property (assign,nonatomic) BOOL shouldReturnErrorWhenSomeRecordsMissing;              //@synthesize shouldReturnErrorWhenSomeRecordsMissing=_shouldReturnErrorWhenSomeRecordsMissing - In the implementation block
@property (assign,nonatomic) long long requestTypeOverride;                             //@synthesize requestTypeOverride=_requestTypeOverride - In the implementation block
@property (nonatomic,copy,readonly) NSArray * networkEvents; 
@property (nonatomic,copy) id recordChainCompletionHandler;                             //@synthesize recordChainCompletionHandler=_recordChainCompletionHandler - In the implementation block
-(id)init;
-(id<FCContentContext>)context;
-(void)setContext:(id<FCContentContext>)arg1 ;
-(BOOL)validateOperation;
-(void)performOperation;
-(void)operationWillFinishWithError:(id)arg1 ;
-(NSArray *)networkEvents;
-(NSDictionary *)linkKeysByRecordType;
-(NSArray *)topLevelRecordIDs;
-(void)_collectCachedRecordsFromRecordIDs:(id)arg1 ;
-(void)_collectActualTopLevelRecordIDsFromRecordIDs:(id)arg1 ;
-(void)_issueCloudRequestIfNeeded;
-(NSMutableArray *)mutableNetworkEvents;
-(id)recordChainCompletionHandler;
-(NSDictionary *)resultHeldRecordsByType;
-(FCHeldRecords *)cachedRecords;
-(void)setCachedRecords:(FCHeldRecords *)arg1 ;
-(id)_recordSourceForRecordType:(id)arg1 ;
-(void)_walkRecordChainStartingWithRecordIDs:(id)arg1 recordsLookupBlock:(/*^block*/id)arg2 visitorBlock:(/*^block*/id)arg3 ;
-(id)_recordTypeForRecordID:(id)arg1 ;
-(id)dynamicCachePolicyBlock;
-(NSDictionary *)cachePoliciesByRecordType;
-(NSMutableSet *)actualTopLevelRecordIDs;
-(NSMutableSet *)skippedTopLevelRecordIDs;
-(void)_finalizeResultFromCachedRecords;
-(BOOL)shouldReturnErrorWhenSomeRecordsMissing;
-(id)_errorForMissingRecordNames:(id)arg1 ;
-(long long)requestTypeOverride;
-(void)setRequestTypeOverride:(long long)arg1 ;
-(void)_filterOrphansFromCachedRecords;
-(id)_recordIDsMissingFromCachedRecords;
-(id)_partialErrorForMissingRecordName:(id)arg1 ;
-(int)_pbRecordTypeForRecordType:(id)arg1 ;
-(void)setResultHeldRecordsByType:(NSDictionary *)arg1 ;
-(int)_pbRecordTypeForRecordID:(id)arg1 ;
-(id)_recordTypeForPBRecordType:(int)arg1 ;
-(void)setTopLevelRecordIDs:(NSArray *)arg1 ;
-(void)setLinkKeysByRecordType:(NSDictionary *)arg1 ;
-(void)setCachePoliciesByRecordType:(NSDictionary *)arg1 ;
-(void)setDynamicCachePolicyBlock:(id)arg1 ;
-(void)setShouldReturnErrorWhenSomeRecordsMissing:(BOOL)arg1 ;
-(void)setRecordChainCompletionHandler:(id)arg1 ;
-(void)setActualTopLevelRecordIDs:(NSMutableSet *)arg1 ;
-(void)setSkippedTopLevelRecordIDs:(NSMutableSet *)arg1 ;
-(void)setMutableNetworkEvents:(NSMutableArray *)arg1 ;
@end

