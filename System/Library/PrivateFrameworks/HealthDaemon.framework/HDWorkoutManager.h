/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:21:40 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/HDActiveWorkoutServerDelegate.h>
#import <libobjc.A.dylib/HDDatabaseProtectedDataObserver.h>
#import <libobjc.A.dylib/HDDiagnosticObject.h>
#import <libobjc.A.dylib/HDForegroundClientProcessObserver.h>
#import <libobjc.A.dylib/HDHealthDaemonReadyObserver.h>
#import <libobjc.A.dylib/HDWorkoutEventCollectorDelegate.h>

@protocol OS_dispatch_source, OS_dispatch_queue;
@class _HDWorkoutData, HDSessionAssertion, NSMutableDictionary, HDAlertSuppressor, HDPowerSavingModeManager, NSMutableSet, NSHashTable, NSObject, CMWorkoutManager, CLLocationManager, CSLSSession, BBQuietModeOverrideAssertion, HDWatchAppStateMonitor, HDProfile, HDWorkoutLocationSmoother, NSString;

@interface HDWorkoutManager : NSObject <HDActiveWorkoutServerDelegate, HDDatabaseProtectedDataObserver, HDDiagnosticObject, HDForegroundClientProcessObserver, HDHealthDaemonReadyObserver, HDWorkoutEventCollectorDelegate> {

	_HDWorkoutData* _currentWorkout;
	HDSessionAssertion* _currentWorkoutAssertion;
	_HDWorkoutData* _nextWorkout;
	NSMutableDictionary* _activeWorkoutServers;
	HDAlertSuppressor* _alertSuppressor;
	HDPowerSavingModeManager* _powerSavingModeManager;
	NSMutableSet* _currentObservedTypes;
	NSHashTable* _observerTable;
	NSMutableSet* _eventCollectors;
	NSMutableSet* _startedEventCollectors;
	BOOL _waitingForStopEvent;
	BOOL _stopEventAfterPause;
	BOOL _needToCheckForLocationSeriesOnUnlock;
	BOOL _isFirstLaunchAndNotYetSmoothed;
	void* _heartRateRecoveryPowerAssertion;
	NSObject*<OS_dispatch_source> _heartRateRecoveryTimer;
	_HDWorkoutData* _currentHeartRateRecoveryWorkout;
	BOOL _isInHeartRateRecovery;
	CMWorkoutManager* _cmWorkoutManager;
	CLLocationManager* _locationManager;
	CSLSSession* _carouselSession;
	BOOL _enableDNDDuringWorkout;
	BBQuietModeOverrideAssertion* _quietModeOverrideAssertion;
	HDWatchAppStateMonitor* _appStateMonitor;
	NSObject*<OS_dispatch_queue> _queue;
	HDProfile* _profile;
	HDWorkoutLocationSmoother* _locationSmoother;

}

@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> queue;                                   //@synthesize queue=_queue - In the implementation block
@property (nonatomic,__weak,readonly) HDProfile * profile;                                           //@synthesize profile=_profile - In the implementation block
@property (nonatomic,retain) HDWorkoutLocationSmoother * locationSmoother;                           //@synthesize locationSmoother=_locationSmoother - In the implementation block
@property (nonatomic,retain) CSLSSession * carouselSession; 
@property (assign,nonatomic) BOOL enableDNDDuringWorkout; 
@property (nonatomic,retain) BBQuietModeOverrideAssertion * quietModeOverrideAssertion; 
@property (nonatomic,readonly) BOOL hasAnyActiveConnectedGymWorkouts; 
@property (nonatomic,readonly) BOOL isInHeartRateRecovery; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)observedTypesForActivityType:(unsigned long long)arg1 isIndoor:(BOOL)arg2 connectedToFitnessMachine:(BOOL)arg3 ;
+(id)_distanceTypeForActivityType:(unsigned long long)arg1 isIndoor:(BOOL)arg2 ;
-(void)dealloc;
-(NSObject*<OS_dispatch_queue>)queue;
-(id)initWithProfile:(id)arg1 ;
-(void)daemonReady:(id)arg1 ;
-(HDProfile *)profile;
-(id)diagnosticDescription;
-(void)clientInvalidated:(id)arg1 ;
-(void)createActiveWorkoutServerWithConfiguration:(id)arg1 clientProxy:(id)arg2 server:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)pauseActiveWorkoutsWithCompletion:(/*^block*/id)arg1 ;
-(id)currentWorkoutClient;
-(void)getFirstPartyWorkoutSnapshotWithCompletion:(/*^block*/id)arg1 ;
-(void)getCurrentWorkoutSnapshotWithCompletion:(/*^block*/id)arg1 ;
-(void)generatePauseOrResumeRequestWithCompletion:(/*^block*/id)arg1 ;
-(void)startWorkoutSession:(id)arg1 client:(id)arg2 server:(id)arg3 isFirstParty:(BOOL)arg4 completion:(/*^block*/id)arg5 ;
-(void)stopWorkoutSessionWithUUID:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)pauseWorkoutSessionWithUUID:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)resumeWorkoutSessionWithUUID:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)startWatchAppWithWorkoutConfiguration:(id)arg1 client:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)receivedStartWorkoutAppRequest:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)database:(id)arg1 protectedDataDidBecomeAvailable:(BOOL)arg2 ;
-(void)foregroundClientProcessesDidChange:(id)arg1 ;
-(BOOL)pluginHasBackgroundRunMode:(id)arg1 errorOut:(id*)arg2 ;
-(void)receiveMetrics:(id)arg1 ;
-(BOOL)hasAnyActiveConnectedGymWorkouts;
-(void)receivedWorkoutEvent:(id)arg1 ;
-(void)_queue_startWatchAppWithWorkoutConfiguration:(id)arg1 client:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_sendStartWorkoutAppResponse:(/*^block*/id)arg1 error:(id)arg2 ;
-(void)_startWatchAppWithWorkoutConfiguration:(id)arg1 client:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_receivedStartWorkoutAppRequest:(id)arg1 completion:(/*^block*/id)arg2 ;
-(BOOL)_pluginHasBackgroundRunMode:(id)arg1 errorOut:(id*)arg2 ;
-(void)_queue_enableViewOnWakeForWorkout:(id)arg1 ;
-(void)_queue_disableViewOnWakeForWorkout:(id)arg1 ;
-(void)_queue_startCarouselSessionForBundleID:(id)arg1 ;
-(void)_queue_endCarouselSession;
-(void)_observeDNDWorkoutDefault;
-(void)_loadWorkoutDNDDefault;
-(void)_unobserveDNDWorkoutDefault;
-(void)_queue_takeQuietModeAssertion;
-(void)_queue_releaseQuietModeAssertion;
-(void)pauseCurrentWorkoutWithCompletion:(/*^block*/id)arg1 ;
-(void)resumeCurrentWorkoutWithCompletion:(/*^block*/id)arg1 ;
-(void)addWorkoutEventObserver:(id)arg1 ;
-(void)workoutServerDidDeactivate:(id)arg1 ;
-(void)removeWorkoutEventObserver:(id)arg1 ;
-(void)_associationsSyncedForWorkout:(id)arg1 ;
-(void)_queue_smoothAllUnsmoothedLocationSeries;
-(id)_queue_locationSmoother;
-(void)_queue_stopCurrentSessionWaitingForStopEvent:(BOOL)arg1 ;
-(void)_queue_startBackgroundExecutionForWorkout:(id)arg1 ;
-(void)_queue_startWorkout:(id)arg1 ;
-(BOOL)_queue_isPowerSavingEnabledForCurrentActivity;
-(unsigned long long)_queue_currentWorkoutActivityType;
-(BOOL)_shouldWaitForCMStopEventForActivity:(unsigned long long)arg1 ;
-(id)_workoutSessionNotCurrentError:(id)arg1 ;
-(void)_queue_pauseCurrentSession;
-(void)_queue_resumeCurrentSession;
-(void)_queue_activeWorkoutServerDidDeactivate:(id)arg1 ;
-(long long)_queue_currentWorkoutLocationType;
-(void)_queue_setBackgroundExecutionForWorkoutType:(long long)arg1 event:(id)arg2 ;
-(void)_queue_sessionEnded;
-(void)_queue_immediateUpdateWithCompletion:(/*^block*/id)arg1 ;
-(void)_postWorkoutUpdatedNotification;
-(void)_setupLocationObserversIfNeeded;
-(void)_queue_resetActivityTypeForWorkoutSession:(id)arg1 ;
-(void)_queue_setCurrentSessionState:(long long)arg1 ;
-(void)_queue_setActivityTypeForWorkoutSession:(id)arg1 ;
-(void)_queue_endHeartRateRecovery;
-(void)_queue_startDataAndEventCollection;
-(void)_queue_beginHeartRateRecovery;
-(void)_queue_stopDataAndEventCollection;
-(void)_queue_stopBackgroundExecution;
-(void)_queue_didUpdateCurrentWorkoutSession;
-(void)_queue_setActivityType:(unsigned long long)arg1 forSessionUUID:(id)arg2 isIndoor:(BOOL)arg3 ;
-(id)_coreMotionWorkoutManager;
-(void)_queue_startDataCollectionForTypes:(id)arg1 ;
-(id)_queue_eventCollectors;
-(void)_queue_stopDataCollectionForTypes:(id)arg1 ;
-(void)_queue_logWorkoutStateToPowerLog;
-(void)_queue_updateFakingDataInSimulator;
-(BOOL)hasAnyActiveWorkouts;
-(unsigned long long)currentWorkoutActivityType;
-(long long)currentWorkoutLocationType;
-(id)_mainQueue_locationManager;
-(BOOL)hasActiveWorkoutServerForClient:(id)arg1 ;
-(void)hk_fakeLapEventWithDate:(id)arg1 strokeStyle:(long long)arg2 ;
-(void)hk_fakeStopEventWithDate:(id)arg1 ;
-(void)unitTest_smoothRoute:(id)arg1 completion:(/*^block*/id)arg2 ;
-(CSLSSession *)carouselSession;
-(void)setCarouselSession:(CSLSSession *)arg1 ;
-(BBQuietModeOverrideAssertion *)quietModeOverrideAssertion;
-(void)setQuietModeOverrideAssertion:(BBQuietModeOverrideAssertion *)arg1 ;
-(BOOL)enableDNDDuringWorkout;
-(void)setEnableDNDDuringWorkout:(BOOL)arg1 ;
-(BOOL)isInHeartRateRecovery;
-(void)endHeartRateRecovery;
-(BOOL)isPowerSavingEnabledForCurrentActivity;
-(HDWorkoutLocationSmoother *)locationSmoother;
-(void)setLocationSmoother:(HDWorkoutLocationSmoother *)arg1 ;
@end

