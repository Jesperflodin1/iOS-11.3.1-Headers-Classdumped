/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:21:39 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/HDHealthDaemonReadyObserver.h>

@protocol OS_dispatch_queue;
@class NSMapTable, HDDataAggregatorConfiguration, NSObject, HDDataCollectionManager, HKObjectType, NSString;

@interface HDDataAggregator : NSObject <HDHealthDaemonReadyObserver> {

	NSMapTable* _queue_collectorRegistry;
	HDDataAggregatorConfiguration* _queue_configuration;
	BOOL _queue_hasStartedCollectors;
	NSObject*<OS_dispatch_queue> _queue;
	HDDataCollectionManager* _dataCollectionManager;

}

@property (nonatomic,__weak,readonly) HDDataCollectionManager * dataCollectionManager;              //@synthesize dataCollectionManager=_dataCollectionManager - In the implementation block
@property (nonatomic,copy,readonly) HKObjectType * objectType; 
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> queue;                                  //@synthesize queue=_queue - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setConfiguration:(id)arg1 ;
-(NSObject*<OS_dispatch_queue>)queue;
-(HDDataCollectionManager *)dataCollectionManager;
-(void)daemonReady:(id)arg1 ;
-(HKObjectType *)objectType;
-(void)unregisterDataCollector:(id)arg1 ;
-(void)registerDataCollector:(id)arg1 state:(id)arg2 ;
-(void)dataCollector:(id)arg1 didCollectSensorDatum:(id)arg2 device:(id)arg3 ;
-(BOOL)queue_didPersistObjects:(id)arg1 lastDatum:(id)arg2 collector:(id)arg3 error:(id*)arg4 ;
-(BOOL)queue_persistObjects:(id)arg1 lastDatum:(id)arg2 collector:(id)arg3 source:(id)arg4 device:(id)arg5 error:(id*)arg6 ;
-(void)queue_configurationDidChange;
-(void)_queue_startCollector:(id)arg1 ;
-(void)queue_registeredCollectorsDidChange;
-(id)_keyValueDomain;
-(void)_queue_startCollectors;
-(id)initWithDataCollectionManager:(id)arg1 ;
-(id)queue_configuration;
-(void)dataCollector:(id)arg1 didChangeState:(id)arg2 ;
-(void)dataCollector:(id)arg1 didCollectSensorDatum:(id)arg2 ;
-(id)queue_allCollectors;
@end

