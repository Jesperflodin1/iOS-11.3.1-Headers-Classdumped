/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:21:40 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/HDHealthDaemonReadyObserver.h>
#import <libobjc.A.dylib/HDDatabaseProtectedDataObserver.h>
#import <libobjc.A.dylib/HDDiagnosticObject.h>

@protocol OS_dispatch_queue, OS_os_log, HDPeriodicActivityDelegate;
@class HDProfile, NSObject, NSString;

@interface HDPeriodicActivity : NSObject <HDHealthDaemonReadyObserver, HDDatabaseProtectedDataObserver, HDDiagnosticObject> {

	HDProfile* _profile;
	NSObject*<OS_dispatch_queue> _queue;
	NSString* _lastSuccessfulRunDateUserDefaultsKey;
	BOOL _isWaitingToRun;
	NSString* _errorCountUserDefaultsKey;
	NSString* _minimumIntervalDefaultsKey;
	NSString* _name;
	NSObject*<OS_os_log> _loggingCategory;
	double _interval;
	id<HDPeriodicActivityDelegate> _delegate;

}

@property (nonatomic,copy,readonly) NSString * name;                                        //@synthesize name=_name - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_os_log> loggingCategory;                        //@synthesize loggingCategory=_loggingCategory - In the implementation block
@property (nonatomic,readonly) double interval;                                             //@synthesize interval=_interval - In the implementation block
@property (nonatomic,__weak,readonly) id<HDPeriodicActivityDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) long long errorCount; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)registerDisabledPeriodicActivityWithName:(id)arg1 loggingCategory:(id)arg2 ;
+(id)_userDefaultsKeyForName:(id)arg1 key:(id)arg2 ;
-(id<HDPeriodicActivityDelegate>)delegate;
-(void)dealloc;
-(NSString *)name;
-(void)reset;
-(double)interval;
-(void)_performActivity:(id)arg1 ;
-(long long)errorCount;
-(void)daemonReady:(id)arg1 ;
-(id)diagnosticDescription;
-(void)database:(id)arg1 protectedDataDidBecomeAvailable:(BOOL)arg2 ;
-(void)didPerformActivityWithResult:(long long)arg1 minimumRetryInterval:(double)arg2 error:(id)arg3 ;
-(id)initWithProfile:(id)arg1 name:(id)arg2 interval:(double)arg3 delegate:(id)arg4 loggingCategory:(id)arg5 ;
-(BOOL)isWaitingToRun;
-(void)_registerActivity;
-(id)lastSuccessfulRunDate;
-(id)_dateForDefaultsKey:(id)arg1 ;
-(void)_queue_activityFinishedWithResult:(long long)arg1 minimumRetryInterval:(double)arg2 error:(id)arg3 ;
-(long long)_queue_errorCount;
-(void)_queue_setLastSuccessfulRunDate:(id)arg1 ;
-(void)_queue_performActivityIfPossibleWithCompletion:(/*^block*/id)arg1 ;
-(void)_queue_performActivityIfWaitingWithCompletion:(/*^block*/id)arg1 ;
-(void)_handleXPCActivityCallback:(id)arg1 ;
-(void)_queue_updateCriteriaForActivity:(id)arg1 ;
-(double)_queue_currentInterval;
-(id)_queue_criteriaForInterval:(double)arg1 ;
-(BOOL)_requiresProtectedData;
-(void)_queue_unitTest_activityFiredButRunDeclined;
-(void)_queue_performActivityWithCompletion:(/*^block*/id)arg1 ;
-(void)_queue_incrementErrorCount;
-(void)synthesizeActivityFire;
-(NSObject*<OS_os_log>)loggingCategory;
@end

