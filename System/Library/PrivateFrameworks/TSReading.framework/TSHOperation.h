/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:28:14 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/TSReading.framework/TSReading
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/NSURLConnectionDataDelegate.h>

@class NSURLCredential, NSURL, NSMutableArray, NSString, NSMutableDictionary, TSHRequestQueue, TSHOperationQueue;

@interface TSHOperation : NSObject <NSURLConnectionDataDelegate> {

	NSURLCredential* mCredentials;
	NSURL* mTarget;
	NSMutableArray* mDependencies;
	NSString* mUserAgent;
	NSMutableDictionary* mDefaultAuthenticationMethods;
	BOOL mIgnoreInvalidCertificate;
	id mDelegate;
	TSHRequestQueue* mRequestQueue;
	TSHOperationQueue* mOperationQueue;
	unsigned long long mContextHint;
	unsigned long long mRestarts;
	NSMutableArray* mRequests;
	long long mErrorCode;
	NSMutableDictionary* mErrorUserInfo;
	BOOL mCacheControlNoCache;
	BOOL mCacheControlNoStore;
	BOOL mCacheControlMustRevalidate;

}

@property (assign) BOOL ignoreInvalidCertificate; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)requestQueue;
-(void)setRequestQueue:(id)arg1 ;
-(void)connection:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2 ;
-(void)connection:(id)arg1 didCancelAuthenticationChallenge:(id)arg2 ;
-(void)cancel;
-(id)delegate;
-(void)dealloc;
-(NSString *)description;
-(id)localizedDescription;
-(void)connection:(id)arg1 didFailWithError:(id)arg2 ;
-(void)connection:(id)arg1 didReceiveData:(id)arg2 ;
-(void)connectionDidFinishLoading:(id)arg1 ;
-(void)connection:(id)arg1 didReceiveResponse:(id)arg2 ;
-(void)setOperationQueue:(id)arg1 ;
-(id)operationQueue;
-(void)restart;
-(id)dependencies;
-(id)initWithAccount:(id)arg1 andPath:(id)arg2 delegate:(id)arg3 ;
-(id)initWithURL:(id)arg1 user:(id)arg2 password:(id)arg3 persistence:(unsigned long long)arg4 delegate:(id)arg5 ;
-(id)targetURL;
-(unsigned long long)contextHint;
-(void)addHeadersTo:(id)arg1 ;
-(void)start:(id)arg1 notifyWhenFinished:(id)arg2 ;
-(id)credentials;
-(id)defaultAuthenicationMethodForScheme:(id)arg1 ;
-(void)cancelRequests;
-(void)operationQueue:(id)arg1 didStartOperation:(id)arg2 ;
-(void)operationQueue:(id)arg1 dequeuedOperation:(id)arg2 ;
-(id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3 ;
-(void)connection:(id)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4 ;
-(id)connection:(id)arg1 willCacheResponse:(id)arg2 ;
-(void)setUserAgent:(id)arg1 ;
-(id)userAgent;
-(void)setDefaultAuthenticationMethod:(id)arg1 forScheme:(id)arg2 ;
-(void)addDependency:(id)arg1 ;
-(void)removeDependency:(id)arg1 ;
-(void)requestQueue:(id)arg1 didCompleteRequest:(id)arg2 ;
-(void)requestQueue:(id)arg1 dequeuedRequest:(id)arg2 ;
-(void)requestQueue:(id)arg1 didStartRequest:(id)arg2 withConnection:(id)arg3 ;
-(void)requestQueue:(id)arg1 willStartRequest:(id)arg2 ;
-(void)setContextHint:(unsigned long long)arg1 ;
-(unsigned long long)restarts;
-(BOOL)ignoreInvalidCertificate;
-(void)setIgnoreInvalidCertificate:(BOOL)arg1 ;
-(id)basicAuthenticationHeader;
@end

