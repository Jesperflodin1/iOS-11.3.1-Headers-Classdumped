/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:26:22 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/Radio.framework/Radio
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/NSFetchedResultsControllerDelegate.h>

@protocol OS_dispatch_queue, OS_dispatch_source;
@class NSObject, NSOperationQueue, BKSProcessAssertion, NSManagedObjectContext, NSManagedObjectModel, NSFetchedResultsController, NSFetchRequest, NSMapTable, NSPersistentStoreCoordinator, NSString, NSArray;

@interface RadioModel : NSObject <NSFetchedResultsControllerDelegate> {

	NSObject*<OS_dispatch_queue> _accessSerialQueue;
	NSOperationQueue* _backgroundCleanupQueue;
	BKSProcessAssertion* _backgroundProcessAssertion;
	long long _backgroundTaskCount;
	NSObject*<OS_dispatch_source> _backgroundTaskInvalidateTimerSource;
	NSManagedObjectContext* _context;
	BOOL _isBackgroundModel;
	NSManagedObjectModel* _model;
	int _modelChangedToken;
	BOOL _modelChangedTokenIsValid;
	int _modelDeletedToken;
	BOOL _modelDeletedTokenIsValid;
	NSFetchedResultsController* _stationFetchedResultsController;
	NSFetchRequest* _stationFetchRequest;
	NSMapTable* _stationToSkipControllerMapTable;
	NSPersistentStoreCoordinator* _storeCoordinator;
	long long _transactionCount;

}

@property (assign,nonatomic) unsigned long long authenticatedAccountIdentifier; 
@property (assign,nonatomic) unsigned long long globalVersion; 
@property (nonatomic,copy) NSString * globalHash; 
@property (nonatomic,readonly) NSArray * allStations; 
@property (nonatomic,readonly) NSArray * stations; 
@property (nonatomic,copy) NSArray * stationSortOrdering; 
@property (nonatomic,readonly) NSArray * userStations; 
@property (nonatomic,readonly) NSArray * featuredStations; 
@property (nonatomic,readonly) NSArray * previewStations; 
@property (nonatomic,copy,readonly) NSArray * reportProblemIssueTypes; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)initialize;
+(id)backgroundModel;
+(id)_radioDatabasePath;
+(id)_persistentStoreConfigurationOptions;
+(void)_postAccountDidDeauthenticateNotification;
+(void)deleteAllData;
+(id)_radioDirectoryPath;
+(id)sharedModel;
-(void)setDatabaseVersion:(long long)arg1 ;
-(long long)databaseVersion;
-(void)controller:(id)arg1 didChangeObject:(id)arg2 atIndexPath:(id)arg3 forChangeType:(unsigned long long)arg4 newIndexPath:(id)arg5 ;
-(void)controllerDidChangeContent:(id)arg1 ;
-(NSArray *)stations;
-(id)init;
-(void)dealloc;
-(id)_init;
-(id)context;
-(unsigned long long)authenticatedAccountIdentifier;
-(void)setAuthenticatedAccountIdentifier:(unsigned long long)arg1 ;
-(void)_beginBackgroundTaskAssertion;
-(void)_endBackgroundTaskAssertion;
-(NSArray *)stationSortOrdering;
-(id)stationWithID:(long long)arg1 ;
-(id)_initBackgroundModelWithPersistentStoreCoordinator:(id)arg1 ;
-(void)_defaultRadioModelInitialization;
-(void)_prepareModel;
-(void)_postContextDidChangeNotification:(id)arg1 ;
-(id)_arrayByReplacingManagedObjectsInArray:(id)arg1 ;
-(id)_databasePropertyValueForKey:(id)arg1 ;
-(unsigned long long)numberOfTracksSkippedForStation:(id)arg1 ;
-(id)convertObject:(id)arg1 ;
-(void)deleteAllData;
-(void)deleteStation:(id)arg1 ;
-(void)performWriteTransactionWithBlock:(/*^block*/id)arg1 ;
-(void)_insertRevisionWithStationID:(long long)arg1 revisionType:(long long)arg2 ;
-(id)newStationWithDictionary:(id)arg1 ;
-(id)stationWithPersistentID:(long long)arg1 ;
-(id)stationWithStationStringID:(id)arg1 ;
-(void)noteTrackWasSkippedForStation:(id)arg1 onDate:(id)arg2 ;
-(id)_newManagedSkipHistoryWithSkipIdentifier:(id)arg1 ;
-(void)_addTimestamp:(double)arg1 toManagedSkipHistory:(id)arg2 withSkipIntervalForCulling:(double)arg3 ;
-(id)_newManagedSkipHistoryWithStationID:(long long)arg1 ;
-(id)_newManagedSkipHistoryWithStationHash:(id)arg1 ;
-(unsigned long long)numberOfTracksSkippedForStation:(id)arg1 returningEarliestSkipDate:(id*)arg2 ;
-(id)_managedSkipHistoryWithSkipIdentifier:(id)arg1 ;
-(unsigned long long)_numberOfSkipsUsedWithSkipTimestamps:(id)arg1 currentTimestamp:(double)arg2 skipInterval:(double)arg3 returningEarliestSkipTimestamp:(double*)arg4 ;
-(id)_managedSkipHistoryWithStationID:(long long)arg1 ;
-(id)_managedSkipHistoryWithStationHash:(id)arg1 ;
-(void)_performTransactionAndSave:(BOOL)arg1 withBlock:(/*^block*/id)arg2 ;
-(NSArray *)allStations;
-(void)_setDatabasePropertyValue:(id)arg1 forKey:(id)arg2 ;
-(unsigned long long)globalVersion;
-(void)_contextDidSaveNotification:(id)arg1 ;
-(id)convertObjectsInSet:(id)arg1 ;
-(id)_setByReplacingManagedObjectsInSet:(id)arg1 ;
-(void)_createRadioDirectoryAndDatabaseIfNecessary;
-(BOOL)canSkipTracksForStation:(id)arg1 ;
-(id)convertObjects:(id)arg1 ;
-(void)deletePreviewStation:(id)arg1 ;
-(void)deleteStationWithID:(long long)arg1 ;
-(void)enumerateRevisionsSinceRevisionID:(long long)arg1 usingBlock:(/*^block*/id)arg2 ;
-(NSString *)globalHash;
-(id)newFeaturedStationWithDictionary:(id)arg1 ;
-(id)newPreviewStationWithDictionary:(id)arg1 ;
-(void)noteTrackWasSkippedForStation:(id)arg1 ;
-(NSArray *)previewStations;
-(void)removeTrackPlaybackDescriptor:(id)arg1 fromStation:(id)arg2 ;
-(void)removeTrackPlaybackDescriptorQueuesForAllStations;
-(NSArray *)reportProblemIssueTypes;
-(void)setGlobalHash:(NSString *)arg1 ;
-(void)setGlobalVersion:(unsigned long long)arg1 ;
-(void)setReportProblemIssueTypes:(NSArray *)arg1 ;
-(void)setStationSortOrdering:(NSArray *)arg1 ;
-(void)setTrackPlaybackDescriptorQueue:(id)arg1 forStation:(id)arg2 ;
-(id)skipControllerForStation:(id)arg1 ;
-(void)copySkipHistoryFromStationHash:(id)arg1 toStationID:(long long)arg2 ;
-(void)_registerStationSkipController:(id)arg1 ;
-(void)_unregisterStationSkipController:(id)arg1 ;
-(void)performTransactionWithBlock:(/*^block*/id)arg1 ;
-(NSArray *)featuredStations;
-(NSArray *)userStations;
-(id)stationWithHash:(id)arg1 ;
-(void)_resetModel;
@end

