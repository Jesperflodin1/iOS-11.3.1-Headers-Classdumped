/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:14:02 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/CVML.framework/CVML
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <CVML/CVML-Structs.h>
@class CVMLMPContext;

@interface CVMLMomentProcessor : NSObject {

	CVMLMPContext* _context;

}

@property (nonatomic,retain) CVMLMPContext * context;              //@synthesize context=_context - In the implementation block
+(id)sortImageDescriptorsChronologically:(id)arg1 ;
-(CVMLMPContext *)context;
-(void)setContext:(CVMLMPContext *)arg1 ;
-(id)initWithOptions:(id)arg1 error:(id*)arg2 ;
-(id)getKey:(id)arg1 fromDictionary:(id)arg2 withDefault:(id)arg3 ;
-(id)computeClusteringTreeForImageDescriptors:(id)arg1 error:(id*)arg2 ;
-(id)computeClusteringForClusteringTree:(id)arg1 intoKGroups:(int)arg2 error:(id*)arg3 ;
-(id)computeNaturalClusteringForClusteringTree:(id)arg1 error:(id*)arg2 ;
-(id)computeClusteringTreeForImageDescriptors:(id)arg1 assumeDescriptorsAreSorted:(BOOL)arg2 error:(id*)arg3 ;
-(id)convertClusterNodesListToDescriptorsList:(vector<MPClusteringTreeNode *, std::__1::allocator<MPClusteringTreeNode *> >*)arg1 ;
-(id)performClustersPostprocessing:(id)arg1 error:(id*)arg2 ;
-(id)processImagesFromDataProvider:(id)arg1 error:(id*)arg2 ;
-(id)computeClusteringOfImageDescriptors:(id)arg1 intoKGroups:(int)arg2 error:(id*)arg3 ;
-(id)computeNaturalClusteringOfImageDescriptors:(id)arg1 error:(id*)arg2 ;
-(id)computeClusteringForClusteringTree:(id)arg1 usingThreshold:(float)arg2 error:(id*)arg3 ;
@end

