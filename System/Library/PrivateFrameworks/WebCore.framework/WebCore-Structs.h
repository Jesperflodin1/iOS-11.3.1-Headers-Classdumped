/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:29:10 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/WebCore.framework/WebCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSObject<OS_dispatch_queue>;

typedef struct _compressed_pair<WTF::Function<void ()>::CallableWrapperBase *, std::__1::default_delete<WTF::Function<void ()>::CallableWrapperBase> > {
	CallableWrapperBase __value_;
} compressed_pair<WTF::Function<void ()>::CallableWrapperBase *, std::__1::default_delete<WTF::Function<void ()>::CallableWrapperBase> >;

typedef struct unique_ptr<WTF::Function<void ()>::CallableWrapperBase, std::__1::default_delete<WTF::Function<void ()>::CallableWrapperBase> > {
	compressed_pair<WTF::Function<void ()>::CallableWrapperBase *, std::__1::default_delete<WTF::Function<void ()>::CallableWrapperBase> > __ptr_;
} unique_ptr<WTF::Function<void ()>::CallableWrapperBase, std::__1::default_delete<WTF::Function<void ()>::CallableWrapperBase> >;

typedef struct Function<void ()> {
	unique_ptr<WTF::Function<void ()>::CallableWrapperBase, std::__1::default_delete<WTF::Function<void ()>::CallableWrapperBase> > m_callableWrapper;
} Function<void ()>;

typedef struct opaqueCMSampleBuffer* opaqueCMSampleBufferRef;

typedef struct RetainPtr<NSData> {
	void m_ptr;
} RetainPtr<NSData>;

typedef struct Vector<WTF::RetainPtr<AVAssetResourceLoadingRequest>, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> {
	RetainPtr<AVAssetResourceLoadingRequest> m_buffer;
	unsigned m_capacity;
	unsigned m_size;
	unsigned m_mask;
} Vector<WTF::RetainPtr<AVAssetResourceLoadingRequest>, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc>;

typedef struct atomic<unsigned char> {
	AC __a_;
} atomic<unsigned char>;

typedef struct Atomic<unsigned char> {
	atomic<unsigned char> value;
} Atomic<unsigned char>;

typedef struct Lock {
	Atomic<unsigned char> m_byte;
} Lock;

typedef struct {
	long long field1;
	int field2;
	unsigned field3;
	long long field4;
} SCD_Struct_We9;

typedef struct RetainPtr<MPVolumeView> {
	void m_ptr;
} RetainPtr<MPVolumeView>;

typedef struct RetainPtr<MPAVRoutingController> {
	void m_ptr;
} RetainPtr<MPAVRoutingController>;

typedef struct RefPtr<WebCore::PlatformSpeechSynthesisUtterance, WTF::DumbPtrTraits<WebCore::PlatformSpeechSynthesisUtterance> > {
	PlatformSpeechSynthesisUtterance m_ptr;
} RefPtr<WebCore::PlatformSpeechSynthesisUtterance, WTF::DumbPtrTraits<WebCore::PlatformSpeechSynthesisUtterance> >;

typedef struct RetainPtr<AVSpeechSynthesizer> {
	void m_ptr;
} RetainPtr<AVSpeechSynthesizer>;

typedef struct TextMarkerData {
	unsigned axID;
	Node node;
	int offset;
	int characterStartIndex;
	int characterOffset;
	BOOL ignored;
	int affinity;
} TextMarkerData;

typedef struct CGPath* CGPathRef;

typedef struct RefPtr<WebCore::ArchiveResource, WTF::DumbPtrTraits<WebCore::ArchiveResource> > {
	ArchiveResource m_ptr;
} RefPtr<WebCore::ArchiveResource, WTF::DumbPtrTraits<WebCore::ArchiveResource> >;

typedef struct RefPtr<WebCore::ResourceLoader, WTF::DumbPtrTraits<WebCore::ResourceLoader> > {
	ResourceLoader m_ptr;
} RefPtr<WebCore::ResourceLoader, WTF::DumbPtrTraits<WebCore::ResourceLoader> >;

typedef struct Seconds {
	double m_value;
} Seconds;

typedef struct optional<WebCore::NetworkLoadPriority> {
	BOOL init_;
	constexpr_storage_t<WebCore::NetworkLoadPriority> storage_;
	unsigned char dummy_;
	i) value_;
} optional<WebCore::NetworkLoadPriority>;

typedef struct optional<unsigned long long> {
	BOOL init_;
	constexpr_storage_t<unsigned long long> storage_;
	unsigned char dummy_;
	Q) value_;
} optional<unsigned long long>;

typedef struct RetainPtr<__SecTrust *> {
	void m_ptr;
} RetainPtr<__SecTrust *>;

typedef struct RetainPtr<const __CFArray *> {
	void m_ptr;
} RetainPtr<const __CFArray *>;

typedef struct WallTime {
	double m_value;
} WallTime;

typedef struct ParsedContentRange {
	BOOL m_isValid;
	long long m_firstBytePosition;
	long long m_lastBytePosition;
	long long m_instanceLength;
} ParsedContentRange;

typedef struct array<unsigned char, 20> {
	unsigned char __elems_[20];
} array<unsigned char, 20>;

typedef struct RetainPtr<NSURLResponse> {
	void m_ptr;
} RetainPtr<NSURLResponse>;

typedef struct optional<std::__1::array<unsigned char, 20> > {
	BOOL init_;
	constexpr_storage_t<std::__1::array<unsigned char, 20> > storage_;
	unsigned char dummy_;
	array<unsigned char, 20>) value_;
} optional<std::__1::array<unsigned char, 20> >;

typedef struct optional<WTF::Seconds> {
	BOOL init_;
	constexpr_storage_t<WTF::Seconds> storage_;
	unsigned char dummy_;
	Seconds) value_;
} optional<WTF::Seconds>;

typedef struct CacheControlDirectives {
	optional<WTF::Seconds> maxAge;
	optional<WTF::Seconds> maxStale;
	BOOL noCache;
	BOOL noStore;
	BOOL mustRevalidate;
	BOOL immutable;
} CacheControlDirectives;

typedef struct optional<WTF::WallTime> {
	BOOL init_;
	constexpr_storage_t<WTF::WallTime> storage_;
	unsigned char dummy_;
	WallTime) value_;
} optional<WTF::WallTime>;

typedef struct CertificateInfo {
	RetainPtr<__SecTrust *> m_trust;
	RetainPtr<const __CFArray *> m_certificateChain;
} CertificateInfo;

typedef struct optional<WebCore::CertificateInfo> {
	BOOL init_;
	storage_t<WebCore::CertificateInfo> storage_;
	unsigned char dummy_;
	CertificateInfo) value_;
} optional<WebCore::CertificateInfo>;

typedef struct HashTable<WTF::String, WTF::KeyValuePair<WTF::String, WTF::String>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String, WTF::String> >, WTF::ASCIICaseInsensitiveHash, WTF::HashMap<WTF::String, WTF::String, WTF::ASCIICaseInsensitiveHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> >::KeyValuePairTraits, WTF::HashTraits<WTF::String> > {
	KeyValuePair<WTF::String, WTF::String> m_table;
	unsigned m_tableSize;
	unsigned m_tableSizeMask;
	unsigned m_keyCount;
	unsigned m_deletedCount;
} HashTable<WTF::String, WTF::KeyValuePair<WTF::String, WTF::String>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String, WTF::String> >, WTF::ASCIICaseInsensitiveHash, WTF::HashMap<WTF::String, WTF::String, WTF::ASCIICaseInsensitiveHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> >::KeyValuePairTraits, WTF::HashTraits<WTF::String> >;

typedef struct HashMap<WTF::String, WTF::String, WTF::ASCIICaseInsensitiveHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> > {
	HashTable<WTF::String, WTF::KeyValuePair<WTF::String, WTF::String>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String, WTF::String> >, WTF::ASCIICaseInsensitiveHash, WTF::HashMap<WTF::String, WTF::String, WTF::ASCIICaseInsensitiveHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> >::KeyValuePairTraits, WTF::HashTraits<WTF::String> > m_impl;
} HashMap<WTF::String, WTF::String, WTF::ASCIICaseInsensitiveHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> >;

typedef struct HashTable<WebCore::HTTPHeaderName, WTF::KeyValuePair<WebCore::HTTPHeaderName, WTF::String>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WebCore::HTTPHeaderName, WTF::String> >, WTF::IntHash<WebCore::HTTPHeaderName>, WTF::HashMap<WebCore::HTTPHeaderName, WTF::String, WTF::IntHash<WebCore::HTTPHeaderName>, WTF::StrongEnumHashTraits<WebCore::HTTPHeaderName>, WTF::HashTraits<WTF::String> >::KeyValuePairTraits, WTF::StrongEnumHashTraits<WebCore::HTTPHeaderName> > {
	KeyValuePair<WebCore::HTTPHeaderName, WTF::String> m_table;
	unsigned m_tableSize;
	unsigned m_tableSizeMask;
	unsigned m_keyCount;
	unsigned m_deletedCount;
} HashTable<WebCore::HTTPHeaderName, WTF::KeyValuePair<WebCore::HTTPHeaderName, WTF::String>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WebCore::HTTPHeaderName, WTF::String> >, WTF::IntHash<WebCore::HTTPHeaderName>, WTF::HashMap<WebCore::HTTPHeaderName, WTF::String, WTF::IntHash<WebCore::HTTPHeaderName>, WTF::StrongEnumHashTraits<WebCore::HTTPHeaderName>, WTF::HashTraits<WTF::String> >::KeyValuePairTraits, WTF::StrongEnumHashTraits<WebCore::HTTPHeaderName> >;

typedef struct HashMap<WebCore::HTTPHeaderName, WTF::String, WTF::IntHash<WebCore::HTTPHeaderName>, WTF::StrongEnumHashTraits<WebCore::HTTPHeaderName>, WTF::HashTraits<WTF::String> > {
	HashTable<WebCore::HTTPHeaderName, WTF::KeyValuePair<WebCore::HTTPHeaderName, WTF::String>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WebCore::HTTPHeaderName, WTF::String> >, WTF::IntHash<WebCore::HTTPHeaderName>, WTF::HashMap<WebCore::HTTPHeaderName, WTF::String, WTF::IntHash<WebCore::HTTPHeaderName>, WTF::StrongEnumHashTraits<WebCore::HTTPHeaderName>, WTF::HashTraits<WTF::String> >::KeyValuePairTraits, WTF::StrongEnumHashTraits<WebCore::HTTPHeaderName> > m_impl;
} HashMap<WebCore::HTTPHeaderName, WTF::String, WTF::IntHash<WebCore::HTTPHeaderName>, WTF::StrongEnumHashTraits<WebCore::HTTPHeaderName>, WTF::HashTraits<WTF::String> >;

typedef struct HTTPHeaderMap {
	HashMap<WebCore::HTTPHeaderName, WTF::String, WTF::IntHash<WebCore::HTTPHeaderName>, WTF::StrongEnumHashTraits<WebCore::HTTPHeaderName>, WTF::HashTraits<WTF::String> > m_commonHeaders;
	HashMap<WTF::String, WTF::String, WTF::ASCIICaseInsensitiveHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::String> > m_uncommonHeaders;
} HTTPHeaderMap;

typedef struct optional<WebCore::HTTPHeaderMap> {
	BOOL init_;
	storage_t<WebCore::HTTPHeaderMap> storage_;
	unsigned char dummy_;
	HTTPHeaderMap) value_;
} optional<WebCore::HTTPHeaderMap>;

typedef struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > {
	StringImpl m_ptr;
} RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> >;

typedef struct String {
	RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > m_impl;
} String;

typedef struct URL {
	String m_string;
	unsigned m_isValid : 1;
	unsigned m_protocolIsInHTTPFamily : 1;
	unsigned m_cannotBeABaseURL : 1;
	unsigned m_schemeEnd;
	unsigned m_userStart;
	unsigned m_userEnd;
	unsigned m_passwordEnd;
	unsigned m_hostEnd;
	unsigned m_portEnd;
	unsigned m_pathAfterLastSlash;
	unsigned m_pathEnd;
	unsigned m_queryEnd;
} URL;

typedef struct AtomicString {
	String m_string;
} AtomicString;

typedef struct optional<WTF::String> {
	BOOL init_;
	storage_t<WTF::String> storage_;
	unsigned char dummy_;
	String) value_;
} optional<WTF::String>;

typedef struct NetworkLoadMetrics {
	Seconds domainLookupStart;
	Seconds domainLookupEnd;
	Seconds connectStart;
	Seconds secureConnectionStart;
	Seconds connectEnd;
	Seconds requestStart;
	Seconds responseStart;
	Seconds responseEnd;
	BOOL complete;
	String protocol;
	optional<WTF::String> remoteAddress;
	optional<WTF::String> connectionIdentifier;
	optional<WebCore::NetworkLoadPriority> priority;
	optional<WebCore::HTTPHeaderMap> requestHeaders;
	optional<unsigned long long> requestHeaderBytesSent;
	optional<unsigned long long> requestBodyBytesSent;
	optional<unsigned long long> responseHeaderBytesReceived;
	optional<unsigned long long> responseBodyBytesReceived;
	optional<unsigned long long> responseBodyDecodedSize;
} NetworkLoadMetrics;

typedef struct ResourceResponse {
	BOOL m_isNull;
	URL m_url;
	AtomicString m_mimeType;
	long long m_expectedContentLength;
	AtomicString m_textEncodingName;
	AtomicString m_httpStatusText;
	AtomicString m_httpVersion;
	HTTPHeaderMap m_httpHeaderFields;
	NetworkLoadMetrics m_networkLoadMetrics;
	optional<WebCore::CertificateInfo> m_certificateInfo;
	int m_httpStatusCode;
	optional<WTF::Seconds> m_age;
	optional<WTF::WallTime> m_date;
	optional<WTF::WallTime> m_expires;
	optional<WTF::WallTime> m_lastModified;
	ParsedContentRange m_contentRange;
	CacheControlDirectives m_cacheControlDirectives;
	BOOL m_haveParsedCacheControlHeader;
	BOOL m_haveParsedAgeHeader;
	BOOL m_haveParsedDateHeader;
	BOOL m_haveParsedExpiresHeader;
	BOOL m_haveParsedLastModifiedHeader;
	BOOL m_haveParsedContentRangeHeader;
	int m_source;
	optional<std::__1::array<unsigned char, 20> > m_cacheBodyKey;
	int m_type;
	BOOL m_isRedirected;
	int m_tainting;
	unsigned m_initLevel : 3;
	BOOL m_isQuickLook;
	RetainPtr<NSURLResponse> m_nsResponse;
} ResourceResponse;

typedef struct RefPtr<WebCore::PreviewLoaderClient, WTF::DumbPtrTraits<WebCore::PreviewLoaderClient> > {
	PreviewLoaderClient m_ptr;
} RefPtr<WebCore::PreviewLoaderClient, WTF::DumbPtrTraits<WebCore::PreviewLoaderClient> >;

typedef struct _compressed_pair<WebCore::PreviewConverter *, std::__1::default_delete<WebCore::PreviewConverter> > {
	PreviewConverter __value_;
} compressed_pair<WebCore::PreviewConverter *, std::__1::default_delete<WebCore::PreviewConverter> >;

typedef struct unique_ptr<WebCore::PreviewConverter, std::__1::default_delete<WebCore::PreviewConverter> > {
	compressed_pair<WebCore::PreviewConverter *, std::__1::default_delete<WebCore::PreviewConverter> > __ptr_;
} unique_ptr<WebCore::PreviewConverter, std::__1::default_delete<WebCore::PreviewConverter> >;

typedef struct RetainPtr<NSMutableArray> {
	void m_ptr;
} RetainPtr<NSMutableArray>;

typedef struct CGContext* CGContextRef;

typedef struct _NSZone* NSZoneRef;

typedef struct CGPoint {
	double x;
	double y;
} CGPoint;

typedef struct RefPtr<const WebCore::SharedBuffer::DataSegment, WTF::DumbPtrTraits<const WebCore::SharedBuffer::DataSegment> > {
	DataSegment m_ptr;
} RefPtr<const WebCore::SharedBuffer::DataSegment, WTF::DumbPtrTraits<const WebCore::SharedBuffer::DataSegment> >;

typedef const struct DataSegmentatomic<unsigned int>AIVariant<WTF::Vector<char, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc>, WTF::RetainPtr<const __CFData *>, WebCore::FileSystem::MappedFileData>(__variant_data<WTF::Vector<char, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc>, WTF::RetainPtr<const __CFData *>, WebCore::FileSystem::MappedFileData>(__variant_data<WTF::Vector<char, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> >__storage_wrapper<WTF::Vector<char, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> >type[24C]__dummy_type)(__variant_data<WTF::RetainPtr<const __CFData *>, WebCore::FileSystem::MappedFileData>(__variant_data<WTF::RetainPtr<const __CFData *> >__storage_wrapper<WTF::RetainPtr<const __CFData *> >type[8C]__dummy_type)(__variant_data<WebCore::FileSystem::MappedFileData>__storage_wrapper<WebCore::FileSystem::MappedFileData>type[16C]__dummy_type)))c* ataSegmentRef;

typedef struct CGColor* CGColorRef;

typedef struct _compressed_pair<WebCore::TileController *, std::__1::default_delete<WebCore::TileController> > {
	TileController __value_;
} compressed_pair<WebCore::TileController *, std::__1::default_delete<WebCore::TileController> >;

typedef struct unique_ptr<WebCore::TileController, std::__1::default_delete<WebCore::TileController> > {
	compressed_pair<WebCore::TileController *, std::__1::default_delete<WebCore::TileController> > __ptr_;
} unique_ptr<WebCore::TileController, std::__1::default_delete<WebCore::TileController> >;

typedef struct CGImage* CGImageRef;

typedef struct CGColorSpace* CGColorSpaceRef;

typedef struct RefPtr<WTF::WeakReference<WebCore::FontCascade>, WTF::DumbPtrTraits<WTF::WeakReference<WebCore::FontCascade> > > {
	WeakReference<WebCore::FontCascade> m_ptr;
} RefPtr<WTF::WeakReference<WebCore::FontCascade>, WTF::DumbPtrTraits<WTF::WeakReference<WebCore::FontCascade> > >;

typedef struct WeakPtr<WebCore::FontCascade> {
	RefPtr<WTF::WeakReference<WebCore::FontCascade>, WTF::DumbPtrTraits<WTF::WeakReference<WebCore::FontCascade> > > m_ref;
} WeakPtr<WebCore::FontCascade>;

typedef struct type {
	unsigned char __lx[8];
} type;

typedef struct Vector<WTF::RetainPtr<const __CTFontDescriptor *>, 16, WTF::CrashOnOverflow, 16, WTF::FastMalloc> {
	RetainPtr<const __CTFontDescriptor *> m_buffer;
	unsigned m_capacity;
	unsigned m_size;
	unsigned m_mask;
	type m_inlineBuffer[16];
} Vector<WTF::RetainPtr<const __CTFontDescriptor *>, 16, WTF::CrashOnOverflow, 16, WTF::FastMalloc>;

typedef struct CGSize {
	double width;
	double height;
} CGSize;

typedef struct HashTable<WebCore::DeviceMotionClientIOS *, WebCore::DeviceMotionClientIOS *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::DeviceMotionClientIOS *>, WTF::HashTraits<WebCore::DeviceMotionClientIOS *>, WTF::HashTraits<WebCore::DeviceMotionClientIOS *> > {
	DeviceMotionClientIOS m_table;
	unsigned m_tableSize;
	unsigned m_tableSizeMask;
	unsigned m_keyCount;
	unsigned m_deletedCount;
} HashTable<WebCore::DeviceMotionClientIOS *, WebCore::DeviceMotionClientIOS *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::DeviceMotionClientIOS *>, WTF::HashTraits<WebCore::DeviceMotionClientIOS *>, WTF::HashTraits<WebCore::DeviceMotionClientIOS *> >;

typedef struct HashSet<WebCore::DeviceMotionClientIOS *, WTF::PtrHash<WebCore::DeviceMotionClientIOS *>, WTF::HashTraits<WebCore::DeviceMotionClientIOS *> > {
	HashTable<WebCore::DeviceMotionClientIOS *, WebCore::DeviceMotionClientIOS *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::DeviceMotionClientIOS *>, WTF::HashTraits<WebCore::DeviceMotionClientIOS *>, WTF::HashTraits<WebCore::DeviceMotionClientIOS *> > m_impl;
} HashSet<WebCore::DeviceMotionClientIOS *, WTF::PtrHash<WebCore::DeviceMotionClientIOS *>, WTF::HashTraits<WebCore::DeviceMotionClientIOS *> >;

typedef struct HashTable<WebCore::DeviceOrientationClientIOS *, WebCore::DeviceOrientationClientIOS *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::DeviceOrientationClientIOS *>, WTF::HashTraits<WebCore::DeviceOrientationClientIOS *>, WTF::HashTraits<WebCore::DeviceOrientationClientIOS *> > {
	DeviceOrientationClientIOS m_table;
	unsigned m_tableSize;
	unsigned m_tableSizeMask;
	unsigned m_keyCount;
	unsigned m_deletedCount;
} HashTable<WebCore::DeviceOrientationClientIOS *, WebCore::DeviceOrientationClientIOS *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::DeviceOrientationClientIOS *>, WTF::HashTraits<WebCore::DeviceOrientationClientIOS *>, WTF::HashTraits<WebCore::DeviceOrientationClientIOS *> >;

typedef struct HashSet<WebCore::DeviceOrientationClientIOS *, WTF::PtrHash<WebCore::DeviceOrientationClientIOS *>, WTF::HashTraits<WebCore::DeviceOrientationClientIOS *> > {
	HashTable<WebCore::DeviceOrientationClientIOS *, WebCore::DeviceOrientationClientIOS *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::DeviceOrientationClientIOS *>, WTF::HashTraits<WebCore::DeviceOrientationClientIOS *>, WTF::HashTraits<WebCore::DeviceOrientationClientIOS *> > m_impl;
} HashSet<WebCore::DeviceOrientationClientIOS *, WTF::PtrHash<WebCore::DeviceOrientationClientIOS *>, WTF::HashTraits<WebCore::DeviceOrientationClientIOS *> >;

typedef struct RefPtr<VideoFullscreenControllerContext, WTF::DumbPtrTraits<VideoFullscreenControllerContext> > {
	VideoFullscreenControllerContext m_ptr;
} RefPtr<VideoFullscreenControllerContext, WTF::DumbPtrTraits<VideoFullscreenControllerContext> >;

typedef struct RefPtr<WebCore::HTMLVideoElement, WTF::DumbPtrTraits<WebCore::HTMLVideoElement> > {
	HTMLVideoElement m_ptr;
} RefPtr<WebCore::HTMLVideoElement, WTF::DumbPtrTraits<WebCore::HTMLVideoElement> >;

typedef struct CGRect {
	CGPoint origin;
	CGSize size;
} CGRect;

typedef struct RetainPtr<NSURLRequest> {
	void m_ptr;
} RetainPtr<NSURLRequest>;

typedef struct RetainPtr<NSCachedURLResponse> {
	void m_ptr;
} RetainPtr<NSCachedURLResponse>;

typedef struct HashTable<WTF::RefPtr<WTF::SchedulePair, WTF::DumbPtrTraits<WTF::SchedulePair> >, WTF::RefPtr<WTF::SchedulePair, WTF::DumbPtrTraits<WTF::SchedulePair> >, WTF::IdentityExtractor, WTF::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair, WTF::DumbPtrTraits<WTF::SchedulePair> > >, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair, WTF::DumbPtrTraits<WTF::SchedulePair> > > > {
	RefPtr<WTF::SchedulePair, WTF::DumbPtrTraits<WTF::SchedulePair> > m_table;
	unsigned m_tableSize;
	unsigned m_tableSizeMask;
	unsigned m_keyCount;
	unsigned m_deletedCount;
} HashTable<WTF::RefPtr<WTF::SchedulePair, WTF::DumbPtrTraits<WTF::SchedulePair> >, WTF::RefPtr<WTF::SchedulePair, WTF::DumbPtrTraits<WTF::SchedulePair> >, WTF::IdentityExtractor, WTF::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair, WTF::DumbPtrTraits<WTF::SchedulePair> > >, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair, WTF::DumbPtrTraits<WTF::SchedulePair> > > >;

typedef struct HashSet<WTF::RefPtr<WTF::SchedulePair, WTF::DumbPtrTraits<WTF::SchedulePair> >, WTF::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair, WTF::DumbPtrTraits<WTF::SchedulePair> > > > {
	HashTable<WTF::RefPtr<WTF::SchedulePair, WTF::DumbPtrTraits<WTF::SchedulePair> >, WTF::RefPtr<WTF::SchedulePair, WTF::DumbPtrTraits<WTF::SchedulePair> >, WTF::IdentityExtractor, WTF::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair, WTF::DumbPtrTraits<WTF::SchedulePair> > >, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair, WTF::DumbPtrTraits<WTF::SchedulePair> > > > m_impl;
} HashSet<WTF::RefPtr<WTF::SchedulePair, WTF::DumbPtrTraits<WTF::SchedulePair> >, WTF::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair, WTF::DumbPtrTraits<WTF::SchedulePair> > > >;

typedef struct optional<WTF::HashSet<WTF::RefPtr<WTF::SchedulePair, WTF::DumbPtrTraits<WTF::SchedulePair> >, WTF::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair, WTF::DumbPtrTraits<WTF::SchedulePair> > > > > {
	BOOL init_;
	storage_t<WTF::HashSet<WTF::RefPtr<WTF::SchedulePair, WTF::DumbPtrTraits<WTF::SchedulePair> >, WTF::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair, WTF::DumbPtrTraits<WTF::SchedulePair> > > > > storage_;
	unsigned char dummy_;
	HashSet<WTF::RefPtr<WTF::SchedulePair, WTF::DumbPtrTraits<WTF::SchedulePair> >, WTF::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair, WTF::DumbPtrTraits<WTF::SchedulePair> > > >) value_;
} optional<WTF::HashSet<WTF::RefPtr<WTF::SchedulePair, WTF::DumbPtrTraits<WTF::SchedulePair> >, WTF::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WTF::SchedulePair, WTF::DumbPtrTraits<WTF::SchedulePair> > > > >;

typedef struct RetainPtr<UIViewController> {
	void m_ptr;
} RetainPtr<UIViewController>;

typedef struct RetainPtr<UITapGestureRecognizer> {
	void m_ptr;
} RetainPtr<UITapGestureRecognizer>;

typedef struct RefPtr<WebCore::VideoFullscreenInterfaceAVKit, WTF::DumbPtrTraits<WebCore::VideoFullscreenInterfaceAVKit> > {
	VideoFullscreenInterfaceAVKit m_ptr;
} RefPtr<WebCore::VideoFullscreenInterfaceAVKit, WTF::DumbPtrTraits<WebCore::VideoFullscreenInterfaceAVKit> >;

typedef struct RetainPtr<WebAVPlayerController> {
	void m_ptr;
} RetainPtr<WebAVPlayerController>;

typedef struct RetainPtr<CALayer> {
	void m_ptr;
} RetainPtr<CALayer>;

typedef struct RetainPtr<NSString> {
	void m_ptr;
} RetainPtr<NSString>;

typedef struct WKViewContext {
	/*function pointer*/void* notificationCallback;
	void notificationUserInfo;
	/*function pointer*/void* responderCallback;
	void responderUserInfo;
	/*function pointer*/void* willRemoveSubviewCallback;
	/*function pointer*/void* invalidateGStateCallback;
} WKViewContext;

typedef struct RefPtr<WebCore::PlatformMediaResourceLoader, WTF::DumbPtrTraits<WebCore::PlatformMediaResourceLoader> > {
	PlatformMediaResourceLoader m_ptr;
} RefPtr<WebCore::PlatformMediaResourceLoader, WTF::DumbPtrTraits<WebCore::PlatformMediaResourceLoader> >;

typedef struct RetainPtr<id<NSURLSessionDelegate> > {
	void m_ptr;
} RetainPtr<id<NSURLSessionDelegate> >;

typedef struct RetainPtr<NSOperationQueue> {
	void m_ptr;
} RetainPtr<NSOperationQueue>;

typedef struct HashTable<WTF::RetainPtr<WebCoreNSURLSessionDataTask>, WTF::RetainPtr<WebCoreNSURLSessionDataTask>, WTF::IdentityExtractor, WTF::PtrHash<WTF::RetainPtr<WebCoreNSURLSessionDataTask> >, WTF::HashTraits<WTF::RetainPtr<WebCoreNSURLSessionDataTask> >, WTF::HashTraits<WTF::RetainPtr<WebCoreNSURLSessionDataTask> > > {
	RetainPtr<WebCoreNSURLSessionDataTask> m_table;
	unsigned m_tableSize;
	unsigned m_tableSizeMask;
	unsigned m_keyCount;
	unsigned m_deletedCount;
} HashTable<WTF::RetainPtr<WebCoreNSURLSessionDataTask>, WTF::RetainPtr<WebCoreNSURLSessionDataTask>, WTF::IdentityExtractor, WTF::PtrHash<WTF::RetainPtr<WebCoreNSURLSessionDataTask> >, WTF::HashTraits<WTF::RetainPtr<WebCoreNSURLSessionDataTask> >, WTF::HashTraits<WTF::RetainPtr<WebCoreNSURLSessionDataTask> > >;

typedef struct HashSet<WTF::RetainPtr<WebCoreNSURLSessionDataTask>, WTF::PtrHash<WTF::RetainPtr<WebCoreNSURLSessionDataTask> >, WTF::HashTraits<WTF::RetainPtr<WebCoreNSURLSessionDataTask> > > {
	HashTable<WTF::RetainPtr<WebCoreNSURLSessionDataTask>, WTF::RetainPtr<WebCoreNSURLSessionDataTask>, WTF::IdentityExtractor, WTF::PtrHash<WTF::RetainPtr<WebCoreNSURLSessionDataTask> >, WTF::HashTraits<WTF::RetainPtr<WebCoreNSURLSessionDataTask> >, WTF::HashTraits<WTF::RetainPtr<WebCoreNSURLSessionDataTask> > > m_impl;
} HashSet<WTF::RetainPtr<WebCoreNSURLSessionDataTask>, WTF::PtrHash<WTF::RetainPtr<WebCoreNSURLSessionDataTask> >, WTF::HashTraits<WTF::RetainPtr<WebCoreNSURLSessionDataTask> > >;

typedef struct OSObjectPtr<NSObject<OS_dispatch_queue> *> {
	NSObject<OS_dispatch_queue>* m_ptr;
} OSObjectPtr<NSObject<OS_dispatch_queue> *>;

typedef struct RefPtr<WebCore::PlatformMediaResource, WTF::DumbPtrTraits<WebCore::PlatformMediaResource> > {
	PlatformMediaResource m_ptr;
} RefPtr<WebCore::PlatformMediaResource, WTF::DumbPtrTraits<WebCore::PlatformMediaResource> >;

typedef struct RetainPtr<id<UIItemProviderWriting> > {
	void m_ptr;
} RetainPtr<id<UIItemProviderWriting> >;

typedef struct RetainPtr<NSMutableDictionary<NSString *,NSURL *> > {
	void m_ptr;
} RetainPtr<NSMutableDictionary<NSString *,NSURL *> >;

typedef struct RetainPtr<NSItemProvider> {
	void m_ptr;
} RetainPtr<NSItemProvider>;

typedef struct RetainPtr<NSArray<NSString *> > {
	void m_ptr;
} RetainPtr<NSArray<NSString *> >;

typedef struct RetainPtr<NSArray> {
	void m_ptr;
} RetainPtr<NSArray>;

typedef struct RetainPtr<WebItemProviderRegistrationInfoList> {
	void m_ptr;
} RetainPtr<WebItemProviderRegistrationInfoList>;

typedef struct Vector<WTF::RetainPtr<WebItemProviderLoadResult>, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> {
	RetainPtr<WebItemProviderLoadResult> m_buffer;
	unsigned m_capacity;
	unsigned m_size;
	unsigned m_mask;
} Vector<WTF::RetainPtr<WebItemProviderLoadResult>, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc>;

typedef struct OpaqueJSValue* OpaqueJSValueRef;

typedef struct OpaqueJSContext* OpaqueJSContextRef;

