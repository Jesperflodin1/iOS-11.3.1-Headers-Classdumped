/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:22:10 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <IDSFoundation/IDSFoundation-Structs.h>
#import <IDSFoundation/IDSLink.h>

@protocol IDSLinkDelegate;
@class IDSSockAddrWrapper, NSDictionary, NSString;

@interface IDSUDPLink : NSObject <IDSLink> {

	int _socket;
	int _addressFamily;
	IDSSockAddrWrapper* _localAddress;
	IDSSockAddrWrapper* _destinationAddress;
	BOOL _hasFixedDestination;
	NSDictionary* _destinationAddressToDeviceIDMap;
	unsigned short _port;
	BOOL _wantsAWDL;
	BOOL _wantsWiFi;
	BOOL _wantsCellular;
	BOOL _useDefaultInterfaceOnly;
	BOOL _allowsLinkLocal;
	BOOL _skipTransportThread;
	BOOL _needToConnect;
	BOOL _hasTemporaryError;
	BOOL _isInvalidated;
	double _lastDestinationSent;
	double _lastDestinationReceived;
	SCD_Struct_ID2* _incomingPacketBuffer;
	unsigned long long _state;
	unsigned long long _totalBytesSent;
	unsigned long long _totalPacketsSent;
	unsigned long long _totalBytesReceived;
	unsigned long long _totalPacketsReceived;
	unsigned long long _previousBytesSent;
	unsigned long long _previousPacketsSent;
	unsigned long long _previousBytesReceived;
	unsigned long long _previousPacketsReceived;
	double _previousReportTime;
	NSString* _cbuuid;
	NSString* _deviceUniqueID;
	id<IDSLinkDelegate> _delegate;
	id<IDSLinkDelegate> _alternateDelegate;

}

@property (assign) unsigned short port;                                            //@synthesize port=_port - In the implementation block
@property (readonly) int socket;                                                   //@synthesize socket=_socket - In the implementation block
@property (assign) BOOL useDefaultInterfaceOnly;                                   //@synthesize useDefaultInterfaceOnly=_useDefaultInterfaceOnly - In the implementation block
@property (readonly) BOOL isInvalidated;                                           //@synthesize isInvalidated=_isInvalidated - In the implementation block
@property (assign) double lastDestinationSent;                                     //@synthesize lastDestinationSent=_lastDestinationSent - In the implementation block
@property (readonly) double lastDestinationReceived;                               //@synthesize lastDestinationReceived=_lastDestinationReceived - In the implementation block
@property (assign) BOOL allowsLinkLocal;                                           //@synthesize allowsLinkLocal=_allowsLinkLocal - In the implementation block
@property (assign) BOOL skipTransportThread;                                       //@synthesize skipTransportThread=_skipTransportThread - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (retain) NSString * cbuuid;                                              //@synthesize cbuuid=_cbuuid - In the implementation block
@property (retain) NSString * deviceUniqueID;                                      //@synthesize deviceUniqueID=_deviceUniqueID - In the implementation block
@property (getter=linkTypeString,readonly) NSString * linkTypeString; 
@property (readonly) unsigned long long state;                                     //@synthesize state=_state - In the implementation block
@property (readonly) unsigned long long headerOverhead; 
@property (__weak) id<IDSLinkDelegate> delegate;                                   //@synthesize delegate=_delegate - In the implementation block
@property (__weak) id<IDSLinkDelegate> alternateDelegate;                          //@synthesize alternateDelegate=_alternateDelegate - In the implementation block
-(BOOL)setTrafficClass:(int)arg1 ;
-(void)invalidate;
-(id<IDSLinkDelegate>)delegate;
-(void)setDelegate:(id<IDSLinkDelegate>)arg1 ;
-(void)dealloc;
-(unsigned long long)state;
-(unsigned short)port;
-(BOOL)isInvalidated;
-(unsigned long long)sendPacketBuffer:(SCD_Struct_ID2*)arg1 toDeviceUniqueID:(id)arg2 cbuuid:(id)arg3 ;
-(id)generateLinkReport:(double)arg1 isCurrentLink:(BOOL)arg2 ;
-(id)copyLinkStatsDict;
-(NSString *)cbuuid;
-(void)setCbuuid:(NSString *)arg1 ;
-(NSString *)deviceUniqueID;
-(NSString *)linkTypeString;
-(unsigned long long)headerOverhead;
-(id<IDSLinkDelegate>)alternateDelegate;
-(void)setAlternateDelegate:(id<IDSLinkDelegate>)arg1 ;
-(id)initWithDeviceUniqueID:(id)arg1 cbuuid:(id)arg2 ;
-(id)newSocketWithIPVersion:(unsigned long long)arg1 wantsAWDL:(BOOL)arg2 wantsWiFi:(BOOL)arg3 wantsCellular:(BOOL)arg4 clientUUID:(unsigned char)arg5 ;
-(void)removeSocket;
-(id)copyCurrentNetworkInterfaces;
-(unsigned long long)_sendBytes:(const void*)arg1 length:(unsigned long long)arg2 destinationAddress:(const sockaddr*)arg3 ;
-(unsigned long long)_sendBytes:(const void*)arg1 length:(unsigned long long)arg2 ;
-(void)_processIncomingPacket;
-(unsigned long long)_sendBytes:(const void*)arg1 length:(unsigned long long)arg2 localInterfaceIndex:(int)arg3 localAddress:(const sockaddr*)arg4 destinationAddress:(const sockaddr*)arg5 trafficClass:(unsigned short)arg6 ;
-(BOOL)setDestinationAddress:(id)arg1 isFixedDestination:(BOOL)arg2 fromAddress:(id)arg3 ;
-(BOOL)setDestinationAddressToDeviceIDMap:(id)arg1 ;
-(void)reconnectWithLocalAddress:(id)arg1 ;
-(id)newSocketWithIPVersion:(unsigned long long)arg1 wantsAWDL:(BOOL)arg2 wantsWiFi:(BOOL)arg3 wantsCellular:(BOOL)arg4 ;
-(unsigned long long)sendPacketBuffer:(SCD_Struct_ID2*)arg1 destination:(id)arg2 toDeviceID:(id)arg3 ;
-(unsigned long long)sendPacketBuffer:(SCD_Struct_ID2*)arg1 sourceInterface:(id)arg2 destination:(id)arg3 toDeviceID:(id)arg4 ;
-(BOOL)useDefaultInterfaceOnly;
-(void)setUseDefaultInterfaceOnly:(BOOL)arg1 ;
-(double)lastDestinationSent;
-(void)setLastDestinationSent:(double)arg1 ;
-(double)lastDestinationReceived;
-(BOOL)skipTransportThread;
-(void)setSkipTransportThread:(BOOL)arg1 ;
-(BOOL)allowsLinkLocal;
-(void)setAllowsLinkLocal:(BOOL)arg1 ;
-(void)setDeviceUniqueID:(NSString *)arg1 ;
-(void)setPort:(unsigned short)arg1 ;
-(int)socket;
@end

