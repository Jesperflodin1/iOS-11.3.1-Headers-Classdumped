/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:22:25 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/IMSharedUtilities.framework/Frameworks/XCTest.framework/XCTest
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol XCUIXcodeApplicationManaging, XCUIAccessibilityInterface;
@class XCUIApplicationMonitor, NSString, XCUIApplicationProcess, XCAccessibilityElement;

@interface XCUIApplicationImpl : NSObject {

	BOOL _supportsAutomationSession;
	BOOL _codeCoverageEnabled;
	id<XCUIXcodeApplicationManaging> _xcodeInterface;
	XCUIApplicationMonitor* _applicationMonitor;
	id<XCUIAccessibilityInterface> _axInterface;
	NSString* _path;
	NSString* _bundleID;
	XCUIApplicationProcess* _currentProcess;

}

@property (copy,readonly) NSString * path;                                         //@synthesize path=_path - In the implementation block
@property (copy,readonly) NSString * bundleID;                                     //@synthesize bundleID=_bundleID - In the implementation block
@property (assign,nonatomic) int processID; 
@property (assign,nonatomic) unsigned long long state; 
@property (readonly) BOOL running; 
@property (readonly) BOOL suspended; 
@property (readonly) BOOL background; 
@property (readonly) BOOL foreground; 
@property (readonly) BOOL activated; 
@property (nonatomic,retain) XCUIApplicationProcess * currentProcess;              //@synthesize currentProcess=_currentProcess - In the implementation block
@property (readonly) id<XCUIXcodeApplicationManaging> xcodeInterface;              //@synthesize xcodeInterface=_xcodeInterface - In the implementation block
@property (readonly) XCUIApplicationMonitor * applicationMonitor;                  //@synthesize applicationMonitor=_applicationMonitor - In the implementation block
@property (readonly) id<XCUIAccessibilityInterface> axInterface;                   //@synthesize axInterface=_axInterface - In the implementation block
@property (readonly) XCAccessibilityElement * accessibilityElement; 
@property (assign) BOOL supportsAutomationSession;                                 //@synthesize supportsAutomationSession=_supportsAutomationSession - In the implementation block
@property (assign) BOOL codeCoverageEnabled;                                       //@synthesize codeCoverageEnabled=_codeCoverageEnabled - In the implementation block
+(id)keyPathsForValuesAffectingRunning;
+(id)keyPathsForValuesAffectingSuspended;
+(id)keyPathsForValuesAffectingBackground;
+(id)keyPathsForValuesAffectingForeground;
+(id)keyPathsForValuesAffectingState;
+(id)keyPathsForValuesAffectingActivated;
-(void)handleCrashUnderSymbol:(id)arg1 ;
-(id<XCUIAccessibilityInterface>)axInterface;
-(BOOL)supportsAutomationSession;
-(XCAccessibilityElement *)accessibilityElement;
-(void)waitForViewControllerViewDidDisappearWithTimeout:(double)arg1 ;
-(void)waitForAccessibilityActive;
-(BOOL)waitForState:(unsigned long long)arg1 timeout:(double)arg2 ;
-(void)setSupportsAutomationSession:(BOOL)arg1 ;
-(void)serviceOpenRequest:(id)arg1 ;
-(id)initWithPath:(id)arg1 bundleID:(id)arg2 ;
-(id)initWithPath:(id)arg1 bundleID:(id)arg2 xcodeInterface:(id)arg3 applicationMonitor:(id)arg4 axInterface:(id)arg5 ;
-(void)setCurrentProcess:(XCUIApplicationProcess *)arg1 ;
-(void)_awaitValidCurrentProcess;
-(void)_launchWithRequest:(id)arg1 ;
-(id)_activationExpectation;
-(void)_activateForPlatform;
-(void)_waitOnActivationExpectation:(id)arg1 ;
-(void)_launchUsingPlatformWithArguments:(id)arg1 environment:(id)arg2 ;
-(void)_launchUsingXcodeWithArguments:(id)arg1 environment:(id)arg2 ;
-(void)_waitForValidPID;
-(BOOL)codeCoverageEnabled;
-(id<XCUIXcodeApplicationManaging>)xcodeInterface;
-(void)_waitForLaunchProgressWithToken:(id)arg1 ;
-(BOOL)_shouldRetryForLaunchError:(id)arg1 ;
-(void)setCodeCoverageEnabled:(BOOL)arg1 ;
-(void)dealloc;
-(id)description;
-(unsigned long long)state;
-(void)setState:(unsigned long long)arg1 ;
-(NSString *)path;
-(BOOL)background;
-(BOOL)running;
-(NSString *)bundleID;
-(BOOL)activated;
-(BOOL)foreground;
-(XCUIApplicationMonitor *)applicationMonitor;
-(void)setProcessID:(int)arg1 ;
-(XCUIApplicationProcess *)currentProcess;
-(BOOL)suspended;
-(void)terminate;
-(int)processID;
-(void)_activate;
@end

