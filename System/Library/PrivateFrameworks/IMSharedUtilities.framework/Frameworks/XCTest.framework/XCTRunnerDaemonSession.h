/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:22:25 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/IMSharedUtilities.framework/Frameworks/XCTest.framework/XCTest
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <XCTest/XCTest-Structs.h>
#import <XCTest/XCTestManager_TestsInterface.h>
#import <XCTest/XCUIRemoteAXInterface.h>

@protocol OS_dispatch_queue, XCTUIApplicationMonitor, XCUIAXNotificationHandling;
@class NSObject, NSXPCConnection, NSMutableDictionary, NSString;

@interface XCTRunnerDaemonSession : NSObject <XCTestManager_TestsInterface, XCUIRemoteAXInterface> {

	NSObject*<OS_dispatch_queue> _queue;
	id<XCTUIApplicationMonitor> _applicationMonitor;
	id<XCUIAXNotificationHandling> _accessibilityClient;
	NSXPCConnection* _connection;
	unsigned long long _daemonProtocolVersion;
	NSMutableDictionary* _invalidationHandlers;

}

@property (retain) NSObject*<OS_dispatch_queue> queue;                              //@synthesize queue=_queue - In the implementation block
@property (retain) NSXPCConnection * connection;                                    //@synthesize connection=_connection - In the implementation block
@property (assign) unsigned long long daemonProtocolVersion; 
@property (readonly) id<XCTestManager_ManagerInterface> daemonProxy; 
@property (retain) NSMutableDictionary * invalidationHandlers;                      //@synthesize invalidationHandlers=_invalidationHandlers - In the implementation block
@property (assign) id<XCTUIApplicationMonitor> applicationMonitor;                  //@synthesize applicationMonitor=_applicationMonitor - In the implementation block
@property (assign) id<XCUIAXNotificationHandling> accessibilityClient;              //@synthesize accessibilityClient=_accessibilityClient - In the implementation block
@property (readonly) BOOL useLegacyEventCoordinateTransformationPath; 
@property (readonly) BOOL usePointTransformationsForFrameConversions; 
@property (readonly) BOOL useLegacyScreenshotPath; 
@property (readonly) BOOL useLegacySnapshotPath; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedSession;
+(BOOL)isSupported;
-(void)startMonitoringApplicationWithBundleID:(id)arg1 ;
-(void)requestBundleIDForPID:(int)arg1 reply:(/*^block*/id)arg2 ;
-(void)terminateApplicationWithBundleID:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)requestAutomationSessionForTestTargetWithPID:(int)arg1 reply:(/*^block*/id)arg2 ;
-(void)requestBackgroundAssertionForPID:(int)arg1 reply:(/*^block*/id)arg2 ;
-(void)requestIDEConnectionTransportForSessionIdentifier:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)performDeviceEvent:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)synthesizeEvent:(id)arg1 completion:(/*^block*/id)arg2 ;
-(BOOL)useLegacyEventCoordinateTransformationPath;
-(void)requestScreenshotOfScreenWithID:(unsigned)arg1 withRect:(CGRect)arg2 formatUTI:(id)arg3 compressionQuality:(double)arg4 imageFormatRespected:(BOOL*)arg5 withReply:(/*^block*/id)arg6 ;
-(BOOL)useLegacyScreenshotPath;
-(void)loadAccessibilityWithTimeout:(double)arg1 reply:(/*^block*/id)arg2 ;
-(void)setLocalizableStringsDataGatheringEnabled:(BOOL)arg1 reply:(/*^block*/id)arg2 ;
-(void)registerForAccessibilityNotification:(int)arg1 reply:(/*^block*/id)arg2 ;
-(void)enableFauxCollectionViewCells:(/*^block*/id)arg1 ;
-(void)requestElementAtPoint:(CGPoint)arg1 reply:(/*^block*/id)arg2 ;
-(void)performAccessibilityAction:(int)arg1 onElement:(id)arg2 value:(id)arg3 reply:(/*^block*/id)arg4 ;
-(BOOL)useLegacySnapshotPath;
-(void)snapshotForElement:(id)arg1 attributes:(id)arg2 parameters:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)requestSnapshotForElement:(id)arg1 attributes:(id)arg2 parameters:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)fetchAttributesForElement:(id)arg1 attributes:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)fetchAttributes:(id)arg1 forElement:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)setAttribute:(id)arg1 value:(id)arg2 element:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)fetchParameterizedAttribute:(id)arg1 forElement:(id)arg2 parameter:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)setAXTimeout:(double)arg1 reply:(/*^block*/id)arg2 ;
-(void)startSiriUIRequestWithText:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)injectAssistantRecognitionStrings:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)injectVoiceRecognitionAudioInputPaths:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)requestSiriEnabledStatus:(/*^block*/id)arg1 ;
-(void)getDeviceOrientationWithCompletion:(/*^block*/id)arg1 ;
-(void)updateDeviceOrientation:(long long)arg1 completion:(/*^block*/id)arg2 ;
-(BOOL)usePointTransformationsForFrameConversions;
-(void)setAccessibilityClient:(id<XCUIAXNotificationHandling>)arg1 ;
-(id)registerInvalidationHandler:(/*^block*/id)arg1 ;
-(void)_XCT_applicationWithBundleID:(id)arg1 didUpdatePID:(int)arg2 andState:(unsigned long long)arg3 ;
-(void)_XCT_receivedAccessibilityNotification:(int)arg1 withPayload:(id)arg2 ;
-(void)_reportInvalidation;
-(void)setDaemonProtocolVersion:(unsigned long long)arg1 ;
-(unsigned long long)daemonProtocolVersion;
-(NSMutableDictionary *)invalidationHandlers;
-(id<XCUIAXNotificationHandling>)accessibilityClient;
-(void)unregisterForAccessibilityNotification:(int)arg1 registrationToken:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)unregisterInvalidationHandlerWithToken:(id)arg1 ;
-(void)launchApplicationWithBundleID:(id)arg1 arguments:(id)arg2 environment:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)sendString:(id)arg1 maximumFrequency:(unsigned long long)arg2 completion:(/*^block*/id)arg3 ;
-(void)requestScreenshotWithReply:(/*^block*/id)arg1 ;
-(void)startSiriUIRequestWithAudioFileURL:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)requestDTServiceHubConnectionWithReply:(/*^block*/id)arg1 ;
-(void)setInvalidationHandlers:(NSMutableDictionary *)arg1 ;
-(void)dealloc;
-(NSXPCConnection *)connection;
-(void)setConnection:(NSXPCConnection *)arg1 ;
-(NSObject*<OS_dispatch_queue>)queue;
-(void)setQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(id<XCTUIApplicationMonitor>)applicationMonitor;
-(void)setApplicationMonitor:(id<XCTUIApplicationMonitor>)arg1 ;
-(id<XCTestManager_ManagerInterface>)daemonProxy;
-(id)initWithConnection:(id)arg1 ;
@end

