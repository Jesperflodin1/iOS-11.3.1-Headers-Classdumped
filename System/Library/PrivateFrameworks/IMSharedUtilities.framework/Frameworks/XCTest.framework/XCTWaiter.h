/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:22:25 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/IMSharedUtilities.framework/Frameworks/XCTest.framework/XCTest
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <XCTest/XCTest-Structs.h>
#import <XCTest/XCTestExpectationDelegate.h>
#import <XCTest/XCTWaiterManagement.h>

@class _XCTWaiterImpl, NSArray, NSString;

@interface XCTWaiter : NSObject <XCTestExpectationDelegate, XCTWaiterManagement> {

	_XCTWaiterImpl* _internalImplementation;

}

@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> queue; 
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> delegateQueue; 
@property (assign) CFRunLoopRef waitingRunLoop; 
@property (readonly) _XCTWaiterImpl * internalImplementation;                           //@synthesize internalImplementation=_internalImplementation - In the implementation block
@property (readonly) double timeout; 
@property (copy,readonly) NSArray * waitCallStackReturnAddresses; 
@property (readonly) BOOL currentContextIsNested; 
@property (__weak) id<XCTWaiterDelegate> delegate; 
@property (readonly) NSArray * fulfilledExpectations; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (getter=isInProgress,readonly) BOOL inProgress; 
+(long long)waitForExpectations:(id)arg1 timeout:(double)arg2 ;
+(long long)waitForExpectations:(id)arg1 timeout:(double)arg2 enforceOrder:(BOOL)arg3 ;
+(void)setStallHandler:(/*^block*/id)arg1 ;
+(/*^block*/id)installWatchdogForWaiter:(id)arg1 timeout:(double)arg2 ;
+(double)watchdogTimeoutSlop;
+(void)handleStalledWaiter:(id)arg1 ;
+(void)setWatchdogTimeoutSlop:(double)arg1 ;
+(void)wait:(double)arg1 ;
-(long long)waitForExpectations:(id)arg1 timeout:(double)arg2 ;
-(_XCTWaiterImpl *)internalImplementation;
-(long long)waitForExpectations:(id)arg1 timeout:(double)arg2 enforceOrder:(BOOL)arg3 ;
-(NSArray *)waitCallStackReturnAddresses;
-(BOOL)currentContextIsNested;
-(void)setWaitCallStackReturnAddresses:(NSArray *)arg1 ;
-(void)_queue_setExpectations:(id)arg1 ;
-(void)_queue_computeInitiallyFulfilledExpectations;
-(void)_validateExpectationFulfillmentWithTimeoutState:(BOOL)arg1 ;
-(void)primitiveWait:(double)arg1 ;
-(void)_queue_validateExpectationFulfillmentWithTimeoutState:(BOOL)arg1 ;
-(void)cancelPrimitiveWait;
-(CFRunLoopRef)waitingRunLoop;
-(void)setWaitingRunLoop:(CFRunLoopRef)arg1 ;
-(NSArray *)fulfilledExpectations;
-(BOOL)_queue_enforceOrderingWithFulfilledExpectations:(id)arg1 ;
-(void)didFulfillExpectation:(id)arg1 ;
-(void)interruptForWaiter:(id)arg1 ;
-(BOOL)isInProgress;
-(void)cancelWaiting;
-(id)init;
-(id<XCTWaiterDelegate>)delegate;
-(void)setDelegate:(id<XCTWaiterDelegate>)arg1 ;
-(NSString *)description;
-(long long)state;
-(void)setState:(long long)arg1 ;
-(id)initWithDelegate:(id)arg1 ;
-(NSObject*<OS_dispatch_queue>)delegateQueue;
-(NSObject*<OS_dispatch_queue>)queue;
-(long long)result;
-(double)timeout;
@end

