/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:22:24 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/IMSharedUtilities.framework/Frameworks/XCTest.framework/XCTest
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <XCTest/XCTest.h>
#import <XCTest/XCTWaiterDelegate.h>
#import <XCTest/XCTMemoryCheckerDelegate.h>
#import <XCTest/XCTActivity.h>

@class NSString, XCTMemoryChecker, XCTestCaseRun, XCUITestContext, NSDictionary, _XCTestCaseImplementation, NSInvocation;

@interface XCTestCase : XCTest <XCTWaiterDelegate, XCTMemoryCheckerDelegate, XCTActivity> {

	id _internalImplementation;
	XCTMemoryChecker* _defaultMemoryChecker;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) BOOL shouldHaltWhenReceivesControl; 
@property (retain) XCTestCaseRun * testCaseRun; 
@property (readonly) XCUITestContext * testContext; 
@property (nonatomic,retain) XCTMemoryChecker * defaultMemoryChecker;               //@synthesize defaultMemoryChecker=_defaultMemoryChecker - In the implementation block
@property (readonly) unsigned long long activityRecordStackDepth; 
@property (readonly) NSDictionary * activityAggregateStatistics; 
@property (retain) _XCTestCaseImplementation * internalImplementation;              //@synthesize internalImplementation=_internalImplementation - In the implementation block
@property (retain) NSInvocation * invocation; 
@property (assign) BOOL continueAfterFailure; 
@property (copy,readonly) NSString * name; 
+(id)allSubclasses;
+(id)defaultTestSuite;
+(id)testCaseWithSelector:(SEL)arg1 ;
+(id)testInvocations;
+(id)testCaseWithInvocation:(id)arg1 ;
+(id)_testStartActvityDateFormatter;
+(BOOL)isInheritingTestCases;
+(id)allTestMethodInvocations;
+(id)testMethodInvocations;
+(id)defaultPerformanceMetrics;
+(BOOL)_enableSymbolication;
+(id)measurementFormatter;
+(id)_baselineDictionary;
+(id)knownMemoryMetrics;
+(BOOL)_reportPerformanceFailuresForLargeImprovements;
+(BOOL)_treatMissingBaselinesAsTestFailures;
+(id)performFailableBlock:(/*^block*/id)arg1 shouldInterruptTest:(BOOL*)arg2 ;
+(void)_allTestMethodInvocations:(id)arg1 ;
+(void)tearDown;
+(id)bundle;
+(void)setUp;
-(void)waitForExpectations:(id)arg1 timeout:(double)arg2 ;
-(void)startActivityWithTitle:(id)arg1 block:(/*^block*/id)arg2 ;
-(_XCTestCaseImplementation *)internalImplementation;
-(void)setShouldHaltWhenReceivesControl:(BOOL)arg1 ;
-(void)waitForExpectations:(id)arg1 timeout:(double)arg2 enforceOrder:(BOOL)arg3 ;
-(void)_dequeueFailures;
-(void)_addExpectation:(id)arg1 ;
-(id)_symbolicationRecordForTestCodeInAddressStack:(id)arg1 ;
-(void)_enqueueFailureWithDescription:(id)arg1 inFile:(id)arg2 atLine:(unsigned long long)arg3 expected:(BOOL)arg4 breakWhenDequeued:(BOOL)arg5 ;
-(id)keyValueObservingExpectationForObject:(id)arg1 keyPath:(id)arg2 expectedValue:(id)arg3 ;
-(id)keyValueObservingExpectationForObject:(id)arg1 keyPath:(id)arg2 handler:(/*^block*/id)arg3 ;
-(id)expectationForNotification:(id)arg1 object:(id)arg2 handler:(/*^block*/id)arg3 ;
-(id)expectationForPredicate:(id)arg1 evaluatedWithObject:(id)arg2 handler:(/*^block*/id)arg3 ;
-(void)waiter:(id)arg1 didTimeoutWithUnfulfilledExpectations:(id)arg2 ;
-(void)waiter:(id)arg1 fulfillmentDidViolateOrderingConstraintsForExpectation:(id)arg2 requiredExpectation:(id)arg3 ;
-(void)waiter:(id)arg1 didFulfillInvertedExpectation:(id)arg2 ;
-(void)nestedWaiter:(id)arg1 wasInterruptedByTimedOutWaiter:(id)arg2 ;
-(id)_expectationForDarwinNotification:(id)arg1 ;
-(void)setInternalImplementation:(_XCTestCaseImplementation *)arg1 ;
-(void)_recordValues:(id)arg1 forPerformanceMetricID:(id)arg2 name:(id)arg3 unitsOfMeasurement:(id)arg4 baselineName:(id)arg5 baselineAverage:(id)arg6 maxPercentRegression:(id)arg7 maxPercentRelativeStandardDeviation:(id)arg8 maxRegression:(id)arg9 maxStandardDeviation:(id)arg10 file:(id)arg11 line:(unsigned long long)arg12 ;
-(NSDictionary *)activityAggregateStatistics;
-(Class)_requiredTestRunBaseClass;
-(void)performTest:(id)arg1 ;
-(void)setContinueAfterFailure:(BOOL)arg1 ;
-(id)languageAgnosticTestMethodName;
-(XCTestCaseRun *)testCaseRun;
-(void)setTestCaseRun:(XCTestCaseRun *)arg1 ;
-(BOOL)continueAfterFailure;
-(BOOL)shouldHaltWhenReceivesControl;
-(void)_recordFailureWithDescription:(id)arg1 inFile:(id)arg2 atLine:(unsigned long long)arg3 expected:(BOOL)arg4 ;
-(XCUITestContext *)testContext;
-(void)registerDefaultMetrics;
-(void)setUpTestWithSelector:(SEL)arg1 ;
-(void)_performTurningExceptionsIntoFailuresInterruptAfterHandling:(BOOL)arg1 block:(/*^block*/id)arg2 ;
-(void)_dequeueAndReportBackgroundAttachments;
-(void)setDefaultMemoryChecker:(XCTMemoryChecker *)arg1 ;
-(void)assertInvalidObjectsDeallocatedAfterScope:(/*^block*/id)arg1 ;
-(void)_recordFailure:(id)arg1 ;
-(void)_reportFailuresForUnwaitedExpectations;
-(void)_performTearDownSequenceWithSelector:(SEL)arg1 ;
-(void)_interruptTest;
-(void)invokeTest;
-(id)_perfMetricsForID;
-(void)_runTeardownBlocks;
-(void)tearDownTestWithSelector:(SEL)arg1 ;
-(id)_dequeueTeardownBlocks;
-(void)addTeardownBlock:(/*^block*/id)arg1 ;
-(void)_logMemoryGraphData:(id)arg1 withTitle:(id)arg2 ;
-(BOOL)_isMeasuringMetrics;
-(BOOL)_didStartMeasuring;
-(void)measureMetrics:(id)arg1 automaticallyStartMeasuring:(BOOL)arg2 forBlock:(/*^block*/id)arg3 ;
-(void)reportMetric:(id)arg1 reportFailures:(BOOL)arg2 ;
-(void)registerMetricID:(id)arg1 name:(id)arg2 unitString:(id)arg3 ;
-(id)baselinesDictionaryForTest;
-(void)startMeasuring;
-(void)stopMeasuring;
-(void)startActivityWithTitle:(id)arg1 type:(id)arg2 block:(/*^block*/id)arg3 ;
-(unsigned long long)activityRecordStackDepth;
-(id)addUIInterruptionMonitorWithDescription:(id)arg1 handler:(/*^block*/id)arg2 ;
-(void)removeUIInterruptionMonitor:(id)arg1 ;
-(XCTMemoryChecker *)defaultMemoryChecker;
-(void)assertObjectsOfType:(id)arg1 invalidAfterScope:(/*^block*/id)arg2 ;
-(void)markInvalid:(id)arg1 ;
-(void)assertNoLeaksInScope:(/*^block*/id)arg1 ;
-(void)assertNoLeaksInApplication:(id)arg1 inScope:(/*^block*/id)arg2 ;
-(void)assertObjectsOfType:(id)arg1 inApplication:(id)arg2 invalidAfterScope:(/*^block*/id)arg3 ;
-(void)memoryChecker:(id)arg1 didFailWithMessages:(id)arg2 serializedMemoryGraph:(id)arg3 ;
-(id)nameForLegacyLogging;
-(void)_reportFailuresAtFile:(id)arg1 line:(unsigned long long)arg2 forTestAssertionsInScope:(/*^block*/id)arg3 ;
-(void)_purgeTeardownBlocks;
-(void)_addTeardownBlock:(/*^block*/id)arg1 ;
-(void)beforeTestIteration:(unsigned long long)arg1 selector:(SEL)arg2 ;
-(void)afterTestIteration:(unsigned long long)arg1 selector:(SEL)arg2 ;
-(unsigned long long)numberOfTestIterationsForTestWithSelector:(SEL)arg1 ;
-(void)_logMemoryGraphDataFromFilePath:(id)arg1 withTitle:(id)arg2 ;
-(BOOL)_didMeasureMetrics;
-(BOOL)_didStopMeasuring;
-(void)measureBlock:(/*^block*/id)arg1 ;
-(void)reportMeasurements:(id)arg1 forMetricID:(id)arg2 reportFailures:(BOOL)arg3 ;
-(void)registerMetricID:(id)arg1 name:(id)arg2 unit:(id)arg3 ;
-(void)_logAndReportPerformanceMetrics:(id)arg1 perfMetricResultsForIDs:(id)arg2 withBaselinesForTest:(id)arg3 defaultBaselinesForPerfMetricID:(id)arg4 ;
-(void)_logAndReportPerformanceMetrics:(id)arg1 perfMetricResultsForIDs:(id)arg2 withBaselinesForTest:(id)arg3 ;
-(void)runActivityNamed:(id)arg1 inScope:(/*^block*/id)arg2 ;
-(void)_recordActivityWithFailure:(id)arg1 ;
-(id)initWithSelector:(SEL)arg1 ;
-(id)init;
-(void)dealloc;
-(BOOL)isEqual:(id)arg1 ;
-(NSString *)description;
-(NSString *)name;
-(id)initWithInvocation:(id)arg1 ;
-(id)bundle;
-(void)setInvocation:(NSInvocation *)arg1 ;
-(NSInvocation *)invocation;
-(void)recordFailureWithDescription:(id)arg1 inFile:(id)arg2 atLine:(unsigned long long)arg3 expected:(BOOL)arg4 ;
-(Class)testRunClass;
-(id)expectationWithDescription:(id)arg1 ;
-(void)waitForExpectationsWithTimeout:(double)arg1 handler:(/*^block*/id)arg2 ;
-(void)addAttachment:(id)arg1 ;
-(unsigned long long)testCaseCount;
@end

