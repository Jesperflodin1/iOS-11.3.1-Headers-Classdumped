/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:27:15 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/Silex.framework/Silex
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Silex/Silex-Structs.h>
#import <libobjc.A.dylib/SXLayouter.h>

@protocol SXLayouterDelegate;
@class SXLayouterFactory, NSMutableDictionary, NSString;

@interface SXColumnLayouter : NSObject <SXLayouter> {

	id<SXLayouterDelegate> _delegate;
	SXLayouterFactory* _layouterFactory;
	NSMutableDictionary* _intersectionCache;

}

@property (nonatomic,readonly) SXLayouterFactory * layouterFactory;                  //@synthesize layouterFactory=_layouterFactory - In the implementation block
@property (nonatomic,readonly) NSMutableDictionary * intersectionCache;              //@synthesize intersectionCache=_intersectionCache - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic,__weak) id<SXLayouterDelegate> delegate;                 //@synthesize delegate=_delegate - In the implementation block
-(id<SXLayouterDelegate>)delegate;
-(void)setDelegate:(id<SXLayouterDelegate>)arg1 ;
-(id)initWithLayouterFactory:(id)arg1 ;
-(void)layoutBlueprint:(id)arg1 columnLayout:(id)arg2 layoutAttributes:(id)arg3 shouldContinue:(BOOL*)arg4 ;
-(id)columnStackForLayoutBlueprint:(id)arg1 columnLayout:(id)arg2 ;
-(void)createDependenciesForLayoutBlueprint:(id)arg1 columnStack:(id)arg2 inDependencyResolver:(id)arg3 ;
-(CGPoint)calculatePositionForComponentNode:(id)arg1 columnLayout:(id)arg2 layoutBlueprint:(id)arg3 ;
-(CGSize)calculateSizeForComponentNode:(id)arg1 columnLayout:(id)arg2 layoutBlueprint:(id)arg3 dependencyResolver:(id)arg4 ;
-(SXLayouterFactory *)layouterFactory;
-(void)analyzeSnapLinesForLayoutBlueprint:(id)arg1 ;
-(BOOL)intersectionPossibleForComponentWithBlueprint:(id)arg1 anchoredToComponentWithBlueprint:(id)arg2 layoutBlueprint:(id)arg3 columnStack:(id)arg4 ;
-(BOOL)componentBlueprint:(id)arg1 shouldIntersectWithComponentBlueprint:(id)arg2 ;
-(id)findComponentStackBeforeComponent:(id)arg1 inColumnStack:(id)arg2 ;
-(int)layoutAttributeForAnchor:(long long)arg1 ;
-(BOOL)anchorPossibleForComponentWithBlueprint:(id)arg1 anchoredToComponentWithBlueprint:(id)arg2 layoutBlueprint:(id)arg3 columnStack:(id)arg4 ;
-(double)factorForLayoutAttribute:(int)arg1 ;
-(id)sortComponentDependencies:(id)arg1 forBlueprint:(id)arg2 ;
-(NSMutableDictionary *)intersectionCache;
-(BOOL)stack:(id)arg1 stackComponents:(id)arg2 containsComponentIncludingAnchoredComponents:(id)arg3 forSourceComponent:(id)arg4 ;
@end

