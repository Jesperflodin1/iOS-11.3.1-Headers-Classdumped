/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:27:17 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/Silex.framework/Silex
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/SXVideoTransitionObserver.h>

@protocol SXVolumeReporting, SXVideoVolumeObserverFactory, SXVideoEventTrackerProviding, SXVideoVolumeObserving, SXVideoEventTracker;
@class NSString;

@interface SXVideoVolumeManager : NSObject <SXVideoTransitionObserver> {

	id<SXVolumeReporting> _volumeReporter;
	id<SXVideoVolumeObserverFactory> _volumeObserverFactory;
	id<SXVideoEventTrackerProviding> _eventTrackerProvider;
	id<SXVideoVolumeObserving> _volumeObserver;
	id<SXVideoEventTracker> _eventTracker;

}

@property (nonatomic,readonly) id<SXVolumeReporting> volumeReporter;                                //@synthesize volumeReporter=_volumeReporter - In the implementation block
@property (nonatomic,readonly) id<SXVideoVolumeObserverFactory> volumeObserverFactory;              //@synthesize volumeObserverFactory=_volumeObserverFactory - In the implementation block
@property (nonatomic,readonly) id<SXVideoEventTrackerProviding> eventTrackerProvider;               //@synthesize eventTrackerProvider=_eventTrackerProvider - In the implementation block
@property (nonatomic,retain) id<SXVideoVolumeObserving> volumeObserver;                             //@synthesize volumeObserver=_volumeObserver - In the implementation block
@property (nonatomic,retain) id<SXVideoEventTracker> eventTracker;                                  //@synthesize eventTracker=_eventTracker - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)willTransitionToVideo:(id)arg1 withTransitionCoordinator:(id)arg2 ;
-(id<SXVideoEventTrackerProviding>)eventTrackerProvider;
-(void)setVolumeObserver:(id<SXVideoVolumeObserving>)arg1 ;
-(id<SXVolumeReporting>)volumeReporter;
-(id<SXVideoVolumeObserving>)volumeObserver;
-(void)setEventTracker:(id<SXVideoEventTracker>)arg1 ;
-(id<SXVideoVolumeObserverFactory>)volumeObserverFactory;
-(id<SXVideoEventTracker>)eventTracker;
-(id)initWithVolumeReporter:(id)arg1 volumeObserverFactory:(id)arg2 eventTrackerProvider:(id)arg3 ;
@end

