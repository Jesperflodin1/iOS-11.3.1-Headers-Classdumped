/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:21:00 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/DuetActivityScheduler.framework/DuetActivityScheduler
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/NSXPCListenerDelegate.h>
#import <libobjc.A.dylib/_DASActivityGroupScheduler.h>
#import <libobjc.A.dylib/_DASActivitySchedulerIntrospecting.h>
#import <libobjc.A.dylib/_DASActivityBackgroundLaunchScheduler.h>

@protocol OS_dispatch_queue, OS_os_log;
@class NSXPCConnection, NSXPCListenerEndpoint, NSMutableDictionary, _DASSubmissionRateLimiter, NSObject, NSString;

@interface _DASScheduler : NSObject <NSXPCListenerDelegate, _DASActivityGroupScheduler, _DASActivitySchedulerIntrospecting, _DASActivityBackgroundLaunchScheduler> {

	BOOL _interrupted;
	int _resubmitToken;
	NSXPCConnection* _xpcConnection;
	NSXPCListenerEndpoint* _endpoint;
	NSMutableDictionary* _submittedActivities;
	NSMutableDictionary* _startedActivities;
	_DASSubmissionRateLimiter* _rateLimiter;
	NSObject*<OS_dispatch_queue> _queue;
	NSObject*<OS_dispatch_queue> _connectionCreationQueue;
	NSObject*<OS_dispatch_queue> _runQueue;
	NSObject*<OS_os_log> _dasFrameworkLog;

}

@property (nonatomic,retain) NSXPCConnection * xpcConnection;                                   //@synthesize xpcConnection=_xpcConnection - In the implementation block
@property (nonatomic,retain) NSXPCListenerEndpoint * endpoint;                                  //@synthesize endpoint=_endpoint - In the implementation block
@property (assign,nonatomic) BOOL interrupted;                                                  //@synthesize interrupted=_interrupted - In the implementation block
@property (assign,nonatomic) int resubmitToken;                                                 //@synthesize resubmitToken=_resubmitToken - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * submittedActivities;                         //@synthesize submittedActivities=_submittedActivities - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * startedActivities;                           //@synthesize startedActivities=_startedActivities - In the implementation block
@property (nonatomic,retain) _DASSubmissionRateLimiter * rateLimiter;                           //@synthesize rateLimiter=_rateLimiter - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> queue;                                //@synthesize queue=_queue - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> connectionCreationQueue;              //@synthesize connectionCreationQueue=_connectionCreationQueue - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> runQueue;                             //@synthesize runQueue=_runQueue - In the implementation block
@property (nonatomic,retain) NSObject*<OS_os_log> dasFrameworkLog;                              //@synthesize dasFrameworkLog=_dasFrameworkLog - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedScheduler;
+(id)schedulerWithEndpoint:(id)arg1 ;
+(id)scheduler;
-(void)submitActivity:(id)arg1 inGroupWithName:(id)arg2 ;
-(void)submitActivity:(id)arg1 ;
-(void)activityCanceled:(id)arg1 ;
-(void)activityCompleted:(id)arg1 ;
-(void)dealloc;
-(NSObject*<OS_dispatch_queue>)queue;
-(NSXPCListenerEndpoint *)endpoint;
-(BOOL)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2 ;
-(void)setQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(_DASSubmissionRateLimiter *)rateLimiter;
-(void)setRateLimiter:(_DASSubmissionRateLimiter *)arg1 ;
-(id)initWithListenerEndpoint:(id)arg1 ;
-(void)submitActivities:(id)arg1 ;
-(void)submitActivity:(id)arg1 inGroup:(id)arg2 ;
-(NSMutableDictionary *)submittedActivities;
-(void)setSubmittedActivities:(NSMutableDictionary *)arg1 ;
-(void)handleEligibleActivities:(/*^block*/id)arg1 ;
-(void)updateActivity:(id)arg1 withPriority:(unsigned long long)arg2 startAfter:(id)arg3 startBefore:(id)arg4 options:(id)arg5 ;
-(void)updateKBDownloadedOnWifi:(unsigned long long)arg1 downloadedOnCell:(unsigned long long)arg2 uploadedOnWifi:(unsigned long long)arg3 uploadedOnCell:(unsigned long long)arg4 forActivity:(id)arg5 ;
-(void)activityStarted:(id)arg1 ;
-(void)forceRunActivities:(id)arg1 ;
-(void)setMinimumBackgroundFetchInterval:(double)arg1 forApp:(id)arg2 ;
-(void)runActivities:(id)arg1 ;
-(void)suspendActivities:(id)arg1 ;
-(void)cancelActivities:(id)arg1 ;
-(void)setupXPCConnectionWithEndpoint:(id)arg1 ;
-(void)unprotectedEstablishDaemonConnectionIfInterrupted;
-(void)resubmitRunningActivities;
-(void)resubmitPendingActivities;
-(void)establishDaemonConnectionIfInterrupted;
-(BOOL)submitActivityInternal:(id)arg1 ;
-(NSObject*<OS_os_log>)dasFrameworkLog;
-(void)submitActivitiesInternal:(id)arg1 ;
-(void)handleRescindedActivity:(id)arg1 ;
-(void)handleNoLongerRunningActivities:(id)arg1 ;
-(id)runningActivities;
-(id)runningGroupActivities;
-(id)scoresForActivityWithName:(id)arg1 ;
-(id)activityRunStatistics;
-(id)currentPredictions;
-(id)submittedTaskState;
-(int)resubmitToken;
-(void)setResubmitToken:(int)arg1 ;
-(NSMutableDictionary *)startedActivities;
-(void)setStartedActivities:(NSMutableDictionary *)arg1 ;
-(NSObject*<OS_dispatch_queue>)connectionCreationQueue;
-(void)setConnectionCreationQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setDasFrameworkLog:(NSObject*<OS_os_log>)arg1 ;
-(BOOL)interrupted;
-(void)setInterrupted:(BOOL)arg1 ;
-(NSObject*<OS_dispatch_queue>)runQueue;
-(void)setRunQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)createActivityGroup:(id)arg1 ;
-(NSXPCConnection *)xpcConnection;
-(void)setXpcConnection:(NSXPCConnection *)arg1 ;
-(void)setEndpoint:(NSXPCListenerEndpoint *)arg1 ;
@end

