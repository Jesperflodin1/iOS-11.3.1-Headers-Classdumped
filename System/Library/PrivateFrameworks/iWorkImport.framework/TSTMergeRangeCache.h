/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:30:06 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <iWorkImport/iWorkImport-Structs.h>
@class TSTMergeOwner, NSMutableIndexSet, NSIndexSet;

@interface TSTMergeRangeCache : NSObject {

	TSTMergeOwner* _mergeOwner;
	unordered_map<unsigned long, TSUCellRect, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, TSUCellRect> > >* _mergeRanges;
	NSMutableIndexSet* _mergeIndexes;
	TSCEBitGrid* _mergedAtCellIds;
	TSCEBitGridTransaction* _transaction;

}

@property (nonatomic,readonly) NSIndexSet * mergeIndexes; 
@property (nonatomic,readonly) TSTMergeOwner * mergeOwner;              //@synthesize mergeOwner=_mergeOwner - In the implementation block
@property (nonatomic,readonly) unsigned long long count; 
-(TSUCellRect)expandCellRangeToCoverMergedCells:(TSUCellRect)arg1 ;
-(TSTMergeOwner *)mergeOwner;
-(vector<TSUCellRect, std::__1::allocator<TSUCellRect> >*)mergeRangesIntersectingRange:(TSUCellRect)arg1 ;
-(vector<TSUCellRect, std::__1::allocator<TSUCellRect> >*)mergeRangesIntersectingCellRegion:(id)arg1 ;
-(id)expandCellRegionToCoverMergedCells:(id)arg1 ;
-(void)enumerateCacheItemsUsingBlock:(/*^block*/id)arg1 ;
-(void)removeMergeRangeAtIndex:(unsigned long long)arg1 ;
-(void)setMerge:(TSUCellRect)arg1 atIndex:(unsigned long long)arg2 ;
-(id)initWithMergeOwner:(id)arg1 ;
-(void)enumerateCacheItemsIntersectingRange:(TSUCellRect)arg1 usingBlock:(/*^block*/id)arg2 ;
-(TSUCellRect)mergeRangeAtIndex:(unsigned long long)arg1 ;
-(void)enumerateCacheItemsIntersectingCellRegion:(id)arg1 usingBlock:(/*^block*/id)arg2 ;
-(BOOL)hasRangeSpanningRowsForCellRange:(TSUCellRect)arg1 ;
-(void)openRewritingTransaction;
-(void)commitRewritingTransaction;
-(NSIndexSet *)mergeIndexes;
-(void)p_updateGridForReplacingRange:(TSUCellRect)arg1 withRange:(TSUCellRect)arg2 ;
-(unsigned long long)count;
-(void)dealloc;
-(id)description;
-(TSUCellRect)mergedRangeForCellID:(TSUCellCoord)arg1 ;
-(BOOL)partiallyIntersectsCellRange:(TSUCellRect)arg1 ;
-(id)mergedGridIndicesForDimension:(long long)arg1 ;
-(vector<TSUCellRect, std::__1::allocator<TSUCellRect> >*)mergeRanges;
-(BOOL)partiallyIntersectsCellRegion:(id)arg1 ;
@end

