/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:30:04 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <iWorkImport/TSTCellDiffing.h>
#import <iWorkImport/TSSPropertyCommandSerializing.h>

@class NSString, TSWPStorage, TSUFormatObject;

@interface TSTCellFormatAndValue : NSObject <NSCopying, TSTCellDiffing, TSSPropertyCommandSerializing> {

	unsigned mValueType : 8;
	BOOL mUseAllSpareFormats;
	BOOL mSuppressApplyValue;
	BOOL mApplySpareFormatOnly;
	int mSpareFormatType;
	SCD_Union_TS633 mValue;
	NSString* mFormattedValue;
	TSWPStorage* mFormattedRichTextStorage;
	unsigned short mExplicitFlags;
	int mCurrentFormatType;
	TSUFormatObject* mNumberFormat;
	TSUFormatObject* mCurrencyFormat;
	TSUFormatObject* mDateFormat;
	TSUFormatObject* mDurationFormat;
	TSUFormatObject* mStepperSliderFormat;
	TSUFormatObject* mBaseFormat;
	TSUFormatObject* mMultipleChoiceFormat;
	TSUFormatObject* mCustomFormat;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)cellDiffProperties;
+(id)formatAndValueFromCell:(id)arg1 useAllSpareFormats:(BOOL)arg2 ;
+(id)formatAndValueFromCell:(id)arg1 useAllSpareFormats:(BOOL)arg2 forceNoContent:(BOOL)arg3 ;
+(id)formatAndValueFromRichTextCell:(id)arg1 updatingStorageWithBlock:(/*^block*/id)arg2 ;
+(id)formatAndValueForCoercingControlCellToNonControlType:(id)arg1 ;
+(id)formatAndValueFromCell:(id)arg1 applySpareFormatOnly:(int)arg2 ;
-(id)initFromPropertyCommandMessage:(const Message*)arg1 unarchiver:(id)arg2 ;
-(void)saveToPropertyCommandMessage:(Message*)arg1 archiver:(id)arg2 ;
-(id)objectByRemovingPropertiesInMap:(id)arg1 addingPropertiesInMap:(id)arg2 updateInverseResetPropertyMap:(id)arg3 updateInverseSetPropertyMap:(id)arg4 ;
-(id)initFromCell:(id)arg1 useAllSpareFormats:(BOOL)arg2 ;
-(id)initFromCell:(id)arg1 useAllSpareFormats:(BOOL)arg2 forceNoContent:(BOOL)arg3 applySpareFormatOnly:(int)arg4 ;
-(id)p_sikritCopyStorage:(id)arg1 ;
-(id*)p_formatObjectForFormatType:(int)arg1 ;
-(id)copyForApplyingNoContentWithSuppressApplyValue:(BOOL)arg1 ;
-(id)copyForApplyingNoContent;
-(id)copyForNotApplyingValue;
-(BOOL)isControl;
-(BOOL)isFormulaSyntaxError;
-(id)getCurrentFormat;
-(BOOL)hasStringContentMatchingCell:(id)arg1 ;
-(void)applyToCell:(id)arg1 ;
-(int)valueType;
-(void)dealloc;
-(id)copyWithZone:(NSZone*)arg1 ;
@end

