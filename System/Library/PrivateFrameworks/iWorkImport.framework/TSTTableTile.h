/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:30:02 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSPObject.h>

@class NSMutableArray;

@interface TSTTableTile : TSPObject {

	unsigned char _maxColumn;
	unsigned char _storageVersion;
	unsigned short _maxRow;
	unsigned short _numCells;
	unsigned short _numRows;
	NSMutableArray* _rowInfos;

}

@property (assign,nonatomic) unsigned char maxColumn;                           //@synthesize maxColumn=_maxColumn - In the implementation block
@property (assign,nonatomic) unsigned short maxRow;                             //@synthesize maxRow=_maxRow - In the implementation block
@property (assign,nonatomic) unsigned short numCells;                           //@synthesize numCells=_numCells - In the implementation block
@property (assign,nonatomic) unsigned short numRows;                            //@synthesize numRows=_numRows - In the implementation block
@property (nonatomic,retain) NSMutableArray * rowInfos;                         //@synthesize rowInfos=_rowInfos - In the implementation block
@property (assign,nonatomic) unsigned char storageVersion;                      //@synthesize storageVersion=_storageVersion - In the implementation block
@property (nonatomic,readonly) BOOL shouldSplitRows; 
@property (nonatomic,readonly) BOOL shouldMergeRows; 
@property (nonatomic,readonly) unsigned short midpointForRowSplit; 
-(void)saveToArchiver:(id)arg1 ;
-(void)loadFromUnarchiver:(id)arg1 ;
-(void)p_recalculateMaxRowAndColumn;
-(void)p_recalculateCellCount;
-(void)pruneEmptyRows;
-(void)p_recalculateMaxRow;
-(void)p_insertRowInfo:(id)arg1 atTileRowIndex:(unsigned short)arg2 ;
-(void)p_recalculateMaxColumn;
-(id)p_addRowInfoAtTileRowIndex:(unsigned short)arg1 ;
-(id)rowInfoForTileRowIndex:(unsigned short)arg1 createIfMissing:(BOOL)arg2 ;
-(void)p_removeRowInfo:(id)arg1 ;
-(void)setRowInfos:(NSMutableArray *)arg1 ;
-(void)setMaxColumn:(unsigned char)arg1 ;
-(void)setMaxRow:(unsigned short)arg1 ;
-(void)setNumCells:(unsigned short)arg1 ;
-(void)setNumRows:(unsigned short)arg1 ;
-(id)rowInfoAtOrAfterTileRowIndex:(unsigned short)arg1 outTileRowIndex:(out unsigned short*)arg2 ;
-(id)rowInfoForTileArrayIndex:(unsigned short)arg1 ;
-(TSTCellStorage*)cellStorageRefAtColumnIndex:(unsigned char)arg1 tileRowIndex:(unsigned short)arg2 ;
-(void)setCell:(id)arg1 atColumnIndex:(unsigned char)arg2 tileRowIndex:(unsigned short)arg3 ;
-(int)insertColumnsAtColumnIndex:(unsigned char)arg1 numberOfColumns:(unsigned short)arg2 ;
-(int)removeColumnsAtColumnIndex:(unsigned char)arg1 numberOfColumns:(unsigned short)arg2 ;
-(void)moveColumnsAtColumnIndex:(unsigned char)arg1 numberOfColumns:(unsigned short)arg2 toDestColumnIndex:(unsigned char)arg3 ;
-(void)insertRowsAtTileRowIndex:(unsigned short)arg1 numberOfRows:(unsigned short)arg2 ;
-(void)removeRowsAtTileRowIndex:(unsigned short)arg1 numberOfRows:(unsigned short)arg2 ;
-(void)yankRowsAtTileRowIndex:(unsigned short)arg1 numberOfRows:(unsigned short)arg2 outRowArray:(id)arg3 ;
-(id)yankRowInfoAtTileRowIndex:(unsigned short)arg1 ;
-(void)spliceAtTileRowIndex:(unsigned short)arg1 withRowInfo:(id)arg2 ;
-(BOOL)shouldSplitRows;
-(BOOL)shouldMergeRows;
-(BOOL)shouldMergeRowsWithTile:(id)arg1 ;
-(unsigned short)midpointForRowSplit;
-(id)splitAtRowIndex:(unsigned short)arg1 ;
-(void)mergeWithTile:(id)arg1 atRowOffset:(unsigned short)arg2 ;
-(unsigned char)storageVersion;
-(void)setStorageVersion:(unsigned char)arg1 ;
-(id)description;
-(id)initWithContext:(id)arg1 ;
-(id)packageLocator;
-(id)initWithRows:(id)arg1 context:(id)arg2 ;
-(unsigned char)maxColumn;
-(unsigned short)maxRow;
-(unsigned short)numCells;
-(unsigned short)numRows;
-(NSMutableArray *)rowInfos;
-(void)i_upgradeTileRowInfosWithDataStore:(id)arg1 ;
@end

