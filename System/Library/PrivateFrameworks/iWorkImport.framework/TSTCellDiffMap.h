/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:30:06 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSPObject.h>
#import <libobjc.A.dylib/NSCopying.h>

@class TSTCellUIDList, NSMutableArray;

@interface TSTCellDiffMap : TSPObject <NSCopying> {

	vector<TSUCellCoord, std::__1::allocator<TSUCellCoord> >* _cellIDs;
	BOOL _uidBased;
	TSTCellUIDList* _cellUIDList;
	NSMutableArray* _mutableDiffList;

}

@property (assign,getter=isUIDBased,nonatomic) BOOL uidBased;               //@synthesize uidBased=_uidBased - In the implementation block
@property (nonatomic,retain) TSTCellUIDList * cellUIDList;                  //@synthesize cellUIDList=_cellUIDList - In the implementation block
@property (nonatomic,retain) NSMutableArray * mutableDiffList;              //@synthesize mutableDiffList=_mutableDiffList - In the implementation block
@property (nonatomic,readonly) unsigned long long count; 
+(id)cellDiffMapWithContext:(id)arg1 ;
-(void)saveToArchiver:(id)arg1 ;
-(void)loadFromUnarchiver:(id)arg1 ;
-(BOOL)isUIDBased;
-(TSTCellUIDList *)cellUIDList;
-(void)setUidBased:(BOOL)arg1 ;
-(void)setCellUIDList:(TSTCellUIDList *)arg1 ;
-(id)initWithContext:(id)arg1 cellDiffArray:(id)arg2 cellUIDList:(id)arg3 uidBased:(BOOL)arg4 ;
-(NSMutableArray *)mutableDiffList;
-(id)p_copyAndAddCellDiff:(id)arg1 andCellUID:(TSTCellUID)arg2 ;
-(void)p_resolveCellIDsToUUIDsByTableInfo:(id)arg1 ;
-(void)addCellDiff:(id)arg1 andCellUID:(TSTCellUID)arg2 ;
-(void)setMutableDiffList:(NSMutableArray *)arg1 ;
-(id)initWithContext:(id)arg1 cellDiff:(id)arg2 cellUIDList:(id)arg3 ;
-(void)addCellDiff:(id)arg1 andCellID:(TSUCellCoord)arg2 ;
-(id)prunedCellDiffMapAgainstTable:(id)arg1 allowMergeFragment:(BOOL)arg2 addingPrunedIndicesToIndexSet:(id)arg3 ;
-(id)uuidBasedCellDiffMapByTableInfo:(id)arg1 ;
-(id)cellDiffMapByIntersectingUIDs:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 inRows:(BOOL)arg2 ;
-(id)cellDiffMapByRemovingRows:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 ;
-(id)cellDiffMapByRemovingColumns:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 ;
-(void)enumerateCellIDElementsUsingBlock:(/*^block*/id)arg1 ;
-(unsigned long long)count;
-(void)dealloc;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)initWithContext:(id)arg1 ;
-(void)enumerateElementsUsingBlock:(/*^block*/id)arg1 ;
-(const vector<TSUCellCoord, std::__1::allocator<TSUCellCoord> >*)cellIDs;
@end

