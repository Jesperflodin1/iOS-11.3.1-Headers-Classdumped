/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:29:47 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSSPropertyValueArchiving.h>
#import <iWorkImport/TSSPropertyCommandSerializing.h>
#import <iWorkImport/TSSPreset.h>
#import <iWorkImport/TSSPresetSource.h>
#import <libobjc.A.dylib/NSCopying.h>

@class NSString, UIColor;

@interface TSUColor : NSObject <TSSPropertyValueArchiving, TSSPropertyCommandSerializing, TSSPreset, TSSPresetSource, NSCopying> {

	CGColorRef mCGColor;
	unsigned long long mColorRGBSpace;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) NSString * presetKind; 
@property (readonly) CGColorRef CGColor; 
@property (nonatomic,readonly) unsigned long long colorRGBSpace; 
@property (nonatomic,readonly) double blueComponent; 
@property (nonatomic,readonly) double redComponent; 
@property (nonatomic,readonly) double greenComponent; 
@property (nonatomic,readonly) double alphaComponent; 
@property (nonatomic,readonly) UIColor * UIColor; 
+(id)colorWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4 targetRGBSpace:(unsigned long long)arg5 ;
+(id)instanceWithArchive:(const Message*)arg1 unarchiver:(id)arg2 ;
+(id)whiteColor;
+(id)grayColor;
+(id)blackColor;
+(id)colorWithWhite:(double)arg1 alpha:(double)arg2 ;
+(id)clearColor;
+(id)colorWithCGColor:(CGColorRef)arg1 ;
+(id)colorWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4 ;
+(id)lightGrayColor;
+(id)redColor;
+(id)greenColor;
+(id)blueColor;
+(id)cyanColor;
+(id)magentaColor;
+(id)yellowColor;
+(id)orangeColor;
+(id)purpleColor;
+(id)brownColor;
+(id)colorWithPatternImage:(id)arg1 ;
+(id)colorWithHue:(double)arg1 saturation:(double)arg2 brightness:(double)arg3 alpha:(double)arg4 ;
+(id)presetKinds;
+(void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3 ;
+(id)p_defaultPresetColors:(int)arg1 ;
+(id)randomColor;
+(id)colorWithUIColor:(id)arg1 ;
+(id)highContrastBackgroundColorForPreset:(id)arg1 ;
+(id)colorWithHue:(double)arg1 saturation:(double)arg2 brightness:(double)arg3 alpha:(double)arg4 targetRGBSpace:(unsigned long long)arg5 ;
+(id)colorWithHexString:(id)arg1 ;
-(void)saveToMessage:(Color*)arg1 ;
-(void)saveToArchive:(Color*)arg1 archiver:(id)arg2 ;
-(id)p_colorForComparingWithColor:(id)arg1 ;
-(id)colorByCompositingSourceOverDestinationColor:(id)arg1 ;
-(id)initWithArchive:(const Color*)arg1 unarchiver:(id)arg2 ;
-(long long)mixingTypeWithObject:(id)arg1 context:(id)arg2 ;
-(id)initFromPropertyCommandMessage:(const Message*)arg1 unarchiver:(id)arg2 ;
-(void)saveToPropertyCommandMessage:(Message*)arg1 archiver:(id)arg2 ;
-(CGColorRef)CGColor;
-(void)dealloc;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)colorWithAlphaComponent:(double)arg1 ;
-(id)initWithWhite:(double)arg1 alpha:(double)arg2 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(BOOL)isOpaque;
-(double)alphaComponent;
-(id)initWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4 ;
-(id)initWithCGColor:(CGColorRef)arg1 ;
-(id)initWithHue:(double)arg1 saturation:(double)arg2 brightness:(double)arg3 alpha:(double)arg4 ;
-(id)initWithPatternImage:(id)arg1 ;
-(id)initWithUIColor:(id)arg1 ;
-(double)redComponent;
-(double)greenComponent;
-(double)blueComponent;
-(NSString *)presetKind;
-(id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2 ;
-(void)paintPath:(CGPathRef)arg1 inContext:(CGContextRef)arg2 ;
-(void)paintRect:(CGRect)arg1 inContext:(CGContextRef)arg2 ;
-(id)grayscaleColor;
-(id)invertedColor;
-(double)luminance;
-(id)blendedColorWithFraction:(double)arg1 ofColor:(id)arg2 ;
-(id)newBlendedColorWithFraction:(double)arg1 ofColor:(id)arg2 ;
-(BOOL)isNearlyWhite;
-(BOOL)isAlmostEqualToColor:(id)arg1 ;
-(UIColor *)UIColor;
-(void)getRGBAComponents:(double*)arg1 ;
-(id)initWithHue:(double)arg1 saturation:(double)arg2 brightness:(double)arg3 alpha:(double)arg4 targetRGBSpace:(unsigned long long)arg5 ;
-(id)initWithHexString:(id)arg1 ;
-(id)initWithCGColor:(CGColorRef)arg1 colorSpace:(unsigned long long)arg2 ;
-(id)initWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4 colorSpace:(unsigned long long)arg5 ;
-(BOOL)isEqualWithTolerance:(id)arg1 ;
-(unsigned long long)colorRGBSpace;
-(BOOL)p_isEqualToColor:(id)arg1 withTolerance:(double)arg2 ;
-(double)p_rgbComponentWithIndex:(unsigned char)arg1 ;
-(double)hueComponent;
-(double)saturationComponent;
-(double)brightnessComponent;
-(BOOL)wantsHighContrastBackgroundForDarkMode:(id)arg1 ;
-(id)hexString;
-(id)initWithMessage:(const Color*)arg1 ;
@end

