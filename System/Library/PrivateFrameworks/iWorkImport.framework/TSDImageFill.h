/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:29:59 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSDFill.h>
#import <iWorkImport/TSDMixing.h>
#import <iWorkImport/TSSPresetSource.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/NSMutableCopying.h>

@protocol OS_dispatch_queue;
@class TSPData, TSUColor, TSDImageFillCachedImage, NSObject;

@interface TSDImageFill : TSDFill <TSDMixing, TSSPresetSource, NSCopying, NSMutableCopying> {

	TSPData* mImageData;
	int mTechnique;
	TSUColor* mTintColor;
	TSDImageFillCachedImage* mStandardSizeTintedImage;
	TSDImageFillCachedImage* mHalfSizeTintedImage;
	TSDImageFillCachedImage* mQuarterSizeTintedImage;
	TSUColor* mReferenceColor;
	CGSize mFillSize;
	BOOL mHasIndicatedInterestInProvider;
	NSObject*<OS_dispatch_queue> mTempRenderLock;
	CGImageRef mTempRenderCopy;
	CGImageRef mSourceOfTempRenderCopy;
	long long mTempRenderCount;

}

@property (assign,nonatomic) int technique; 
@property (setter=p_setImageData:,nonatomic,retain) TSPData * p_imageData; 
@property (assign,setter=p_setTechnique:,nonatomic) int p_technique; 
@property (setter=p_setTintColor:,nonatomic,retain) TSUColor * p_tintColor; 
@property (assign,setter=p_setFillSize:,nonatomic) CGSize p_fillSize; 
@property (nonatomic,retain,readonly) TSPData * imageData; 
@property (nonatomic,readonly) CGSize fillSize; 
@property (nonatomic,copy,readonly) TSUColor * tintColor; 
@property (nonatomic,readonly) double scale; 
+(id)instanceWithArchive:(const FillArchive*)arg1 unarchiver:(id)arg2 ;
+(id)presetKinds;
+(void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3 ;
-(void)saveToArchive:(FillArchive*)arg1 archiver:(id)arg2 ;
-(id)initWithArchive:(const FillArchive*)arg1 unarchiver:(id)arg2 ;
-(long long)mixingTypeWithObject:(id)arg1 context:(id)arg2 ;
-(id)initWithImageData:(id)arg1 technique:(int)arg2 tintColor:(id)arg3 size:(CGSize)arg4 ;
-(void)drawFillInContext:(CGContextRef)arg1 rect:(CGRect)arg2 clippingToPath:(CGPathRef)arg3 ;
-(BOOL)tsch_hasAllResources;
-(void)p_setImageData:(id)arg1 ;
-(void)p_setTechnique:(int)arg1 ;
-(void)p_setTintColor:(id)arg1 ;
-(void)p_setFillSize:(CGSize)arg1 ;
-(CGSize)p_fillSize;
-(int)p_technique;
-(TSUColor *)p_tintColor;
-(BOOL)p_shouldPersistFillSizeForData:(id)arg1 ;
-(id)p_tintedImageWithScale:(double)arg1 ;
-(void)p_paintPath:(CGPathRef)arg1 inContext:(CGContextRef)arg2 rectForFill:(CGRect)arg3 ;
-(void)p_clearTintedImageCache;
-(id)copyWithNewImageData:(id)arg1 ;
-(double)scale;
-(void)dealloc;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(TSUColor *)tintColor;
-(id)copyWithZone:(NSZone*)arg1 ;
-(BOOL)isOpaque;
-(id)mutableCopyWithZone:(NSZone*)arg1 ;
-(id)referenceColor;
-(TSPData *)imageData;
-(SEL)mapThemeAssetSelector;
-(id)presetKind;
-(void)drawSwatchInRect:(CGRect)arg1 inContext:(CGContextRef)arg2 ;
-(id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2 ;
-(void)paintPath:(CGPathRef)arg1 inContext:(CGContextRef)arg2 ;
-(int)fillType;
-(void)paintPath:(CGPathRef)arg1 naturalBounds:(CGRect)arg2 inContext:(CGContextRef)arg3 isPDF:(BOOL)arg4 ;
-(BOOL)drawsInOneStep;
-(CGSize)renderedImageSizeForObjectSize:(CGSize)arg1 ;
-(void)applyToCALayer:(id)arg1 withScale:(double)arg2 ;
-(BOOL)canApplyToCALayer;
-(id)p_validatedImageProvider;
-(TSPData *)p_imageData;
-(CGSize)fillSize;
-(void)p_setFillSizeForApplicationData;
-(int)technique;
-(id)p_standardSizeCachedImage;
-(BOOL)p_shouldApplyTintedImage;
-(id)p_quarterSizeCachedImage;
-(id)p_halfSizeCachedImage;
-(BOOL)canApplyToCALayerByAddingSublayers;
-(id)p_cachedImageForSize:(CGSize)arg1 inContext:(CGContextRef)arg2 orLayer:(id)arg3 ;
-(CGRect)p_drawnRectForImageSize:(CGSize)arg1 destRect:(CGRect)arg2 inContext:(CGContextRef)arg3 ;
-(CGSize)p_sizeOfFillImageForDestRect:(CGRect)arg1 inContext:(CGContextRef)arg2 ;
-(void)p_drawBitmapImage:(CGImageRef)arg1 withOrientation:(long long)arg2 inContext:(CGContextRef)arg3 bounds:(CGRect)arg4 ;
-(void)p_drawPDFWithProvider:(id)arg1 inContext:(CGContextRef)arg2 bounds:(CGRect)arg3 ;
-(id)imageDataAtFillSize;
-(BOOL)shouldBeReappliedToCALayer:(id)arg1 ;
-(void)setTechnique:(int)arg1 ;
-(void)i_commonInit;
@end

