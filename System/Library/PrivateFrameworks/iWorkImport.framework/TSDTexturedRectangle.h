/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:29:57 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>

@protocol MTLTexture;
@class NSMapTable, TSUBezierPath, TSDBitmapRenderingQualityInfo, CALayer, TSDTextureSet, NSOperation, NSString, TSUColor;

@interface TSDTexturedRectangle : NSObject <NSCopying> {

	CGRect _originalFrame;
	/*^block*/id _renderBlock;
	BOOL _singleTextureContainsMipmaps;
	BOOL _didInitFromGLTexture;
	BOOL _didInitFromLayer;
	BOOL _shouldCleanUpSingleTexture;
	NSMapTable* _eventIndexToViewLayerMap;
	CGColorSpaceRef _colorSpace;
	TSUBezierPath* _shapePath;
	TSUBezierPath* _bakedShapePath;
	BOOL _isIncomingContent;
	BOOL _isVerticalText;
	BOOL _isFlattenedRepresentation;
	unsigned _singleTextureName;
	CGImageRef _bakedImage;
	TSDBitmapRenderingQualityInfo* _bitmapRenderingQualityInfo;
	CALayer* _layer;
	id<MTLTexture> _metalTexture;
	TSDTextureSet* _parent;
	NSOperation* _renderingOperation;
	NSOperation* _renderingOperationOpenGL;
	NSOperation* _renderingOperationMetal;
	CGImageRef _sourceImage;
	NSString* _text;
	double _textBaseline;
	TSUColor* _textColor;
	double _textXHeight;
	long long _textureType;
	double _textureOpacity;
	CGPoint _offset;
	CGPoint _originalPosition;
	CGSize _singleTextureSize;
	CGSize _size;
	NSRange _textRange;
	CGRect _contentRect;

}

@property (assign) CGImageRef sourceImage;                                                                   //@synthesize sourceImage=_sourceImage - In the implementation block
@property (assign) CGImageRef bakedImage;                                                                    //@synthesize bakedImage=_bakedImage - In the implementation block
@property (nonatomic,readonly) BOOL isSingleTextureSetup; 
@property (nonatomic,readonly) unsigned singleTextureName;                                                   //@synthesize singleTextureName=_singleTextureName - In the implementation block
@property (nonatomic,readonly) CGSize singleTextureSize;                                                     //@synthesize singleTextureSize=_singleTextureSize - In the implementation block
@property (nonatomic,readonly) unsigned singleTextureTarget; 
@property (assign,nonatomic) CGPoint originalPosition;                                                       //@synthesize originalPosition=_originalPosition - In the implementation block
@property (assign,nonatomic) CGPoint offset;                                                                 //@synthesize offset=_offset - In the implementation block
@property (assign,nonatomic) CGSize size;                                                                    //@synthesize size=_size - In the implementation block
@property (nonatomic,readonly) CGRect frame; 
@property (nonatomic,readonly) CGRect frameOnCanvas; 
@property (assign,nonatomic) CGRect contentRect;                                                             //@synthesize contentRect=_contentRect - In the implementation block
@property (assign,nonatomic,__weak) TSDTextureSet * parent;                                                  //@synthesize parent=_parent - In the implementation block
@property (nonatomic,readonly) CALayer * layer;                                                              //@synthesize layer=_layer - In the implementation block
@property (nonatomic,readonly) CGImageRef image; 
@property (assign,nonatomic) long long textureType;                                                          //@synthesize textureType=_textureType - In the implementation block
@property (assign,nonatomic) double textureOpacity;                                                          //@synthesize textureOpacity=_textureOpacity - In the implementation block
@property (nonatomic,readonly) double singleTextureOpacity; 
@property (assign,nonatomic) BOOL isFlattenedRepresentation;                                                 //@synthesize isFlattenedRepresentation=_isFlattenedRepresentation - In the implementation block
@property (assign,nonatomic) CGColorSpaceRef colorSpace;                                                     //@synthesize colorSpace=_colorSpace - In the implementation block
@property (nonatomic,readonly) BOOL isRenderable; 
@property (nonatomic,readonly) BOOL isImageSource; 
@property (nonatomic,readonly) BOOL isRendered; 
@property (nonatomic,readonly) BOOL isBackgroundTexture; 
@property (nonatomic,readonly) CALayer * parentLayer; 
@property (assign,nonatomic) BOOL isIncomingContent;                                                         //@synthesize isIncomingContent=_isIncomingContent - In the implementation block
@property (assign,nonatomic) BOOL isVerticalText;                                                            //@synthesize isVerticalText=_isVerticalText - In the implementation block
@property (assign,nonatomic) double textBaseline;                                                            //@synthesize textBaseline=_textBaseline - In the implementation block
@property (assign,nonatomic) double textXHeight;                                                             //@synthesize textXHeight=_textXHeight - In the implementation block
@property (nonatomic,copy) TSUColor * textColor;                                                             //@synthesize textColor=_textColor - In the implementation block
@property (nonatomic,copy) NSString * text;                                                                  //@synthesize text=_text - In the implementation block
@property (assign,nonatomic) NSRange textRange;                                                              //@synthesize textRange=_textRange - In the implementation block
@property (assign,nonatomic,__weak) TSDBitmapRenderingQualityInfo * bitmapRenderingQualityInfo;              //@synthesize bitmapRenderingQualityInfo=_bitmapRenderingQualityInfo - In the implementation block
@property (nonatomic,copy) TSUBezierPath * shapePath;                                                        //@synthesize shapePath=_shapePath - In the implementation block
@property (assign) NSOperation * renderingOperation;                                                         //@synthesize renderingOperation=_renderingOperation - In the implementation block
@property (assign) NSOperation * renderingOperationOpenGL;                                                   //@synthesize renderingOperationOpenGL=_renderingOperationOpenGL - In the implementation block
@property (assign) NSOperation * renderingOperationMetal;                                                    //@synthesize renderingOperationMetal=_renderingOperationMetal - In the implementation block
@property (nonatomic,readonly) id<MTLTexture> metalTexture;                                                  //@synthesize metalTexture=_metalTexture - In the implementation block
+(CGRect)boundingRectForTextures:(id)arg1 ;
+(CGRect)boundingRectOnCanvasForTextures:(id)arg1 ;
-(void)setIsIncomingContent:(BOOL)arg1 ;
-(TSDBitmapRenderingQualityInfo *)bitmapRenderingQualityInfo;
-(void)setShapePath:(TSUBezierPath *)arg1 ;
-(void)p_initializeMap;
-(BOOL)isSingleTextureSetup;
-(CGSize)singleTextureSize;
-(BOOL)isMetalTextureSetup;
-(BOOL)isFlattenedRepresentation;
-(void)p_updateFrame;
-(id)viewLayerAtEventIndex:(unsigned long long)arg1 ;
-(CGImageRef)p_newImageAndBufferWithAngle:(double)arg1 scale:(double)arg2 offset:(CGPoint)arg3 transform:(CGAffineTransform*)arg4 ;
-(char*)p_setupTextureDataWithSize:(CGSize)arg1 ;
-(void)p_setupSingleTextureAndGenerateMipMaps:(BOOL)arg1 withContext:(id)arg2 ;
-(void)p_bakeLayerWithAngle:(double)arg1 scale:(double)arg2 layer:(id)arg3 ;
-(void)p_renderIntoContext:(CGContextRef)arg1 viewLayer:(id)arg2 shouldApplyAlpha:(BOOL)arg3 shouldIgnoreLayerVisibility:(BOOL)arg4 ;
-(NSOperation *)renderingOperation;
-(NSOperation *)renderingOperationOpenGL;
-(NSOperation *)renderingOperationMetal;
-(id)initWithTextureInfo:(id)arg1 frame:(CGRect)arg2 ;
-(id)initWithLayer:(id)arg1 forGLTexture:(id)arg2 ;
-(id)initWithLayer:(id)arg1 forMetalTexture:(id)arg2 ;
-(TSUBezierPath *)shapePath;
-(BOOL)isImageSource;
-(void)adjustAnchorRelativeToCenterOfRotation:(CGPoint)arg1 atEventIndex:(unsigned long long)arg2 ;
-(void)resetAnchorPointAtEventIndex:(unsigned long long)arg1 ;
-(void)resetToSourceImageAtEventIndex:(unsigned long long)arg1 ;
-(void)evictRenderedResources;
-(void)setupSingleTextureWithContext:(id)arg1 ;
-(void)bakeLayerWithAngle:(double)arg1 scale:(double)arg2 layer:(id)arg3 ;
-(void)renderIntoContext:(CGContextRef)arg1 shouldApplyAlpha:(BOOL)arg2 shouldIgnoreLayerVisibility:(BOOL)arg3 ;
-(void)renderIntoContext:(CGContextRef)arg1 shouldApplyAlpha:(BOOL)arg2 ;
-(void)renderIntoContext:(CGContextRef)arg1 eventIndex:(unsigned long long)arg2 shouldApplyAlpha:(BOOL)arg3 ;
-(CGRect)convertToCanvasCoordinates:(CGRect)arg1 ;
-(void)waitUntilAsyncRenderingIsCompleteShouldCancel:(BOOL)arg1 ;
-(void)setupMetalTextureForDevice:(id)arg1 ;
-(CGImageRef)bakedImage;
-(void)setBakedImage:(CGImageRef)arg1 ;
-(void)setBitmapRenderingQualityInfo:(TSDBitmapRenderingQualityInfo *)arg1 ;
-(BOOL)isIncomingContent;
-(void)setIsFlattenedRepresentation:(BOOL)arg1 ;
-(void)setRenderingOperation:(NSOperation *)arg1 ;
-(void)setRenderingOperationOpenGL:(NSOperation *)arg1 ;
-(void)setRenderingOperationMetal:(NSOperation *)arg1 ;
-(double)textXHeight;
-(void)setTextXHeight:(double)arg1 ;
-(long long)textureType;
-(id)init;
-(CGRect)frame;
-(CGSize)size;
-(void)setSize:(CGSize)arg1 ;
-(CALayer *)layer;
-(void)dealloc;
-(id)description;
-(NSString *)text;
-(void)setText:(NSString *)arg1 ;
-(void)setTextColor:(TSUColor *)arg1 ;
-(CGImageRef)image;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)teardown;
-(id)initWithCGImage:(CGImageRef)arg1 ;
-(TSUColor *)textColor;
-(CGRect)contentRect;
-(CGPoint)offset;
-(void)setOffset:(CGPoint)arg1 ;
-(CGColorSpaceRef)colorSpace;
-(void)setContentRect:(CGRect)arg1 ;
-(TSDTextureSet *)parent;
-(id)initWithLayer:(id)arg1 ;
-(NSRange)textRange;
-(void)setTextRange:(NSRange)arg1 ;
-(void)setTextBaseline:(double)arg1 ;
-(double)textBaseline;
-(void)setSourceImage:(CGImageRef)arg1 ;
-(CGImageRef)sourceImage;
-(id<MTLTexture>)metalTexture;
-(BOOL)isRendered;
-(void)setParent:(TSDTextureSet *)arg1 ;
-(id)initWithSize:(CGSize)arg1 offset:(CGPoint)arg2 renderBlock:(/*^block*/id)arg3 ;
-(void)setTextureType:(long long)arg1 ;
-(void)setTextureOpacity:(double)arg1 ;
-(void)releaseSingleTexture;
-(CGColorSpaceRef)p_colorSpace;
-(unsigned)singleTextureTarget;
-(void)setupSingleTexture;
-(BOOL)isRenderable;
-(void)renderLayerContentsIfNeeded;
-(unsigned)singleTextureName;
-(double)singleTextureOpacity;
-(BOOL)isBackgroundTexture;
-(CALayer *)parentLayer;
-(CGRect)frameOnCanvas;
-(void)setColorSpace:(CGColorSpaceRef)arg1 ;
-(CGPoint)originalPosition;
-(void)setOriginalPosition:(CGPoint)arg1 ;
-(double)textureOpacity;
-(void)setIsVerticalText:(BOOL)arg1 ;
-(BOOL)isVerticalText;
@end

