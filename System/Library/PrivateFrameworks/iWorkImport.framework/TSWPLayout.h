/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:30:09 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSDLayout.h>
#import <iWorkImport/TSDWrapInvalidationParent.h>
#import <iWorkImport/TSWPLayoutTarget.h>
#import <iWorkImport/TSWPLayoutOwner.h>

@protocol TSWPLayoutParent;
@class NSMutableArray, TSWPStorage, TSDCanvas, TSDLayout, TSWPLayoutManager, TSUBezierPath, NSString;

@interface TSWPLayout : TSDLayout <TSDWrapInvalidationParent, TSWPLayoutTarget, TSWPLayoutOwner> {

	TSWPLayoutManager* _layoutManager;
	NSMutableArray* _columns;
	BOOL _textLayoutValid;
	TSWPStorage* _storage;
	unsigned long long _lastLayoutMgrChangeCount;
	TSDLayout*<TSWPLayoutParent> _wpLayoutParent;
	BOOL _optimizeSegmentationOfEmptyLines;
	BOOL _useBlackTextColor;

}

@property (nonatomic,readonly) TSWPLayoutManager * layoutManager; 
@property (nonatomic,readonly) BOOL textLayoutValid; 
@property (nonatomic,readonly) TSUBezierPath * interiorClippingPath; 
@property (nonatomic,readonly) BOOL shouldWrapAroundExternalDrawables; 
@property (nonatomic,readonly) TSWPStorage * storage;                                                   //@synthesize storage=_storage - In the implementation block
@property (nonatomic,readonly) NSRange containedTextRange; 
@property (assign,nonatomic) BOOL optimizeSegmentationOfEmptyLines;                                     //@synthesize optimizeSegmentationOfEmptyLines=_optimizeSegmentationOfEmptyLines - In the implementation block
@property (nonatomic,readonly) BOOL isLinked; 
@property (nonatomic,readonly) BOOL isOverflowing; 
@property (assign,nonatomic) BOOL useBlackTextColor;                                                    //@synthesize useBlackTextColor=_useBlackTextColor - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) NSMutableArray * columns;                                                //@synthesize columns=_columns - In the implementation block
@property (nonatomic,readonly) id<TSWPOffscreenColumn> previousTargetLastColumn; 
@property (nonatomic,readonly) NSObject*<TSWPTopicNumberHints> previousTargetTopicNumbers; 
@property (nonatomic,readonly) id<TSWPOffscreenColumn> nextTargetFirstColumn; 
@property (nonatomic,readonly) NSObject*<TSWPTopicNumberHints> nextTargetTopicNumbers; 
@property (nonatomic,readonly) id<TSWPFootnoteHeightMeasurer> footnoteHeightMeasurer; 
@property (nonatomic,readonly) id<TSWPFootnoteMarkProvider> footnoteMarkProvider; 
@property (nonatomic,readonly) TSPObject*<TSDHint> nextTargetFirstChildHint; 
@property (nonatomic,readonly) BOOL isInstructional; 
@property (nonatomic,readonly) CGSize minSize; 
@property (nonatomic,readonly) CGSize maxSize; 
@property (nonatomic,readonly) CGSize currentSize; 
@property (nonatomic,readonly) CGPoint position; 
@property (nonatomic,readonly) CGPoint anchorPoint; 
@property (nonatomic,readonly) unsigned autosizeFlags; 
@property (nonatomic,readonly) int verticalAlignment; 
@property (nonatomic,readonly) int naturalAlignment; 
@property (nonatomic,readonly) int naturalDirection; 
@property (nonatomic,readonly) BOOL wantsLineFragments; 
@property (nonatomic,readonly) unsigned long long pageNumber; 
@property (nonatomic,readonly) unsigned long long pageCount; 
@property (nonatomic,readonly) BOOL textIsVertical; 
@property (nonatomic,readonly) BOOL layoutIsValid; 
@property (nonatomic,readonly) double maxAnchorY; 
@property (nonatomic,readonly) CGRect maskRect; 
@property (nonatomic,retain) NSMutableArray * anchoredDrawablesForRelayout; 
@property (nonatomic,readonly) TSDCanvas * canvas; 
@property (nonatomic,readonly) TSDLayout * parentLayoutForInlineAttachments; 
@property (nonatomic,readonly) BOOL shouldHyphenate; 
@property (nonatomic,readonly) CFLocaleRef hyphenationLocale; 
@property (nonatomic,readonly) BOOL repShouldPreventCaret; 
@property (nonatomic,readonly) BOOL marginsAreMirrored; 
-(double)viewScaleForZoomingToSelectionPath:(id)arg1 targetPointSize:(double)arg2 ;
-(id)interiorWrapSegments;
-(void)invalidateInlineSize;
-(void)beginResizeWrapInvalidationCluster;
-(void)endResizeWrapInvalidationCluster;
-(CGRect)rectInRootForSelectionPath:(id)arg1 ;
-(CGRect)rectInRootForPresentingAnnotationPopoverForSelectionPath:(id)arg1 ;
-(CGRect)rectInRootOfAutoZoomContextOfSelectionPath:(id)arg1 ;
-(CGRect)rectInRootForZoomingToSelectionPath:(id)arg1 ;
-(CGRect)rectInRootForAnchoringPencilAnnotationsForSelectionPath:(id)arg1 ;
-(BOOL)selectionMustBeEntirelyOnscreenToCountAsVisibleInSelectionPath:(id)arg1 ;
-(id)initWithInfo:(id)arg1 storage:(id)arg2 frame:(CGRect)arg3 ;
-(BOOL)isInstructional;
-(void)didLayoutChangingDirtyRanges;
-(BOOL)optimizeSegmentationOfEmptyLines;
-(void)didLayoutWithLayoutManager:(id)arg1 ;
-(void)i_setTextLayoutValid:(BOOL)arg1 ;
-(void)i_validateTextLayout;
-(id)validatedLayoutForInlineDrawable:(id)arg1 ;
-(void)invalidateForcingFullReLayOut;
-(BOOL)p_hasEmptyParagraphFillOrBorders;
-(void)p_clearOutLayoutManager;
-(CGRect)p_rectInRootForSelectionPath:(id)arg1 useParagraphModeRects:(BOOL)arg2 forZoom:(BOOL)arg3 ;
-(NSRange)containedTextRange;
-(void)validateTextLayoutForcibly;
-(void)setUseBlackTextColor:(BOOL)arg1 ;
-(CGRect)p_rectForSelectionPath:(id)arg1 useParagraphModeRects:(BOOL)arg2 ;
-(void)setOptimizeSegmentationOfEmptyLines:(BOOL)arg1 ;
-(BOOL)useBlackTextColor;
-(BOOL)isLinked;
-(CGSize)maxSize;
-(CGPoint)position;
-(CGPoint)anchorPoint;
-(TSWPLayoutManager *)layoutManager;
-(CGSize)minSize;
-(TSDCanvas *)canvas;
-(unsigned long long)pageCount;
-(int)verticalAlignment;
-(void)validate;
-(unsigned long long)pageNumber;
-(TSWPStorage *)storage;
-(id)initWithInfo:(id)arg1 ;
-(Class)repClassOverride;
-(id)dependentLayouts;
-(void)invalidateSize;
-(void)parentWillChangeTo:(id)arg1 ;
-(void)parentDidChange;
-(CGPoint)capturedInfoPositionForAttachment;
-(id)computeLayoutGeometry;
-(CGSize)maximumFrameSizeForChild:(id)arg1 ;
-(void)willBeAddedToLayoutController:(id)arg1 ;
-(void)willBeRemovedFromLayoutController:(id)arg1 ;
-(id)reliedOnLayouts;
-(BOOL)shouldDisplayGuides;
-(BOOL)shouldProvideSizingGuides;
-(void)wrappableChildInvalidated:(id)arg1 ;
-(NSMutableArray *)columns;
-(BOOL)textIsVertical;
-(id)initWithInfo:(id)arg1 frame:(CGRect)arg2 ;
-(void)p_invalidateTextLayout;
-(id)p_wpLayoutParent;
-(id)additionalReliedOnLayoutsForTextWrap;
-(void*)initialLayoutState;
-(BOOL)p_parentAutosizes;
-(unsigned)autosizeFlags;
-(id)columnMetricsForCharIndex:(unsigned long long)arg1 outRange:(NSRange*)arg2 ;
-(CGRect)p_protectedRectWithinLayoutForSelectionRect:(CGRect)arg1 ;
-(id)p_firstAncestorRespondingToSelector:(SEL)arg1 ;
-(BOOL)isLayoutOffscreen;
-(void)invalidateTextLayout;
-(void)invalidateParentForAutosizing;
-(id)textWrapper;
-(TSUBezierPath *)interiorClippingPath;
-(BOOL)isLastTarget;
-(void)setNeedsDisplayInTargetRect:(CGRect)arg1 ;
-(CGRect)targetRectForCanvasRect:(CGRect)arg1 ;
-(id)validatedLayoutForAnchoredDrawable:(id)arg1 ;
-(id)currentInlineDrawableLayouts;
-(id)currentAnchoredDrawableLayouts;
-(void)addAttachmentLayout:(id)arg1 ;
-(id<TSWPOffscreenColumn>)previousTargetLastColumn;
-(NSObject*<TSWPTopicNumberHints>)previousTargetTopicNumbers;
-(id<TSWPOffscreenColumn>)nextTargetFirstColumn;
-(NSObject*<TSWPTopicNumberHints>)nextTargetTopicNumbers;
-(id<TSWPFootnoteHeightMeasurer>)footnoteHeightMeasurer;
-(id<TSWPFootnoteMarkProvider>)footnoteMarkProvider;
-(TSPObject*<TSDHint>)nextTargetFirstChildHint;
-(CGSize)currentSize;
-(int)naturalAlignment;
-(int)naturalDirection;
-(BOOL)wantsLineFragments;
-(BOOL)layoutIsValid;
-(double)maxAnchorY;
-(BOOL)invalidateForPageCountChange;
-(CGRect)maskRect;
-(BOOL)caresAboutStorageChanges;
-(void)layoutManagerNeedsLayout:(id)arg1 ;
-(void)layoutManager:(id)arg1 didClearDirtyRangeWithDelta:(long long)arg2 afterCharIndex:(unsigned long long)arg3 ;
-(id)styleProvider;
-(id)textColorOverride;
-(BOOL)textLayoutValid;
-(void)invalidateForFootnoteNumberingChange;
-(BOOL)shouldWrapAroundExternalDrawables;
-(BOOL)isOverflowing;
-(BOOL)p_hasVisibleContents;
-(BOOL)p_hasEmptyList;
@end

