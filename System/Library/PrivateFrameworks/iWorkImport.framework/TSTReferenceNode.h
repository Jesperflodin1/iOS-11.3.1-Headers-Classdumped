/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:30:04 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSTExpressionNode.h>

@class TSTUidRangeRef, NSString, TSTReferenceColorHelper, TSKDocumentRoot, TSKChangeNotifier, TSCECalculationEngine;

@interface TSTReferenceNode : TSTExpressionNode {

	TSTUidRangeRef* mUidRangeRef;
	BOOL mRangeWithFunction;
	unsigned char mRangeContext;
	NSString* mRefString;
	NSString* mFormulaPlainText;
	TSTReferenceColorHelper* mReferenceColorHelper;
	BOOL mBlankForKeyboardInsertion;
	BOOL mSuppressAutomaticNamedReferenceInvalidation;
	UUIDData<TSP::UUIDData> mHostTableUID;

}

@property (nonatomic,readonly) TSKDocumentRoot * documentRoot; 
@property (nonatomic,readonly) TSKChangeNotifier * changeNotifier; 
@property (nonatomic,readonly) TSCECalculationEngine * calculationEngine; 
@property (assign,nonatomic) TSCERangeRef rangeReference; 
@property (nonatomic,readonly) UUIDData<TSP::UUIDData> tableUID; 
@property (assign,nonatomic) UUIDData<TSP::UUIDData> hostTableUID; 
@property (assign,nonatomic) TSCERangeCoordinate rangeCoordinate; 
@property (assign,nonatomic) unsigned char stickyBits; 
@property (assign,nonatomic) unsigned char rangeContext; 
@property (getter=isNonSpanningRange,nonatomic,readonly) BOOL nonSpanningRange; 
@property (getter=isRange,nonatomic,readonly) BOOL range; 
@property (getter=isLocalReference,nonatomic,readonly) BOOL localReference; 
@property (assign,getter=isRangeWithFunction,nonatomic) BOOL rangeWithFunction; 
@property (getter=isSimpleRowOrColumnReference,nonatomic,readonly) BOOL simpleRowOrColumnReference; 
@property (getter=isResizable,nonatomic,readonly) BOOL resizable; 
@property (nonatomic,retain) TSTReferenceColorHelper * referenceColorHelper; 
@property (assign,getter=isBlankForKeyboardInsertion,nonatomic) BOOL blankForKeyboardInsertion; 
@property (getter=isSingleASTNode,nonatomic,readonly) BOOL singleASTNode; 
@property (nonatomic,readonly) TSTUidRangeRef * uidRangeRef; 
+(unsigned char)stickyBitsForReference:(const TSCERangeRef*)arg1 calcEngine:(id)arg2 ;
-(unsigned char)rangeContext;
-(void)setRangeContext:(unsigned char)arg1 ;
-(UUIDData<TSP::UUIDData>)tableUID;
-(void)setStickyBits:(unsigned char)arg1 ;
-(unsigned char)stickyBits;
-(void)saveToArchiver:(id)arg1 ;
-(void)loadFromUnarchiver:(id)arg1 ;
-(TSCERangeRef)rangeReference;
-(void)saveToArchive:(ReferenceNodeArchive*)arg1 archiver:(id)arg2 ;
-(void)loadFromArchive:(const ReferenceNodeArchive*)arg1 unarchiver:(id)arg2 ;
-(void)processChanges:(id)arg1 forChangeSource:(id)arg2 ;
-(BOOL)isLocalReference;
-(void)setHostTableUID:(UUIDData<TSP::UUIDData>)arg1 ;
-(TSCERangeCoordinate)rangeCoordinate;
-(void)setRangeReference:(TSCERangeRef)arg1 stickyBits:(unsigned char)arg2 ;
-(void)setReferenceColorHelper:(TSTReferenceColorHelper *)arg1 ;
-(BOOL)isEqualToExpressionNode:(id)arg1 ;
-(id)formulaPlainText;
-(id)initWithContext:(id)arg1 children:(id)arg2 firstIndex:(unsigned long long)arg3 lastIndex:(unsigned long long)arg4 ;
-(id)initAsCopyOf:(id)arg1 intoContext:(id)arg2 children:(id)arg3 ;
-(TSTCSENodeData)recordHashesForSubexpressions:(id)arg1 ;
-(void)insertFormulaText:(id)arg1 includeWhitespace:(BOOL)arg2 ;
-(void)buildASTNodeArray:(TSCEASTNodeArray*)arg1 hostCell:(TSUCellCoord)arg2 symbolTable:(TSCESymbolTable*)arg3 ;
-(id)exportString;
-(id)initWithReferenceStart:(id)arg1 referenceEnd:(id)arg2 firstIndex:(unsigned long long)arg3 lastIndex:(unsigned long long)arg4 suppressAutomaticNamedReferenceInvalidation:(BOOL)arg5 ;
-(void)setRangeWithFunction:(BOOL)arg1 ;
-(id)initWithContext:(id)arg1 calculationEngine:(id)arg2 cellRange:(TSCERangeCoordinate)arg3 stickyBits:(unsigned char)arg4 hostTableUID:(const UUIDData<TSP::UUIDData>*)arg5 tableUID:(const UUIDData<TSP::UUIDData>*)arg6 referenceColorHelper:(id)arg7 firstIndex:(unsigned long long)arg8 lastIndex:(unsigned long long)arg9 suppressAutomaticNamedReferenceInvalidation:(BOOL)arg10 ;
-(id)initWithContext:(id)arg1 calculationEngine:(id)arg2 uidRangeRef:(id)arg3 hostTableUID:(const UUIDData<TSP::UUIDData>*)arg4 referenceColorHelper:(id)arg5 firstIndex:(unsigned long long)arg6 lastIndex:(unsigned long long)arg7 suppressAutomaticNamedReferenceInvalidation:(BOOL)arg8 ;
-(UUIDData<TSP::UUIDData>)hostTableUID;
-(BOOL)isSingleASTNode;
-(TSTUidRangeRef *)uidRangeRef;
-(TSTReferenceColorHelper *)referenceColorHelper;
-(id)initWithContext:(id)arg1 calculationEngine:(id)arg2 cellRange:(TSCERangeCoordinate)arg3 stickyBits:(unsigned char)arg4 hostTableUID:(const UUIDData<TSP::UUIDData>*)arg5 tableUID:(const UUIDData<TSP::UUIDData>*)arg6 referenceColorHelper:(id)arg7 firstIndex:(unsigned long long)arg8 lastIndex:(unsigned long long)arg9 ;
-(void)p_resetMenu;
-(BOOL)isRangeWithFunction;
-(BOOL)isValidReference;
-(void)p_buildASTNodeArray:(TSCEASTNodeArray*)arg1 forTopLeft:(BOOL)arg2 stickyBits:(unsigned char)arg3 hostCell:(TSUCellCoord)arg4 ;
-(id)initWithReferenceStart:(id)arg1 referenceEnd:(id)arg2 firstIndex:(unsigned long long)arg3 lastIndex:(unsigned long long)arg4 ;
-(void)setRangeReference:(TSCERangeRef)arg1 ;
-(void)setRangeCoordinate:(TSCERangeCoordinate)arg1 ;
-(BOOL)isNonSpanningRange;
-(BOOL)isResizable;
-(BOOL)isSimpleRowOrColumnReference;
-(BOOL)isBlankForKeyboardInsertion;
-(void)setBlankForKeyboardInsertion:(BOOL)arg1 ;
-(void)invalidate;
-(void)dealloc;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)string;
-(int)tokenType;
-(TSKChangeNotifier *)changeNotifier;
-(TSKDocumentRoot *)documentRoot;
-(BOOL)isRange;
-(TSCECalculationEngine *)calculationEngine;
@end

