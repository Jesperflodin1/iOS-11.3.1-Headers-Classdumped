/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:30:02 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol TSCEReferenceResolving <NSObject>
@required
+(id)resolverContainerMatchingName:(id)arg1 inDocumentRoot:(id)arg2;
+(id)resolverMatchingName:(id)arg1 inDocumentRoot:(id)arg2 contextResolver:(id)arg3;
+(TSCETableReference*)makeCellReferenceInSameTable:(const TSCETableReference*)arg1 cellID:(TSUCellCoord)arg2;
+(TSCETableReferenceVector*)makeReferenceVectorWithReference:(const TSCETableReference*)arg1 rangeContext:(unsigned char)arg2 apparentRangePtr:(TSCERangeCoordinate*)arg3;
+(TSCEFormat*)format:(const TSCETableReference*)arg1 fromCell:(TSUCellCoord)arg2;
+(TSCERangeCoordinate*)getRange:(const TSCETableReference*)arg1;
+(TSCERangeRef*)getRangeReference:(const TSCETableReference*)arg1;
+(int)getHidingAction:(const TSCETableReference*)arg1;
+(TSCETableReference*)canonicalCellReferenceForReference:(const TSCETableReference*)arg1;
+(TSCEValue*)scalarValue:(const TSCETableReference*)arg1 fromCell:(TSUCellCoord)arg2 permitAccessInsideMergeRegions:(BOOL)arg3 fetchRichTextAttributesIfPlainText:(BOOL)arg4;
+(int)mergeReferences:(TSCETableReference*)arg1 left:(const TSCETableReference*)arg2 right:(const TSCETableReference*)arg3;
+(void)prefetchData:(TSCEReferenceValue*)arg1 fromVectorObject:(TSCETableReferenceVector*)arg2 cellID:(TSUCellCoord)arg3;
+(TSCEFormat*)formatFromVector:(const TSCETableReferenceVector*)arg1 atIndex:(unsigned long long)arg2;
+(id)resolverMatchingNameWithContextContainer:(id)arg1 inDocumentRoot:(id)arg2 contextContainerName:(id)arg3;
-(id)mutableRowIndexesForUIDs:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1;
-(id)mutableColumnIndexesForUIDs:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1;
-(unsigned short)indexForUID:(const UUIDData<TSP::UUIDData>*)arg1 isRows:(BOOL)arg2;
-(UUIDData<TSP::UUIDData>*)conditionalStyleFormulaOwnerUID;
-(TSCERangeCoordinate*)tableRangeCoordinate;
-(vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)rowUIDsForRowRange:(NSRange)arg1;
-(vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)columnUIDsForColumnRange:(NSRange)arg1;
-(id)UIDSetForIndexes:(id)arg1 isRows:(BOOL)arg2;
-(UUIDData<TSP::UUIDData>*)columnUIDForColumnIndex:(unsigned char)arg1;
-(vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)UIDsForRange:(NSRange)arg1 isRows:(BOOL)arg2;
-(UUIDData<TSP::UUIDData>*)rowUIDForRowIndex:(unsigned short)arg1;
-(vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)UIDsForIndexes:(id)arg1 isRows:(BOOL)arg2;
-(TSCERangeCoordinate*)footerRangeCoordinate;
-(unsigned short)rowIndexForRowUID:(const UUIDData<TSP::UUIDData>*)arg1;
-(unsigned char)columnIndexForColumnUID:(const UUIDData<TSP::UUIDData>*)arg1;
-(TSCETableReference*)makeReference:(TSUCellCoord)arg1 bottomRight:(TSUCellCoord)arg2;
-(id)calcEngine;
-(TSCERangeCoordinate*)apparentRangeForRange:(TSCERangeCoordinate)arg1 rangeContext:(unsigned char)arg2;
-(TSCERangeCoordinate*)bodyRangeCoordinate;
-(UUIDData<TSP::UUIDData>*)mergeOwnerUID;
-(id)UIDSetForRange:(NSRange)arg1 isRows:(BOOL)arg2;
-(id)mutableIndexesForUIDSet:(id)arg1 isRows:(BOOL)arg2 notFoundUIDs:(id)arg3;
-(id)indexesForUIDs:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 isRows:(BOOL)arg2;
-(id)cellTextStyle:(TSUCellCoord)arg1;
-(UUIDData<TSP::UUIDData>*)resolverUID;
-(UUIDData<TSP::UUIDData>*)UIDForIndex:(unsigned short)arg1 isRows:(BOOL)arg2;
-(TSCERangeCoordinate*)preMergeRangeFromUidTract:(id)arg1;
-(TSCERangeCoordinate*)resolverExpandCellRangeToCoverMergedCells:(TSCERangeCoordinate)arg1;
-(BOOL)resolverIsATable;
-(BOOL)hasCellID:(TSUCellCoord)arg1;
-(BOOL)cellWasModifiedInThisRecalcCycle:(TSUCellCoord)arg1;
-(void)resetDependenciesForCell:(TSUCellCoord)arg1;
-(void)resetAllFormulaDependenciesForCell:(TSUCellCoord)arg1;
-(id)cellRangeName:(TSCERangeCoordinate)arg1 stickyBits:(unsigned char)arg2 suppressIdenticalEndReference:(BOOL)arg3 quoteComponents:(BOOL)arg4 forceEscaping:(BOOL)arg5 rangeNameContainsColumnOrRowName:(out BOOL*)arg6;
-(BOOL)hasNamesInHeaders;
-(vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)rowUIDsForRowIndexes:(id)arg1;
-(vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)allRowUIDs;
-(vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)columnUIDsForColumnIndexes:(id)arg1;
-(vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)allColumnUIDs;
-(id)tableInfo;
-(id)tableModel;
-(id)tableName;
-(id)sheetName;

@end

