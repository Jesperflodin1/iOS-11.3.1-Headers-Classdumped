/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:30:03 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSPObject.h>
#import <iWorkImport/TSTCustomStrokeProviding.h>

@class NSPointerArray, NSString;

@interface TSTStrokeSidecar : TSPObject <TSTCustomStrokeProviding> {

	int _maxOrder;
	NSPointerArray* _leftColumnStrokes;
	NSPointerArray* _rightColumnStrokes;
	NSPointerArray* _topRowStrokes;
	NSPointerArray* _bottomRowStrokes;

}

@property (nonatomic,retain) NSPointerArray * leftColumnStrokes;               //@synthesize leftColumnStrokes=_leftColumnStrokes - In the implementation block
@property (nonatomic,retain) NSPointerArray * rightColumnStrokes;              //@synthesize rightColumnStrokes=_rightColumnStrokes - In the implementation block
@property (nonatomic,retain) NSPointerArray * topRowStrokes;                   //@synthesize topRowStrokes=_topRowStrokes - In the implementation block
@property (nonatomic,retain) NSPointerArray * bottomRowStrokes;                //@synthesize bottomRowStrokes=_bottomRowStrokes - In the implementation block
@property (assign,nonatomic) int maxOrder;                                     //@synthesize maxOrder=_maxOrder - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)saveToArchiver:(id)arg1 ;
-(void)loadFromUnarchiver:(id)arg1 ;
-(id)initForUpgradeWithTableModel:(id)arg1 ;
-(void)setStroke:(id)arg1 forTopOfRow:(unsigned short)arg2 order:(int)arg3 columnRange:(TSTSimpleRange)arg4 ;
-(void)setStroke:(id)arg1 forBottomOfRow:(unsigned short)arg2 order:(int)arg3 columnRange:(TSTSimpleRange)arg4 ;
-(void)setStroke:(id)arg1 forLeftOfColumn:(unsigned char)arg2 order:(int)arg3 rowRange:(TSTSimpleRange)arg4 ;
-(void)setStroke:(id)arg1 forRightOfColumn:(unsigned char)arg2 order:(int)arg3 rowRange:(TSTSimpleRange)arg4 ;
-(void)enumerateStrokesInRegion:(id)arg1 usingTopStrokeBlock:(/*^block*/id)arg2 usingBottomStrokeBlock:(/*^block*/id)arg3 usingLeftStrokeBlock:(/*^block*/id)arg4 usingRightStrokeBlock:(/*^block*/id)arg5 ;
-(void)flattenStrokeOrder;
-(id)cellBorderAtCellID:(TSUCellCoord)arg1 ;
-(void)setCellBorder:(id)arg1 atCellID:(TSUCellCoord)arg2 ;
-(void)setBordersWithCellMap:(id)arg1 ;
-(void)insertRows:(NSRange)arg1 ;
-(void)insertColumns:(NSRange)arg1 ;
-(void)removeRows:(NSRange)arg1 ;
-(void)removeColumns:(NSRange)arg1 ;
-(void)moveRowIndexRange:(NSRange)arg1 toIndex:(unsigned short)arg2 ;
-(void)moveColumnIndexRange:(NSRange)arg1 toIndex:(unsigned char)arg2 ;
-(void)swapRowAtIndex:(unsigned short)arg1 withRowAtIndex:(unsigned short)arg2 ;
-(id)strokeLayerForLeftSideOfColumn:(unsigned char)arg1 ;
-(id)strokeLayerForRightSideOfColumn:(unsigned char)arg1 ;
-(id)strokeLayerForTopOfRow:(unsigned short)arg1 ;
-(id)strokeLayerForBottomOfRow:(unsigned short)arg1 ;
-(NSPointerArray *)leftColumnStrokes;
-(NSPointerArray *)rightColumnStrokes;
-(NSPointerArray *)topRowStrokes;
-(NSPointerArray *)bottomRowStrokes;
-(void)p_setLeftStroke:(id)arg1 order:(int)arg2 atCellID:(TSUCellCoord)arg3 ;
-(void)p_setRightStroke:(id)arg1 order:(int)arg2 atCellID:(TSUCellCoord)arg3 ;
-(void)p_setTopStroke:(id)arg1 order:(int)arg2 atCellID:(TSUCellCoord)arg3 ;
-(void)p_setBottomStroke:(id)arg1 order:(int)arg2 atCellID:(TSUCellCoord)arg3 ;
-(void)p_setStroke:(id)arg1 order:(int)arg2 inStrokesArray:(id)arg3 atIndex:(unsigned short)arg4 atRange:(TSTSimpleRange)arg5 ;
-(id)p_flattenMajorStrokeLayer:(id)arg1 minorStrokeLayer:(id)arg2 ;
-(void)setLeftColumnStrokes:(NSPointerArray *)arg1 ;
-(void)setRightColumnStrokes:(NSPointerArray *)arg1 ;
-(void)setTopRowStrokes:(NSPointerArray *)arg1 ;
-(void)setBottomRowStrokes:(NSPointerArray *)arg1 ;
-(int)maxOrder;
-(void)setMaxOrder:(int)arg1 ;
@end

