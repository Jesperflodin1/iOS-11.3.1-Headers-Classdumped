/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:30:01 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSPObject.h>
#import <iWorkImport/TSDMixing.h>
#import <iWorkImport/TSTCustomStrokeProviding.h>
#import <iWorkImport/TSTStyleProviding.h>
#import <iWorkImport/TSTTableHiddenRowColumnProviding.h>
#import <iWorkImport/TSTTableInternalGeometryProviding.h>
#import <iWorkImport/TSTTableMergeRangeProviding.h>
#import <iWorkImport/TSTTableStrokeProviding.h>

@class TSTTableStyle, TSTCellStyle, TSWPParagraphStyle, TSWPShapeStyle, TSDStroke, TSCECalculationEngine, TSTTableDataStore, TSTHiddenStateIndexSet, NSString, TSTTableStylePreset, TSTCell, TSCEOwnerFormulaMap, TSTImportWarningSetByCoordinateMap, TSTCellDictionary, TSCECellCoordinateVector, TSTConditionalStyleFormulaOwner, TSTMergeOwner, TSTTableFilterSet, TSTHiddenStateFormulaOwner, TSTTableSortOrder, TSTSortRuleReferenceTracker, TSTColumnRowUIDMap, TSTStrokeSidecar, TSWPStorage, NSMapTable, TSTStructuredTextImportRecord, TSCEOwnerUidMapper, NSUUID, NSArray;

@interface TSTTableModel : TSPObject <TSDMixing, TSTCustomStrokeProviding, TSTStyleProviding, TSTTableHiddenRowColumnProviding, TSTTableInternalGeometryProviding, TSTTableMergeRangeProviding, TSTTableStrokeProviding> {

	BOOL _wasCut;
	BOOL _headerRowsFrozen;
	BOOL _headerColumnsFrozen;
	BOOL _tableNameEnabled;
	BOOL _tableNameBorderEnabled;
	BOOL _repeatingHeaderRowsEnabled;
	BOOL _repeatingHeaderColumnsEnabled;
	BOOL _styleApplyClearsAll;
	BOOL _presetNeedsStrongOwnership;
	BOOL _wasUnarchivedFromAProvidedTable;
	unsigned short _numberOfRows;
	unsigned short _numberOfColumns;
	unsigned short _numberOfHeaderRows;
	unsigned short _numberOfHeaderColumns;
	unsigned short _numberOfFooterRows;
	unsigned short _numberOfHiddenRows;
	unsigned short _numberOfHiddenColumns;
	unsigned short _numberOfUserHiddenRows;
	unsigned short _numberOfUserHiddenColumns;
	unsigned short _numberOfFilteredRows;
	TSCECalculationEngine* _calcEngine;
	TSTTableDataStore* _dataStore;
	TSTHiddenStateIndexSet* _hiddenRows;
	TSTHiddenStateIndexSet* _userHiddenRows;
	TSTHiddenStateIndexSet* _hiddenColumns;
	double _defaultRowHeight;
	double _defaultColumnWidth;
	NSString* _tableName;
	double _tableNameHeight;
	unsigned long long _presetIDForUpgrade;
	TSTTableStylePreset* _tableStylePreset;
	TSTTableStyle* _tableStyle;
	TSTCellStyle* _bodyCellStyle;
	TSTCellStyle* _headerRowCellStyle;
	TSTCellStyle* _headerColumnCellStyle;
	TSTCellStyle* _footerRowCellStyle;
	TSWPParagraphStyle* _bodyTextStyle;
	TSWPParagraphStyle* _headerRowTextStyle;
	TSWPParagraphStyle* _headerColumnTextStyle;
	TSWPParagraphStyle* _footerRowTextStyle;
	TSWPParagraphStyle* _tableNameStyle;
	TSWPShapeStyle* _tableNameShapeStyle;
	TSTCell* _defaultBodyCell;
	TSTCell* _defaultHeaderRowCell;
	TSTCell* _defaultHeaderColumnCell;
	TSTCell* _defaultFooterRowCell;
	TSCEOwnerFormulaMap* _formulasForUndo;
	TSTImportWarningSetByCoordinateMap* _warningSetsForUndo;
	TSTCellDictionary* _cellsPendingWrite;
	TSCECellCoordinateVector* _cellsToInvalidateAfterRecalc;
	TSCECellCoordinateVector* _cellsToInvalidateNonoverflowingAfterRecalc;
	TSTConditionalStyleFormulaOwner* _conditionalStyleFormulaOwner;
	TSTMergeOwner* _mergeOwner;
	TSTTableFilterSet* _filterSet;
	TSTHiddenStateFormulaOwner* _hiddenStateFormulaOwnerForRows;
	TSTHiddenStateFormulaOwner* _hiddenStateFormulaOwnerForColumns;
	TSTTableSortOrder* _sortOrder;
	TSTSortRuleReferenceTracker* _sortRuleReferenceTracker;
	TSTColumnRowUIDMap* _columnRowUIDMap;
	TSTStrokeSidecar* _strokeSidecar;
	TSWPStorage* _deprecatedProvider;
	NSMapTable* _commentHostingMap;
	TSTStructuredTextImportRecord* _textImportRecord;
	UUIDData<TSP::UUIDData> _tableUID;
	UUIDData<TSP::UUIDData> _fromTableUID;

}

@property (nonatomic,retain,readonly) TSTTableDataStore * dataStore;                                               //@synthesize dataStore=_dataStore - In the implementation block
@property (assign,nonatomic) unsigned long long presetIDForUpgrade;                                                //@synthesize presetIDForUpgrade=_presetIDForUpgrade - In the implementation block
@property (nonatomic,retain) TSTCell * defaultBodyCell;                                                            //@synthesize defaultBodyCell=_defaultBodyCell - In the implementation block
@property (nonatomic,retain) TSTCell * defaultHeaderRowCell;                                                       //@synthesize defaultHeaderRowCell=_defaultHeaderRowCell - In the implementation block
@property (nonatomic,retain) TSTCell * defaultHeaderColumnCell;                                                    //@synthesize defaultHeaderColumnCell=_defaultHeaderColumnCell - In the implementation block
@property (nonatomic,retain) TSTCell * defaultFooterRowCell;                                                       //@synthesize defaultFooterRowCell=_defaultFooterRowCell - In the implementation block
@property (nonatomic,retain) TSTConditionalStyleFormulaOwner * conditionalStyleFormulaOwner;                       //@synthesize conditionalStyleFormulaOwner=_conditionalStyleFormulaOwner - In the implementation block
@property (nonatomic,retain) TSTHiddenStateIndexSet * hiddenRows;                                                  //@synthesize hiddenRows=_hiddenRows - In the implementation block
@property (nonatomic,retain) TSTHiddenStateIndexSet * userHiddenRows;                                              //@synthesize userHiddenRows=_userHiddenRows - In the implementation block
@property (nonatomic,retain) TSTHiddenStateIndexSet * hiddenColumns;                                               //@synthesize hiddenColumns=_hiddenColumns - In the implementation block
@property (assign,nonatomic) unsigned short numberOfFilteredRows;                                                  //@synthesize numberOfFilteredRows=_numberOfFilteredRows - In the implementation block
@property (nonatomic,retain) TSWPStorage * deprecatedProvider;                                                     //@synthesize deprecatedProvider=_deprecatedProvider - In the implementation block
@property (nonatomic,retain,readonly) NSMapTable * commentHostingMap;                                              //@synthesize commentHostingMap=_commentHostingMap - In the implementation block
@property (nonatomic,retain) TSTColumnRowUIDMap * columnRowUIDMap;                                                 //@synthesize columnRowUIDMap=_columnRowUIDMap - In the implementation block
@property (assign,nonatomic) TSCECalculationEngine * calcEngine;                                                   //@synthesize calcEngine=_calcEngine - In the implementation block
@property (assign,nonatomic) BOOL wasCut;                                                                          //@synthesize wasCut=_wasCut - In the implementation block
@property (assign,nonatomic) UUIDData<TSP::UUIDData> tableUID;                                                     //@synthesize tableUID=_tableUID - In the implementation block
@property (assign,nonatomic) UUIDData<TSP::UUIDData> fromTableUID;                                                 //@synthesize fromTableUID=_fromTableUID - In the implementation block
@property (nonatomic,readonly) TSCEOwnerUidMapper * ownerUIDMapper; 
@property (nonatomic,readonly) TSCEOwnerUidMapper * identityOwnerUIDMapper; 
@property (nonatomic,retain,readonly) NSUUID * nsTableUID; 
@property (nonatomic,retain) NSString * tableName;                                                                 //@synthesize tableName=_tableName - In the implementation block
@property (assign,nonatomic) BOOL tableNameEnabled;                                                                //@synthesize tableNameEnabled=_tableNameEnabled - In the implementation block
@property (assign,nonatomic) double tableNameHeight;                                                               //@synthesize tableNameHeight=_tableNameHeight - In the implementation block
@property (assign,nonatomic) BOOL tableNameBorderEnabled;                                                          //@synthesize tableNameBorderEnabled=_tableNameBorderEnabled - In the implementation block
@property (nonatomic,readonly) TSDStroke * tableNameBorderStroke; 
@property (assign,nonatomic) BOOL repeatingHeaderRowsEnabled;                                                      //@synthesize repeatingHeaderRowsEnabled=_repeatingHeaderRowsEnabled - In the implementation block
@property (assign,nonatomic) BOOL repeatingHeaderColumnsEnabled;                                                   //@synthesize repeatingHeaderColumnsEnabled=_repeatingHeaderColumnsEnabled - In the implementation block
@property (nonatomic,readonly) int tableWritingDirection; 
@property (nonatomic,readonly) BOOL hasTableBorder; 
@property (nonatomic,readonly) BOOL hasAlternatingRows; 
@property (assign,nonatomic) unsigned short numberOfRows;                                                          //@synthesize numberOfRows=_numberOfRows - In the implementation block
@property (assign,nonatomic) unsigned short numberOfColumns;                                                       //@synthesize numberOfColumns=_numberOfColumns - In the implementation block
@property (assign,nonatomic) unsigned short numberOfHeaderRows;                                                    //@synthesize numberOfHeaderRows=_numberOfHeaderRows - In the implementation block
@property (assign,nonatomic) unsigned short numberOfFooterRows;                                                    //@synthesize numberOfFooterRows=_numberOfFooterRows - In the implementation block
@property (assign,nonatomic) unsigned short numberOfHeaderColumns;                                                 //@synthesize numberOfHeaderColumns=_numberOfHeaderColumns - In the implementation block
@property (nonatomic,readonly) unsigned short numberOfHiddenRows;                                                  //@synthesize numberOfHiddenRows=_numberOfHiddenRows - In the implementation block
@property (nonatomic,readonly) unsigned short numberOfHiddenColumns;                                               //@synthesize numberOfHiddenColumns=_numberOfHiddenColumns - In the implementation block
@property (nonatomic,readonly) unsigned short numberOfUserHiddenRows;                                              //@synthesize numberOfUserHiddenRows=_numberOfUserHiddenRows - In the implementation block
@property (nonatomic,readonly) unsigned short numberOfUserHiddenColumns;                                           //@synthesize numberOfUserHiddenColumns=_numberOfUserHiddenColumns - In the implementation block
@property (assign,nonatomic) BOOL headerRowsFrozen;                                                                //@synthesize headerRowsFrozen=_headerRowsFrozen - In the implementation block
@property (assign,nonatomic) BOOL headerColumnsFrozen;                                                             //@synthesize headerColumnsFrozen=_headerColumnsFrozen - In the implementation block
@property (assign,nonatomic) BOOL styleApplyClearsAll;                                                             //@synthesize styleApplyClearsAll=_styleApplyClearsAll - In the implementation block
@property (nonatomic,retain) TSTTableStylePreset * tableStylePreset;                                               //@synthesize tableStylePreset=_tableStylePreset - In the implementation block
@property (nonatomic,readonly) TSTHiddenStateFormulaOwner * hiddenStateFormulaOwnerForRows;                        //@synthesize hiddenStateFormulaOwnerForRows=_hiddenStateFormulaOwnerForRows - In the implementation block
@property (nonatomic,readonly) TSTHiddenStateFormulaOwner * hiddenStateFormulaOwnerForColumns;                     //@synthesize hiddenStateFormulaOwnerForColumns=_hiddenStateFormulaOwnerForColumns - In the implementation block
@property (nonatomic,readonly) TSTSortRuleReferenceTracker * sortRuleReferenceTracker;                             //@synthesize sortRuleReferenceTracker=_sortRuleReferenceTracker - In the implementation block
@property (nonatomic,readonly) TSTMergeOwner * mergeOwner;                                                         //@synthesize mergeOwner=_mergeOwner - In the implementation block
@property (nonatomic,readonly) UUIDData<TSP::UUIDData> conditionalStyleFormulaOwnerUID; 
@property (nonatomic,copy) TSTTableFilterSet * filterSet;                                                          //@synthesize filterSet=_filterSet - In the implementation block
@property (nonatomic,readonly) TSTCellDictionary * cellsPendingWrite;                                              //@synthesize cellsPendingWrite=_cellsPendingWrite - In the implementation block
@property (nonatomic,readonly) TSCECellCoordinateVector * cellsToInvalidateAfterRecalc;                            //@synthesize cellsToInvalidateAfterRecalc=_cellsToInvalidateAfterRecalc - In the implementation block
@property (nonatomic,readonly) TSCECellCoordinateVector * cellsToInvalidateNonoverflowingAfterRecalc;              //@synthesize cellsToInvalidateNonoverflowingAfterRecalc=_cellsToInvalidateNonoverflowingAfterRecalc - In the implementation block
@property (nonatomic,retain) TSCEOwnerFormulaMap * formulasForUndo;                                                //@synthesize formulasForUndo=_formulasForUndo - In the implementation block
@property (nonatomic,retain) TSTImportWarningSetByCoordinateMap * warningSetsForUndo;                              //@synthesize warningSetsForUndo=_warningSetsForUndo - In the implementation block
@property (nonatomic,copy) TSTTableSortOrder * sortOrder;                                                          //@synthesize sortOrder=_sortOrder - In the implementation block
@property (nonatomic,retain,readonly) TSTStrokeSidecar * strokeSidecar;                                            //@synthesize strokeSidecar=_strokeSidecar - In the implementation block
@property (assign,nonatomic) BOOL presetNeedsStrongOwnership;                                                      //@synthesize presetNeedsStrongOwnership=_presetNeedsStrongOwnership - In the implementation block
@property (assign,nonatomic) BOOL wasUnarchivedFromAProvidedTable;                                                 //@synthesize wasUnarchivedFromAProvidedTable=_wasUnarchivedFromAProvidedTable - In the implementation block
@property (nonatomic,retain) TSTStructuredTextImportRecord * textImportRecord;                                     //@synthesize textImportRecord=_textImportRecord - In the implementation block
@property (assign,nonatomic) double defaultRowHeight;                                                              //@synthesize defaultRowHeight=_defaultRowHeight - In the implementation block
@property (assign,nonatomic) double defaultColumnWidth;                                                            //@synthesize defaultColumnWidth=_defaultColumnWidth - In the implementation block
@property (assign) NSArray * rowHeights; 
@property (assign) NSArray * columnWidths; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,retain) TSTTableStyle * tableStyle;                                                           //@synthesize tableStyle=_tableStyle - In the implementation block
@property (nonatomic,retain) TSTCellStyle * bodyCellStyle;                                                         //@synthesize bodyCellStyle=_bodyCellStyle - In the implementation block
@property (nonatomic,retain) TSTCellStyle * headerRowCellStyle;                                                    //@synthesize headerRowCellStyle=_headerRowCellStyle - In the implementation block
@property (nonatomic,retain) TSTCellStyle * headerColumnCellStyle;                                                 //@synthesize headerColumnCellStyle=_headerColumnCellStyle - In the implementation block
@property (nonatomic,retain) TSTCellStyle * footerRowCellStyle;                                                    //@synthesize footerRowCellStyle=_footerRowCellStyle - In the implementation block
@property (nonatomic,retain) TSWPParagraphStyle * bodyTextStyle;                                                   //@synthesize bodyTextStyle=_bodyTextStyle - In the implementation block
@property (nonatomic,retain) TSWPParagraphStyle * headerRowTextStyle;                                              //@synthesize headerRowTextStyle=_headerRowTextStyle - In the implementation block
@property (nonatomic,retain) TSWPParagraphStyle * headerColumnTextStyle;                                           //@synthesize headerColumnTextStyle=_headerColumnTextStyle - In the implementation block
@property (nonatomic,retain) TSWPParagraphStyle * footerRowTextStyle;                                              //@synthesize footerRowTextStyle=_footerRowTextStyle - In the implementation block
@property (nonatomic,retain) TSWPParagraphStyle * tableNameStyle;                                                  //@synthesize tableNameStyle=_tableNameStyle - In the implementation block
@property (nonatomic,retain) TSWPShapeStyle * tableNameShapeStyle;                                                 //@synthesize tableNameShapeStyle=_tableNameShapeStyle - In the implementation block
@property (nonatomic,readonly) TSDStroke * defaultHorizontalBorderStroke; 
@property (nonatomic,readonly) TSDStroke * defaultHorizontalBorderStrokeEvenIfNotVisible; 
@property (nonatomic,readonly) TSDStroke * defaultVerticalBorderStroke; 
@property (nonatomic,readonly) TSDStroke * bodyColumnStroke; 
@property (nonatomic,readonly) TSDStroke * bodyRowStroke; 
@property (nonatomic,readonly) TSDStroke * bodyRowStrokeEvenIfNotVisible; 
@property (nonatomic,readonly) TSDStroke * headerColumnBorderStroke; 
@property (nonatomic,readonly) TSDStroke * headerColumnBodyColumnStroke; 
@property (nonatomic,readonly) TSDStroke * headerColumnBodyRowStroke; 
@property (nonatomic,readonly) TSDStroke * headerColumnSeparatorStroke; 
@property (nonatomic,readonly) TSDStroke * headerRowBorderStroke; 
@property (nonatomic,readonly) TSDStroke * headerRowBodyColumnStroke; 
@property (nonatomic,readonly) TSDStroke * headerRowBodyRowStroke; 
@property (nonatomic,readonly) TSDStroke * headerRowSeparatorStroke; 
@property (nonatomic,readonly) TSDStroke * footerRowBorderStroke; 
@property (nonatomic,readonly) TSDStroke * footerRowBodyColumnStroke; 
@property (nonatomic,readonly) TSDStroke * footerRowBodyRowStroke; 
@property (nonatomic,readonly) TSDStroke * footerRowSeparatorStroke; 
+(BOOL)needsObjectUUID;
-(UUIDData<TSP::UUIDData>)tableUID;
-(id)mutableRowIndexesForUIDs:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 ;
-(id)mutableColumnIndexesForUIDs:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 ;
-(UUIDData<TSP::UUIDData>)conditionalStyleFormulaOwnerUID;
-(vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)rowUIDsForRowRange:(NSRange)arg1 ;
-(vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)columnUIDsForColumnRange:(NSRange)arg1 ;
-(id)UIDSetForIndexes:(id)arg1 isRows:(BOOL)arg2 ;
-(UUIDData<TSP::UUIDData>)columnUIDForColumnIndex:(unsigned char)arg1 ;
-(UUIDData<TSP::UUIDData>)rowUIDForRowIndex:(unsigned short)arg1 ;
-(unsigned short)rowIndexForRowUID:(const UUIDData<TSP::UUIDData>*)arg1 ;
-(unsigned char)columnIndexForColumnUID:(const UUIDData<TSP::UUIDData>*)arg1 ;
-(TSCECalculationEngine *)calcEngine;
-(void)setCalcEngine:(TSCECalculationEngine *)arg1 ;
-(void)setTableUID:(UUIDData<TSP::UUIDData>)arg1 ;
-(id)mutableIndexesForUIDSet:(id)arg1 isRows:(BOOL)arg2 notFoundUIDs:(id)arg3 ;
-(void)saveToArchiver:(id)arg1 ;
-(void)loadFromUnarchiver:(id)arg1 ;
-(vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)rowUIDsForRowIndexes:(id)arg1 ;
-(vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)columnUIDsForColumnIndexes:(id)arg1 ;
-(void)reassignPasteboardCustomFormatKeys;
-(void)registerAllFormulasWithCalculationEngine:(id)arg1 ;
-(void)setStylesheetForUpgradeToSingleStylesheet:(id)arg1 ;
-(int)setCellsWithCellMap:(id)arg1 calculationEngine:(id)arg2 ;
-(long long)mixingTypeWithObject:(id)arg1 context:(id)arg2 ;
-(TSUCellRect)expandCellRangeToCoverMergedCells:(TSUCellRect)arg1 ;
-(TSUCellCoord)cellIDForCellUID:(const TSTCellUID*)arg1 ;
-(TSTMergeOwner *)mergeOwner;
-(id)indexesOfVisibleRowsInCellRange:(TSUCellRect)arg1 ;
-(unsigned short)indexOfVisibleRowAfterAndIncludingRowAtIndex:(unsigned short)arg1 ;
-(unsigned short)indexOfVisibleRowBeforeAndIncludingRowAtIndex:(unsigned short)arg1 ;
-(id)indexesOfVisibleColumnsInCellRange:(TSUCellRect)arg1 ;
-(unsigned char)indexOfVisibleColumnAfterAndIncludingColumnAtIndex:(unsigned char)arg1 ;
-(unsigned char)indexOfVisibleColumnBeforeAndIncludingColumnAtIndex:(unsigned char)arg1 ;
-(BOOL)isSingleCellOrMergeRange:(TSUCellRect)arg1 ;
-(BOOL)hasMergeFragmentAtCellID:(TSUCellCoord)arg1 ;
-(TSUCellRect)mergeRangeAtCellID:(TSUCellCoord)arg1 ;
-(id)newCell;
-(int)getCell:(id)arg1 atCellID:(TSUCellCoord)arg2 ;
-(TSTTableStylePreset *)tableStylePreset;
-(void)setTableStylePreset:(TSTTableStylePreset *)arg1 ;
-(void)p_clearDefaultStyles;
-(void)setupHiddenStateIndexSets;
-(id)initWithContext:(id)arg1 rows:(unsigned short)arg2 columns:(unsigned short)arg3 styles:(id)arg4 stylePreset:(id)arg5 tableInfo:(id)arg6 ;
-(UUIDData<TSP::UUIDData>)fromTableUID;
-(double)heightOfRowAtIndex:(unsigned short)arg1 isDefault:(out BOOL*)arg2 ;
-(unsigned char)hidingActionForRowAtIndex:(unsigned short)arg1 ;
-(BOOL)hideRowAtIndex:(unsigned short)arg1 forAction:(unsigned char)arg2 ;
-(double)widthOfColumnAtIndex:(unsigned char)arg1 isDefault:(out BOOL*)arg2 ;
-(unsigned char)hidingActionForColumnAtIndex:(unsigned char)arg1 ;
-(BOOL)hideColumnAtIndex:(unsigned char)arg1 forAction:(unsigned char)arg2 ;
-(TSTTableFilterSet *)filterSet;
-(void)p_iterateDataStoreCellsInRegion:(id)arg1 searchFlags:(unsigned long long)arg2 usingBlock:(/*^block*/id)arg3 ;
-(TSTStrokeSidecar *)strokeSidecar;
-(void)setStroke:(id)arg1 forTopOfRow:(unsigned short)arg2 order:(int)arg3 columnRange:(TSTSimpleRange)arg4 ;
-(void)setStroke:(id)arg1 forBottomOfRow:(unsigned short)arg2 order:(int)arg3 columnRange:(TSTSimpleRange)arg4 ;
-(void)setStroke:(id)arg1 forLeftOfColumn:(unsigned char)arg2 order:(int)arg3 rowRange:(TSTSimpleRange)arg4 ;
-(void)setStroke:(id)arg1 forRightOfColumn:(unsigned char)arg2 order:(int)arg3 rowRange:(TSTSimpleRange)arg4 ;
-(void)updateTableRowColumnStylesWithBlock:(/*^block*/id)arg1 ;
-(TSTConditionalStyleFormulaOwner *)conditionalStyleFormulaOwner;
-(BOOL)p_auditTilesForRowOverlapAndExtensionPastTableBoundsWithVersion:(unsigned long long)arg1 ;
-(BOOL)p_auditTableHealthUpgradingFromVersion:(unsigned long long)arg1 ;
-(void)p_rebuildTheTable:(id)arg1 ;
-(void)p_upgradeDefaultCellStylesForStrokeSidecar;
-(id)indexesOfUserHiddenRowsInCellRange:(TSUCellRect)arg1 ;
-(BOOL)showRowAtIndex:(unsigned short)arg1 forAction:(unsigned char)arg2 ;
-(id)indexesOfHiddenColumnsInCellRange:(TSUCellRect)arg1 ;
-(BOOL)showColumnAtIndex:(unsigned char)arg1 forAction:(unsigned char)arg2 ;
-(id)cellStyleForCellWithEmptyStyleAtCellID:(TSUCellCoord)arg1 isDefault:(out BOOL*)arg2 ;
-(id)defaultCellStyleForCellID:(TSUCellCoord)arg1 ;
-(id)textStyleForCellWithEmptyStyleAtCellID:(TSUCellCoord)arg1 isDefault:(out BOOL*)arg2 ;
-(id)defaultTextStyleForCellID:(TSUCellCoord)arg1 ;
-(void)setPresetNeedsStrongOwnership:(BOOL)arg1 ;
-(BOOL)presetNeedsStrongOwnership;
-(TSCEOwnerUidMapper *)ownerUIDMapper;
-(void)filterSetUpdated;
-(void)setFilterSetType:(int)arg1 ;
-(void)dirtyFilterState;
-(TSUCellRect)actualHeaderColumnRange;
-(TSUCellRect)topCornerRange;
-(TSUCellRect)bottomCornerRange;
-(id)cellBorderAtCellID:(TSUCellCoord)arg1 ;
-(int)getCell:(id)arg1 atCellID:(TSUCellCoord)arg2 suppressFormula:(BOOL)arg3 suppressCellBorder:(BOOL)arg4 ;
-(BOOL)cellExistsAtCellID:(TSUCellCoord)arg1 ;
-(BOOL)hasFormulaAtCellID:(TSUCellCoord)arg1 ;
-(int)setCell:(id)arg1 atCellID:(TSUCellCoord)arg2 ignoreFormula:(BOOL)arg3 clearImportWarnings:(BOOL)arg4 calculationEngine:(id)arg5 ;
-(int)p_preflightSetCell:(id)arg1 atCellID:(TSUCellCoord)arg2 ;
-(int)setCellsWithCellMap:(id)arg1 ignoreFormulas:(BOOL)arg2 skipDirtyingNonFormulaCells:(BOOL)arg3 calculationEngine:(id)arg4 ;
-(int)p_preflightApplyCellMap:(id)arg1 ;
-(BOOL)hasCommentAtCellID:(TSUCellCoord)arg1 ;
-(NSMapTable *)commentHostingMap;
-(id)commentHostingAtCellID:(TSUCellCoord)arg1 forCommentStorage:(id)arg2 table:(id)arg3 ;
-(void)postCommentNotificationForStorage:(id)arg1 atCellID:(TSUCellCoord)arg2 notificationKey:(id)arg3 table:(id)arg4 ;
-(void)clearCommentHostingMapForCommentStorage:(id)arg1 ;
-(id)cellStyleOfRowAtIndex:(unsigned short)arg1 isDefault:(out BOOL*)arg2 ;
-(id)cellStyleOfColumnAtIndex:(unsigned char)arg1 isDefault:(out BOOL*)arg2 ;
-(id)textStyleOfRowAtIndex:(unsigned short)arg1 isDefault:(out BOOL*)arg2 ;
-(id)textStyleOfColumnAtIndex:(unsigned char)arg1 isDefault:(out BOOL*)arg2 ;
-(int)getValue:(out TSCEValue*)arg1 atCellID:(TSUCellCoord)arg2 fetchRichTextAttributesIfPlainText:(BOOL)arg3 ;
-(unsigned char)indexOfVisibleColumnBeforeColumnAtIndex:(unsigned char)arg1 ;
-(unsigned char)indexOfVisibleColumnAfterColumnAtIndex:(unsigned char)arg1 ;
-(unsigned short)indexOfVisibleRowBeforeRowAtIndex:(unsigned short)arg1 ;
-(unsigned short)indexOfVisibleRowAfterRowAtIndex:(unsigned short)arg1 ;
-(double)computeDefaultFontHeightForTableArea:(unsigned long long)arg1 ;
-(int)insertRowsInRange:(NSRange)arg1 uids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg2 metadata:(id)arg3 unsetFilterHidingAction:(BOOL)arg4 ;
-(TSTColumnRowUIDMap *)columnRowUIDMap;
-(BOOL)hasHiddenRowAtIndex:(unsigned short)arg1 forAction:(unsigned char)arg2 ;
-(BOOL)hasHiddenRowAtIndex:(unsigned short)arg1 ;
-(BOOL)hasHiddenColumnAtIndex:(unsigned char)arg1 ;
-(void)removeRowsAtIndex:(unsigned short)arg1 count:(unsigned short)arg2 ;
-(void)removeColumnsAtIndex:(unsigned char)arg1 count:(unsigned short)arg2 ;
-(void)swapRowAtIndex:(unsigned short)arg1 withRowAtIndex:(unsigned short)arg2 ;
-(unsigned short)numberOfHiddenRowsInCellRange:(TSUCellRect)arg1 ;
-(unsigned short)numberOfHiddenColumnsInCellRange:(TSUCellRect)arg1 ;
-(id)textStyleAtCellID:(TSUCellCoord)arg1 isDefault:(out BOOL*)arg2 ;
-(BOOL)hasMergeRangesIntersectingCellRegion:(id)arg1 ;
-(id)mergesIntersectingRange:(TSUCellRect)arg1 ;
-(id)mergesIntersectingCellRegion:(id)arg1 ;
-(id)expandCellRegionToCoverMergedCells:(id)arg1 ;
-(id)strokeLayerForLeftSideOfColumn:(unsigned char)arg1 ;
-(id)strokeLayerForRightSideOfColumn:(unsigned char)arg1 ;
-(id)strokeLayerForTopOfRow:(unsigned short)arg1 ;
-(id)strokeLayerForBottomOfRow:(unsigned short)arg1 ;
-(BOOL)textStyle:(id)arg1 isEqualToDefaultTextStyleForCellID:(TSUCellCoord)arg2 ;
-(TSTSortRuleReferenceTracker *)sortRuleReferenceTracker;
-(TSTHiddenStateFormulaOwner *)hiddenStateFormulaOwnerForRows;
-(TSTHiddenStateFormulaOwner *)hiddenStateFormulaOwnerForColumns;
-(int)updateCalculationEngineForFormula:(TSCEFormula*)arg1 inCellID:(TSUCellCoord)arg2 ;
-(void)registerAllFormulasWithCalculationEngine:(id)arg1 wasCrossDocumentPaste:(BOOL)arg2 ;
-(id)rowIndexesForUIDs:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 ;
-(vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)rowUIDs;
-(id)columnIndexesForUIDs:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 ;
-(vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)columnUIDs;
-(id)mutableIndexesForUIDSet:(id)arg1 isRows:(BOOL)arg2 ;
-(id)initWithContext:(id)arg1 fromSourceModel:(id)arg2 region:(id)arg3 tableInfo:(id)arg4 waitForCalcEngine:(BOOL)arg5 ;
-(BOOL)anyHiddenRowsInCellRange:(TSUCellRect)arg1 ;
-(BOOL)anyHiddenColumnsInCellRange:(TSUCellRect)arg1 ;
-(TSDStroke *)defaultHorizontalBorderStroke;
-(TSDStroke *)defaultHorizontalBorderStrokeEvenIfNotVisible;
-(TSDStroke *)defaultVerticalBorderStroke;
-(TSDStroke *)bodyRowStrokeEvenIfNotVisible;
-(void)upgradeDuringDocumentUpgradeIfNeeded:(unsigned long long)arg1 tableInfo:(id)arg2 ;
-(void)setColumnRowUIDMap:(TSTColumnRowUIDMap *)arg1 ;
-(TSTStructuredTextImportRecord *)textImportRecord;
-(void)setTextImportRecord:(TSTStructuredTextImportRecord *)arg1 ;
-(TSCEOwnerUidMapper *)identityOwnerUIDMapper;
-(int)tableWritingDirection;
-(void)resetSortRuleReferenceTrackerForInsert;
-(void)setFilterSet:(TSTTableFilterSet *)arg1 ;
-(id)duplicateFilterSet;
-(id)duplicateFilterSetInUidFormWithTable:(id)arg1 ;
-(BOOL)needsFilterFormulaRewriteForImport;
-(void)setNeedsFilterFormulaRewriteForImport:(BOOL)arg1 ;
-(void)mutateFormulaFiltersWithTable:(id)arg1 usingBlock:(/*^block*/id)arg2 ;
-(void)enableFilterSet:(BOOL)arg1 ;
-(BOOL)hasActiveFilters;
-(BOOL)hasFilterRulesWithTable:(id)arg1 inColumns:(id)arg2 ;
-(NSUUID *)nsTableUID;
-(void)setFromTableUID:(UUIDData<TSP::UUIDData>)arg1 ;
-(void)clearFromTableUID;
-(BOOL)wasCut;
-(void)setWasCut:(BOOL)arg1 ;
-(id)tableAreasForCellRange:(TSUCellRect)arg1 ;
-(int)getDefaultCell:(id)arg1 forTableArea:(unsigned long long)arg2 ;
-(int)getDefaultCell:(out id)arg1 forCellID:(TSUCellCoord)arg2 ;
-(unsigned long long)tableAreaForRow:(unsigned short)arg1 ;
-(unsigned long long)tableAreaForColumn:(unsigned char)arg1 ;
-(int)getCell:(id)arg1 atCellID:(TSUCellCoord)arg2 suppressCellBorder:(BOOL)arg3 ;
-(int)setCell:(id)arg1 atCellID:(TSUCellCoord)arg2 clearWarnings:(BOOL)arg3 ;
-(TSCEFormula*)formulaAtCellID:(TSUCellCoord)arg1 ;
-(id)formatAtCellID:(TSUCellCoord)arg1 formatIsImplicitOut:(BOOL*)arg2 ;
-(int)cellValueTypeAtCellID:(TSUCellCoord)arg1 ;
-(unsigned long long)numberOfComments;
-(BOOL)hasCommentStorageAtCellID:(TSUCellCoord)arg1 ;
-(id)commentHostingAtCellID:(TSUCellCoord)arg1 table:(id)arg2 ;
-(int)setCommentStorage:(id)arg1 atCellID:(TSUCellCoord)arg2 table:(id)arg3 ;
-(int)removeCommentStorageAtCellID:(TSUCellCoord)arg1 table:(id)arg2 ;
-(int)setCellStyle:(id)arg1 ofRowAtIndex:(unsigned short)arg2 ;
-(int)setTextStyle:(id)arg1 ofRowAtIndex:(unsigned short)arg2 ;
-(int)setCellStyle:(id)arg1 ofColumnAtIndex:(unsigned char)arg2 ;
-(int)setTextStyle:(id)arg1 ofColumnAtIndex:(unsigned char)arg2 ;
-(BOOL)cellStyle:(id)arg1 isEqualToDefaultCellStyleForCellID:(TSUCellCoord)arg2 ;
-(int)setCellStyle:(id)arg1 atCellID:(TSUCellCoord)arg2 ;
-(int)setTextStyle:(id)arg1 atCellID:(TSUCellCoord)arg2 ;
-(id)cellStyleAtCellID:(TSUCellCoord)arg1 isDefault:(out BOOL*)arg2 ;
-(id)conditionalStyleSetAtCellID:(TSUCellCoord)arg1 ;
-(id)columnNameForCellID:(TSUCellCoord)arg1 cellRangeContainingName:(TSUCellRect*)arg2 restrictToBodyRange:(BOOL)arg3 ;
-(id)rowNameForCellID:(TSUCellCoord)arg1 cellRangeContainingName:(TSUCellRect*)arg2 restrictToBodyRange:(BOOL)arg3 ;
-(unsigned)numberOfPopulatedCells;
-(TSUCellCoord)cellIDLeftOfCellID:(TSUCellCoord)arg1 ;
-(TSUCellCoord)cellIDRightOfCellID:(TSUCellCoord)arg1 ;
-(TSUCellCoord)cellIDAboveCellID:(TSUCellCoord)arg1 ;
-(TSUCellCoord)cellIDBelowCellID:(TSUCellCoord)arg1 ;
-(void)computeDefaultRowHeight;
-(void)insertRowsAtIndex:(unsigned short)arg1 count:(unsigned short)arg2 addBefore:(BOOL)arg3 ;
-(int)insertRowsInRange:(NSRange)arg1 uids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg2 metadata:(id)arg3 ;
-(int)insertColumnsInRange:(NSRange)arg1 uids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg2 metadata:(id)arg3 ;
-(void)insertColumnsAtIndex:(unsigned char)arg1 count:(unsigned short)arg2 addBefore:(BOOL)arg3 ;
-(void)removeColumnsAtIndexes:(id)arg1 ;
-(void)moveRowRange:(NSRange)arg1 toRowIndex:(unsigned short)arg2 ;
-(void)moveColumnRange:(NSRange)arg1 toColumnIndex:(unsigned char)arg2 ;
-(unsigned short)numberOfUserHiddenRowsInCellRange:(TSUCellRect)arg1 ;
-(BOOL)hasHiddenColumnAtIndex:(unsigned char)arg1 forAction:(unsigned char)arg2 ;
-(id)indexesOfVisibleColumnsInColumnRange:(id)arg1 ;
-(id)indexesOfHiddenRowsInCellRange:(TSUCellRect)arg1 ;
-(id)indexesOfUserVisibleRowsInCellRange:(TSUCellRect)arg1 ;
-(id)indexesOfVisibleRowsInRowRange:(id)arg1 ;
-(BOOL)anyHiddenRowsInCellRange:(TSUCellRect)arg1 forAction:(unsigned char)arg2 ;
-(BOOL)isCellRangeHidden:(TSUCellRect)arg1 ;
-(id)stringAtCellID:(TSUCellCoord)arg1 optionalCell:(id)arg2 ;
-(id)fontColorAtCellID:(TSUCellCoord)arg1 optionalCell:(id)arg2 ;
-(BOOL)mergeCellRange:(TSUCellRect)arg1 ;
-(BOOL)unmergeCellRange:(TSUCellRect)arg1 ;
-(BOOL)mergeRangesPartiallyIntersectingCellRange:(TSUCellRect)arg1 ;
-(id)regionForValueOrCommentCellsInRange:(TSUCellRect)arg1 ;
-(id)mergeRangesForCellRange:(TSUCellRect)arg1 ;
-(id)allMergeRanges;
-(id)grabAllMergeRanges;
-(id)mergeRangesForCellRegion:(id)arg1 ;
-(id)fillForRow:(unsigned short)arg1 ;
-(id)fillForColumn:(unsigned char)arg1 ;
-(int)maxStrokeOrder;
-(void)setStroke:(id)arg1 forTopOfRow:(unsigned short)arg2 order:(int)arg3 ;
-(void)setStroke:(id)arg1 forBottomOfRow:(unsigned short)arg2 order:(int)arg3 ;
-(void)setStroke:(id)arg1 forLeftOfColumn:(unsigned char)arg2 order:(int)arg3 ;
-(void)setStroke:(id)arg1 forRightOfColumn:(unsigned char)arg2 order:(int)arg3 ;
-(void)getValue:(out TSCEValue*)arg1 fromIteratorData:(id)arg2 fetchRichTextAttributesIfPlainText:(BOOL)arg3 ;
-(void)setFormulaOwnerUIDsWithMap:(id)arg1 shouldStealReferences:(BOOL)arg2 ;
-(void)remapTableUIDsInFormulasWithMap:(const UUIDMap<TSP::UUIDMap>*)arg1 calcEngine:(id)arg2 bakeForBadRefs:(BOOL)arg3 ;
-(void)addPasteboardCustomFormatsToDocumentAndUpdateCells;
-(void)prepareForPasteWithCalculationEngine:(id)arg1 sourceOffset:(SCD_Struct_TS87)arg2 ;
-(TSCERangeRef)referenceToHiddenStateFromRow:(unsigned short)arg1 toRow:(unsigned short)arg2 ;
-(TSCERangeRef)referenceToHiddenStateFromColumn:(unsigned char)arg1 toColumn:(unsigned char)arg2 ;
-(BOOL)hasFormulas;
-(BOOL)cellWasModifiedInCurrentRecalcCycle:(TSUCellCoord)arg1 ;
-(void)assertCollaborationConvergence;
-(long long)importWarningSetDataListCount;
-(BOOL)formatDataListContainsControlFormats;
-(unsigned long long)conditionalStyleRefCountForKey:(unsigned)arg1 ;
-(id)populatedMultipleChoiceListFormat:(id)arg1 ;
-(TSUCellCoord)cellIDForCellContainingRichTextStorage:(id)arg1 ;
-(TSTCellUID)cellUIDforCellID:(const TSUCellCoord*)arg1 ;
-(id)prunedCellUIDListFromCellUIDList:(id)arg1 allowMergeFragment:(BOOL)arg2 addingPrunedIndicesToIndexSet:(id)arg3 ;
-(BOOL)writeCellIDsInCellUIDList:(id)arg1 toVector:(vector<TSUCellCoord, std::__1::allocator<TSUCellCoord> >*)arg2 ;
-(vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)prunedRowUIDsFromRowUIDs:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 ;
-(vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)prunedColumnUIDsFromColumnUIDs:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg1 ;
-(TSUCellRect)cellRangeForUIDRange:(const TSTCellUIDRange*)arg1 ;
-(TSTCellUIDRange*)cellUIDRangeForCellRange:(TSUCellRect)arg1 ;
-(id)cellRegionForUIDRange:(const TSTCellUIDRange*)arg1 ;
-(Class)dataStoreIteratorClass;
-(TSTHiddenStateIndexSet *)hiddenRows;
-(void)setHiddenRows:(TSTHiddenStateIndexSet *)arg1 ;
-(TSTHiddenStateIndexSet *)userHiddenRows;
-(void)setUserHiddenRows:(TSTHiddenStateIndexSet *)arg1 ;
-(TSTHiddenStateIndexSet *)hiddenColumns;
-(void)setHiddenColumns:(TSTHiddenStateIndexSet *)arg1 ;
-(unsigned long long)presetIDForUpgrade;
-(void)setPresetIDForUpgrade:(unsigned long long)arg1 ;
-(void)setDefaultBodyCell:(TSTCell *)arg1 ;
-(void)setDefaultHeaderRowCell:(TSTCell *)arg1 ;
-(void)setDefaultHeaderColumnCell:(TSTCell *)arg1 ;
-(void)setDefaultFooterRowCell:(TSTCell *)arg1 ;
-(TSCEOwnerFormulaMap *)formulasForUndo;
-(void)setFormulasForUndo:(TSCEOwnerFormulaMap *)arg1 ;
-(TSTImportWarningSetByCoordinateMap *)warningSetsForUndo;
-(void)setWarningSetsForUndo:(TSTImportWarningSetByCoordinateMap *)arg1 ;
-(TSCECellCoordinateVector *)cellsToInvalidateAfterRecalc;
-(TSCECellCoordinateVector *)cellsToInvalidateNonoverflowingAfterRecalc;
-(void)setConditionalStyleFormulaOwner:(TSTConditionalStyleFormulaOwner *)arg1 ;
-(unsigned short)numberOfFilteredRows;
-(void)setNumberOfFilteredRows:(unsigned short)arg1 ;
-(TSWPStorage *)deprecatedProvider;
-(void)setDeprecatedProvider:(TSWPStorage *)arg1 ;
-(TSTTableSortOrder *)sortOrder;
-(void)setSortOrder:(TSTTableSortOrder *)arg1 ;
-(id)init;
-(void)dealloc;
-(NSString *)description;
-(unsigned short)numberOfColumns;
-(unsigned short)numberOfRows;
-(TSUCellRect)range;
-(void)setNumberOfRows:(unsigned short)arg1 ;
-(void)validate;
-(NSArray *)columnWidths;
-(void)setColumnWidths:(NSArray *)arg1 ;
-(void)removeRowsAtIndexes:(id)arg1 ;
-(void)setHeight:(double)arg1 ofRowAtIndex:(unsigned short)arg2 ;
-(void)setWidth:(double)arg1 ofColumnAtIndex:(unsigned char)arg2 ;
-(Class)layoutClass;
-(Class)repClass;
-(Class)editorClass;
-(void)adoptStylesheet:(id)arg1 withMapper:(id)arg2 ;
-(id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2 ;
-(int)setCell:(id)arg1 atCellID:(TSUCellCoord)arg2 ;
-(id)cellAtCellID:(TSUCellCoord)arg1 ;
-(NSArray *)rowHeights;
-(unsigned short)numberOfHeaderRows;
-(unsigned short)numberOfHeaderColumns;
-(NSString *)tableName;
-(TSDStroke *)tableNameBorderStroke;
-(unsigned long long)tableAreaForCellID:(TSUCellCoord)arg1 ;
-(TSUCellRect)bodyRowRange;
-(id)allRichTextPayloadStorages;
-(void)setTableStyle:(TSTTableStyle *)arg1 ;
-(void)setTableNameStyle:(TSWPParagraphStyle *)arg1 ;
-(void)setTableNameShapeStyle:(TSWPShapeStyle *)arg1 ;
-(TSTTableStyle *)tableStyle;
-(TSTCellStyle *)bodyCellStyle;
-(TSTCellStyle *)headerColumnCellStyle;
-(TSTCellStyle *)footerRowCellStyle;
-(TSTCellStyle *)headerRowCellStyle;
-(TSWPParagraphStyle *)bodyTextStyle;
-(TSWPParagraphStyle *)headerColumnTextStyle;
-(TSWPParagraphStyle *)footerRowTextStyle;
-(TSWPParagraphStyle *)headerRowTextStyle;
-(TSWPParagraphStyle *)tableNameStyle;
-(TSWPShapeStyle *)tableNameShapeStyle;
-(void)setBodyCellStyle:(TSTCellStyle *)arg1 ;
-(void)setHeaderColumnCellStyle:(TSTCellStyle *)arg1 ;
-(void)setFooterRowCellStyle:(TSTCellStyle *)arg1 ;
-(void)setHeaderRowCellStyle:(TSTCellStyle *)arg1 ;
-(void)setBodyTextStyle:(TSWPParagraphStyle *)arg1 ;
-(void)setHeaderColumnTextStyle:(TSWPParagraphStyle *)arg1 ;
-(void)setFooterRowTextStyle:(TSWPParagraphStyle *)arg1 ;
-(void)setHeaderRowTextStyle:(TSWPParagraphStyle *)arg1 ;
-(id)unnamedTableString;
-(void)resetStyles:(id)arg1 ;
-(void)setupDefaultCells;
-(BOOL)repeatingHeaderRowsEnabled;
-(BOOL)repeatingHeaderColumnsEnabled;
-(BOOL)headerRowsFrozen;
-(BOOL)headerColumnsFrozen;
-(unsigned short)numberOfFooterRows;
-(BOOL)tableNameEnabled;
-(void)setTableName:(NSString *)arg1 ;
-(BOOL)tableNameBorderEnabled;
-(void)setTableNameBorderEnabled:(BOOL)arg1 ;
-(double)tableNameHeight;
-(void)setTableNameHeight:(double)arg1 ;
-(BOOL)styleApplyClearsAll;
-(void)setStyleApplyClearsAll:(BOOL)arg1 ;
-(TSTTableDataStore *)dataStore;
-(void)setStorageParentToInfo:(id)arg1 ;
-(id)defaultCellForTableArea:(unsigned long long)arg1 ;
-(id)defaultCellStyleForTableArea:(unsigned long long)arg1 ;
-(id)defaultTextStyleForTableArea:(unsigned long long)arg1 ;
-(void)p_clearDataListEntriesInRange:(TSUCellRect)arg1 ignoreSizeChecks:(BOOL)arg2 ;
-(TSUCellRect)headerRowRange;
-(TSUCellRect)footerRowRange;
-(TSUCellRect)headerColumnRange;
-(TSUCellRect)bodyColumnRange;
-(void)mapTableStylesToStylesheet:(id)arg1 withMapper:(id)arg2 ;
-(void)setTableNameEnabled:(BOOL)arg1 ;
-(void)setRepeatingHeaderRowsEnabled:(BOOL)arg1 ;
-(void)setRepeatingHeaderColumnsEnabled:(BOOL)arg1 ;
-(void)setNumberOfColumns:(unsigned short)arg1 ;
-(void)setNumberOfHeaderRows:(unsigned short)arg1 ;
-(void)setNumberOfFooterRows:(unsigned short)arg1 ;
-(void)setNumberOfHeaderColumns:(unsigned short)arg1 ;
-(void)setHeaderRowsFrozen:(BOOL)arg1 ;
-(void)setHeaderColumnsFrozen:(BOOL)arg1 ;
-(BOOL)hasTableBorder;
-(BOOL)hasAlternatingRows;
-(TSTCell *)defaultBodyCell;
-(TSTCell *)defaultFooterRowCell;
-(TSTCell *)defaultHeaderRowCell;
-(TSTCell *)defaultHeaderColumnCell;
-(TSUCellRect)cellRangeForTableArea:(unsigned long long)arg1 ;
-(void)setHeight:(double)arg1 ofRow:(unsigned short)arg2 ;
-(void)setWidth:(double)arg1 ofColumn:(unsigned char)arg2 ;
-(void)setRowHeights:(NSArray *)arg1 ;
-(TSUCellRect)bodyRange;
-(BOOL)hasMergeRanges;
-(id)mergedGridIndicesForDirection:(long long)arg1 ;
-(TSDStroke *)bodyColumnStroke;
-(TSDStroke *)bodyRowStroke;
-(TSDStroke *)headerColumnBorderStroke;
-(TSDStroke *)headerColumnBodyColumnStroke;
-(TSDStroke *)headerColumnBodyRowStroke;
-(TSDStroke *)headerColumnSeparatorStroke;
-(TSDStroke *)headerRowBorderStroke;
-(TSDStroke *)headerRowBodyColumnStroke;
-(TSDStroke *)headerRowBodyRowStroke;
-(TSDStroke *)headerRowSeparatorStroke;
-(TSDStroke *)footerRowBorderStroke;
-(TSDStroke *)footerRowBodyColumnStroke;
-(TSDStroke *)footerRowBodyRowStroke;
-(TSDStroke *)footerRowSeparatorStroke;
-(void)upgradeFromPreUFF;
-(unsigned short)numberOfHiddenRows;
-(unsigned short)numberOfHiddenColumns;
-(unsigned short)numberOfUserHiddenRows;
-(unsigned short)numberOfUserHiddenColumns;
-(BOOL)wasUnarchivedFromAProvidedTable;
-(void)setWasUnarchivedFromAProvidedTable:(BOOL)arg1 ;
-(TSTCellDictionary *)cellsPendingWrite;
-(double)defaultColumnWidth;
-(double)defaultRowHeight;
-(void)setDefaultColumnWidth:(double)arg1 ;
-(void)setDefaultRowHeight:(double)arg1 ;
@end

