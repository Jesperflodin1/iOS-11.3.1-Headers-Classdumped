/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:30:10 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSPObject.h>
#import <iWorkImport/TSDComment.h>
#import <iWorkImport/TSPCopying.h>
#import <iWorkImport/TSKDocumentObject.h>
#import <iWorkImport/TSWPTextSpanningObject.h>
#import <iWorkImport/TSWPOverlappingField.h>

@class TSDCommentStorage, TSWPStorage, NSString, TSKAnnotationAuthor, NSDate;

@interface TSWPHighlight : TSPObject <TSDComment, TSPCopying, TSKDocumentObject, TSWPTextSpanningObject, TSWPOverlappingField> {

	TSDCommentStorage* _commentStorage;
	TSWPStorage* _parentStorage;
	NSString* _textAttributeUUIDString;

}

@property (nonatomic,copy) NSString * textAttributeUUIDString;                //@synthesize textAttributeUUIDString=_textAttributeUUIDString - In the implementation block
@property (nonatomic,retain) TSDCommentStorage * commentStorage;              //@synthesize commentStorage=_commentStorage - In the implementation block
@property (assign,nonatomic,__weak) TSWPStorage * parentStorage;              //@synthesize parentStorage=_parentStorage - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) NSString * annotationUUID; 
@property (nonatomic,readonly) int annotationType; 
@property (nonatomic,retain) TSKAnnotationAuthor * author; 
@property (nonatomic,readonly) NSDate * date; 
@property (nonatomic,readonly) int annotationDisplayStringType; 
@property (nonatomic,copy) TSDCommentStorage * storage; 
@property (nonatomic,readonly) BOOL isHighlight; 
+(id)highlightTextColorForHighlights:(id)arg1 ;
+(id)defaultHighlightWithContext:(id)arg1 includeCommentWithAuthor:(id)arg2 ;
-(void)saveToArchiver:(id)arg1 ;
-(void)loadFromUnarchiver:(id)arg1 ;
-(void)loadFromArchive:(const HighlightArchive*)arg1 unarchiver:(id)arg2 ;
-(BOOL)isInDocument;
-(void)commentWillBeAddedToDocumentRoot;
-(BOOL)isFloatingComment;
-(NSString *)annotationUUID;
-(TSDCommentStorage *)commentStorage;
-(void)setCommentStorage:(TSDCommentStorage *)arg1 ;
-(BOOL)isEquivalentToObject:(id)arg1 ;
-(void)resetTextAttributeUUIDString;
-(NSString *)textAttributeUUIDString;
-(void)i_setTextAttributeUUIDString:(id)arg1 ;
-(void)p_invalidateAnnotationResultsForDocumentRoot:(id)arg1 key:(id)arg2 ;
-(BOOL)isCommentEmpty;
-(id)initWithContext:(id)arg1 commentStorage:(id)arg2 ;
-(id)initWithContext:(id)arg1 commentStorage:(id)arg2 annotationUUID:(id)arg3 ;
-(void)setTextAttributeUUIDString:(NSString *)arg1 ;
-(TSKAnnotationAuthor *)author;
-(void)setAuthor:(TSKAnnotationAuthor *)arg1 ;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(NSString *)description;
-(NSDate *)date;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)initWithContext:(id)arg1 ;
-(TSDCommentStorage *)storage;
-(id)copyWithContext:(id)arg1 ;
-(void)setStorage:(TSDCommentStorage *)arg1 ;
-(int)annotationType;
-(int)annotationDisplayStringType;
-(void)willBeRemovedFromDocumentRoot:(id)arg1 ;
-(void)wasRemovedFromDocumentRoot:(id)arg1 ;
-(TSWPStorage *)parentStorage;
-(void)setParentStorage:(TSWPStorage *)arg1 ;
-(void)willBeAddedToDocumentRoot:(id)arg1 dolcContext:(id)arg2 ;
-(void)wasAddedToDocumentRoot:(id)arg1 dolcContext:(id)arg2 ;
-(BOOL)isHighlight;
@end

