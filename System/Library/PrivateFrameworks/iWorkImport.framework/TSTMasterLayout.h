/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:30:05 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSTTableHiddenRowColumnProviding.h>
#import <iWorkImport/TSTTableInternalGeometryProviding.h>
#import <iWorkImport/TSTTableMergeRangeProviding.h>

@protocol OS_dispatch_group, TSTLayoutDynamicColumnMoveProtocol, TSTLayoutDynamicContentProtocol, TSTLayoutDynamicRowMoveProtocol, TSTLayoutDynamicCellFillProtocol;
@class NSObject, TSWPColumnStyle, TSTInfo, TSKChangeNotifier, TSTStrokeDefaultVendor, TSTWPColumnCache, TSTDupContentCache, TSTWidthHeightCache, TSTHiddenRowsColumnsCache, TSDFill, TSUColor, TSDInfoGeometry, TSDLayoutGeometry, TSTCellSelection, NSMutableArray, TSTMergeRangeSortedSet, TSUWidthLimitedQueue, NSPointerArray, TSTConcurrentMutableIndexSet, TSTCellRegion, TSTStrokeWidthCache, TSTRWRetainedPointerKeyDictionary, NSMutableSet, TSTLayout, TSTLayoutDynamicResizeInfo, NSIndexSet, NSString;

@interface TSTMasterLayout : NSObject <TSTTableHiddenRowColumnProviding, TSTTableInternalGeometryProviding, TSTTableMergeRangeProviding> {

	double _tableDefaultFontHeightForArea[5];
	NSObject*<OS_dispatch_group> _layoutInFlight;
	opaque_pthread_rwlock_t _strokesRWLock;
	opaque_pthread_rwlock_t _contentRWLock;
	TSWPColumnStyle* _defaultColumnStyle;
	BOOL _inDynamicLayoutMode;
	BOOL _dynamicBandedFill;
	BOOL _dynamicBandedFillSetting;
	BOOL _dynamicRepResize;
	BOOL _dynamicResizingColumns;
	BOOL _dynamicResizingRows;
	BOOL _processHiddenRowsForExport;
	BOOL _headerColumnsFrozen;
	BOOL _headerRowsFrozen;
	BOOL _headerColumnsRepeat;
	BOOL _headerRowsRepeat;
	BOOL _tableNameEnabled;
	BOOL _tableNameHeightValid;
	BOOL _bandedFillIsValid;
	BOOL _useBandedFill;
	BOOL _tableDefaultFontHeightsAreValid;
	BOOL _emptyFilteredTable;
	BOOL _isGrouped;
	BOOL _dynamicRepressFrozenHeaderRows;
	BOOL _dynamicRepressFrozenHeaderColumns;
	unsigned short _cachedNumberOfHeaderColumns;
	unsigned short _cachedNumberOfHeaderRows;
	unsigned short _cachedNumberOfFooterRows;
	unsigned _maxConcurrentTasks;
	unsigned _numCellsPerTask;
	int _tableEnvironment;
	int _tableRowsBehavior;
	int _dynamicColumnAdjustment;
	int _dynamicRowAdjustment;
	TSUCellCoord _dynamicSuppressingConditionalStylesCellID;
	TSTInfo* _tableInfo;
	TSKChangeNotifier* _changeNotifier;
	TSTStrokeDefaultVendor* _strokesDefaultVendor;
	TSTWPColumnCache* _cellIDToWPColumnCache;
	TSTDupContentCache* _dupContentCache;
	TSTWPColumnCache* _tempWPColumnCache;
	TSTWidthHeightCache* _widthHeightCache;
	TSTHiddenRowsColumnsCache* _hiddenRowsColumnsCache;
	TSDFill* _bandedFillObject;
	double _dynamicAddOrRemoveColumnElementSize;
	double _dynamicAddOrRemoveRowElementSize;
	double _dynamicColumnTabSize;
	TSUColor* _dynamicFontColor;
	TSUCellRect _dynamicFontColorCellRange;
	TSDInfoGeometry* _dynamicInfoGeometry;
	double _dynamicWidthResize;
	double _dynamicHeightResize;
	TSUCellRect _dynamicResizingColumnRange;
	double _dynamicResizingColumnAdjustment;
	TSUCellRect _dynamicResizingRowRange;
	double _dynamicResizingRowAdjustment;
	double _dynamicRowTabSize;
	TSDLayoutGeometry* _dynamicSavedLayoutGeometry;
	TSTCellSelection* _dynamicSelection;
	double _dynamicTableNameResize;
	NSMutableArray* _changeDescriptors;
	TSTMergeRangeSortedSet* _mergeRanges;
	TSUWidthLimitedQueue* _layoutQueue;
	NSPointerArray* _topRowStrokes;
	NSPointerArray* _bottomRowStrokes;
	NSPointerArray* _leftColumnStrokes;
	NSPointerArray* _rightColumnStrokes;
	TSTConcurrentMutableIndexSet* _spillStrokeColumns;
	TSTCellRegion* _cellRegionForClearedMergeStrokes;
	TSTStrokeWidthCache* _columnToStrokeWidthCache;
	TSTStrokeWidthCache* _rowToStrokeHeightCache;
	TSTRWRetainedPointerKeyDictionary* _paraStyleToHeightCache;
	double _cachedTableNameHeight;
	unsigned long long _cachedMaxNumberOfColumns;
	unsigned long long _cachedMaxNumberOfRows;
	NSMutableSet* _contentReadingThreads;
	NSMutableSet* _dynamicLayoutParticipants;
	TSTLayout* _dynamicLayout;
	id<TSTLayoutDynamicColumnMoveProtocol> _dynamicColumnMoveDelegate;
	id<TSTLayoutDynamicContentProtocol> _dynamicContentDelegate;
	TSUCellRect _dynamicHidingContent;
	TSUCellRect _dynamicHidingRowsCols;
	long long _dynamicHidingRowsColsDirection;
	TSUCellRect _dynamicHidingText;
	TSTLayoutDynamicResizeInfo* _dynamicResizeInfo;
	TSUCellRect _dynamicRevealingRowsCols;
	long long _dynamicRevealingRowsColsDirection;
	id<TSTLayoutDynamicRowMoveProtocol> _dynamicRowMoveDelegate;
	id<TSTLayoutDynamicCellFillProtocol> _dynamicCellFillDelegate;
	CGSize _maximumPartitionSize;
	CGRect _tableNameBounds;

}

@property (nonatomic,retain) TSTWPColumnCache * cellIDToWPColumnCache;                                      //@synthesize cellIDToWPColumnCache=_cellIDToWPColumnCache - In the implementation block
@property (nonatomic,retain) TSTDupContentCache * dupContentCache;                                          //@synthesize dupContentCache=_dupContentCache - In the implementation block
@property (nonatomic,retain) TSTWPColumnCache * tempWPColumnCache;                                          //@synthesize tempWPColumnCache=_tempWPColumnCache - In the implementation block
@property (nonatomic,retain) TSTWidthHeightCache * widthHeightCache;                                        //@synthesize widthHeightCache=_widthHeightCache - In the implementation block
@property (nonatomic,retain) TSTHiddenRowsColumnsCache * hiddenRowsColumnsCache;                            //@synthesize hiddenRowsColumnsCache=_hiddenRowsColumnsCache - In the implementation block
@property (nonatomic,retain) TSUWidthLimitedQueue * layoutQueue;                                            //@synthesize layoutQueue=_layoutQueue - In the implementation block
@property (nonatomic,retain) TSTStrokeDefaultVendor * strokesDefaultVendor;                                 //@synthesize strokesDefaultVendor=_strokesDefaultVendor - In the implementation block
@property (nonatomic,retain) NSPointerArray * topRowStrokes;                                                //@synthesize topRowStrokes=_topRowStrokes - In the implementation block
@property (nonatomic,retain) NSPointerArray * bottomRowStrokes;                                             //@synthesize bottomRowStrokes=_bottomRowStrokes - In the implementation block
@property (nonatomic,retain) NSPointerArray * leftColumnStrokes;                                            //@synthesize leftColumnStrokes=_leftColumnStrokes - In the implementation block
@property (nonatomic,retain) NSPointerArray * rightColumnStrokes;                                           //@synthesize rightColumnStrokes=_rightColumnStrokes - In the implementation block
@property (nonatomic,retain) TSTConcurrentMutableIndexSet * spillStrokeColumns;                             //@synthesize spillStrokeColumns=_spillStrokeColumns - In the implementation block
@property (nonatomic,retain) TSTCellRegion * cellRegionForClearedMergeStrokes;                              //@synthesize cellRegionForClearedMergeStrokes=_cellRegionForClearedMergeStrokes - In the implementation block
@property (nonatomic,retain) TSTStrokeWidthCache * columnToStrokeWidthCache;                                //@synthesize columnToStrokeWidthCache=_columnToStrokeWidthCache - In the implementation block
@property (nonatomic,retain) TSTStrokeWidthCache * rowToStrokeHeightCache;                                  //@synthesize rowToStrokeHeightCache=_rowToStrokeHeightCache - In the implementation block
@property (nonatomic,retain) TSTRWRetainedPointerKeyDictionary * paraStyleToHeightCache;                    //@synthesize paraStyleToHeightCache=_paraStyleToHeightCache - In the implementation block
@property (assign,nonatomic) BOOL headerColumnsFrozen;                                                      //@synthesize headerColumnsFrozen=_headerColumnsFrozen - In the implementation block
@property (assign,nonatomic) BOOL headerRowsFrozen;                                                         //@synthesize headerRowsFrozen=_headerRowsFrozen - In the implementation block
@property (assign,nonatomic) BOOL headerColumnsRepeat;                                                      //@synthesize headerColumnsRepeat=_headerColumnsRepeat - In the implementation block
@property (assign,nonatomic) BOOL headerRowsRepeat;                                                         //@synthesize headerRowsRepeat=_headerRowsRepeat - In the implementation block
@property (assign,nonatomic) BOOL tableNameEnabled;                                                         //@synthesize tableNameEnabled=_tableNameEnabled - In the implementation block
@property (assign,nonatomic) CGRect tableNameBounds;                                                        //@synthesize tableNameBounds=_tableNameBounds - In the implementation block
@property (assign,nonatomic) double cachedTableNameHeight;                                                  //@synthesize cachedTableNameHeight=_cachedTableNameHeight - In the implementation block
@property (assign,nonatomic) BOOL tableNameHeightValid;                                                     //@synthesize tableNameHeightValid=_tableNameHeightValid - In the implementation block
@property (assign,nonatomic) unsigned short cachedNumberOfHeaderColumns;                                    //@synthesize cachedNumberOfHeaderColumns=_cachedNumberOfHeaderColumns - In the implementation block
@property (assign,nonatomic) unsigned long long cachedMaxNumberOfColumns;                                   //@synthesize cachedMaxNumberOfColumns=_cachedMaxNumberOfColumns - In the implementation block
@property (assign,nonatomic) unsigned short cachedNumberOfHeaderRows;                                       //@synthesize cachedNumberOfHeaderRows=_cachedNumberOfHeaderRows - In the implementation block
@property (assign,nonatomic) unsigned short cachedNumberOfFooterRows;                                       //@synthesize cachedNumberOfFooterRows=_cachedNumberOfFooterRows - In the implementation block
@property (assign,nonatomic) unsigned long long cachedMaxNumberOfRows;                                      //@synthesize cachedMaxNumberOfRows=_cachedMaxNumberOfRows - In the implementation block
@property (assign,nonatomic) BOOL bandedFillIsValid;                                                        //@synthesize bandedFillIsValid=_bandedFillIsValid - In the implementation block
@property (assign,nonatomic) BOOL useBandedFill;                                                            //@synthesize useBandedFill=_useBandedFill - In the implementation block
@property (nonatomic,retain) TSDFill * bandedFillObject;                                                    //@synthesize bandedFillObject=_bandedFillObject - In the implementation block
@property (assign,nonatomic) int tableRowsBehavior;                                                         //@synthesize tableRowsBehavior=_tableRowsBehavior - In the implementation block
@property (assign,nonatomic) BOOL tableDefaultFontHeightsAreValid;                                          //@synthesize tableDefaultFontHeightsAreValid=_tableDefaultFontHeightsAreValid - In the implementation block
@property (nonatomic,retain) NSMutableSet * contentReadingThreads;                                          //@synthesize contentReadingThreads=_contentReadingThreads - In the implementation block
@property (assign,nonatomic) BOOL emptyFilteredTable;                                                       //@synthesize emptyFilteredTable=_emptyFilteredTable - In the implementation block
@property (nonatomic,retain) NSMutableArray * changeDescriptors;                                            //@synthesize changeDescriptors=_changeDescriptors - In the implementation block
@property (assign,nonatomic) BOOL isGrouped;                                                                //@synthesize isGrouped=_isGrouped - In the implementation block
@property (assign,getter=isInDynamicLayoutMode,nonatomic) BOOL inDynamicLayoutMode;                         //@synthesize inDynamicLayoutMode=_inDynamicLayoutMode - In the implementation block
@property (nonatomic,retain) NSMutableSet * dynamicLayoutParticipants;                                      //@synthesize dynamicLayoutParticipants=_dynamicLayoutParticipants - In the implementation block
@property (nonatomic,retain) TSTLayout * dynamicLayout;                                                     //@synthesize dynamicLayout=_dynamicLayout - In the implementation block
@property (assign,nonatomic) double dynamicAddOrRemoveColumnElementSize;                                    //@synthesize dynamicAddOrRemoveColumnElementSize=_dynamicAddOrRemoveColumnElementSize - In the implementation block
@property (assign,nonatomic) double dynamicAddOrRemoveRowElementSize;                                       //@synthesize dynamicAddOrRemoveRowElementSize=_dynamicAddOrRemoveRowElementSize - In the implementation block
@property (assign,nonatomic) BOOL dynamicBandedFill;                                                        //@synthesize dynamicBandedFill=_dynamicBandedFill - In the implementation block
@property (assign,nonatomic) BOOL dynamicBandedFillSetting;                                                 //@synthesize dynamicBandedFillSetting=_dynamicBandedFillSetting - In the implementation block
@property (assign,nonatomic) int dynamicColumnAdjustment;                                                   //@synthesize dynamicColumnAdjustment=_dynamicColumnAdjustment - In the implementation block
@property (nonatomic,retain) id<TSTLayoutDynamicColumnMoveProtocol> dynamicColumnMoveDelegate;              //@synthesize dynamicColumnMoveDelegate=_dynamicColumnMoveDelegate - In the implementation block
@property (assign,nonatomic) double dynamicColumnTabSize;                                                   //@synthesize dynamicColumnTabSize=_dynamicColumnTabSize - In the implementation block
@property (nonatomic,retain) id<TSTLayoutDynamicContentProtocol> dynamicContentDelegate;                    //@synthesize dynamicContentDelegate=_dynamicContentDelegate - In the implementation block
@property (nonatomic,retain) TSUColor * dynamicFontColor;                                                   //@synthesize dynamicFontColor=_dynamicFontColor - In the implementation block
@property (assign,nonatomic) TSUCellRect dynamicFontColorCellRange;                                         //@synthesize dynamicFontColorCellRange=_dynamicFontColorCellRange - In the implementation block
@property (assign,nonatomic) TSUCellRect dynamicHidingContent;                                              //@synthesize dynamicHidingContent=_dynamicHidingContent - In the implementation block
@property (assign,nonatomic) TSUCellRect dynamicHidingRowsCols;                                             //@synthesize dynamicHidingRowsCols=_dynamicHidingRowsCols - In the implementation block
@property (assign,nonatomic) long long dynamicHidingRowsColsDirection;                                      //@synthesize dynamicHidingRowsColsDirection=_dynamicHidingRowsColsDirection - In the implementation block
@property (assign,nonatomic) TSUCellRect dynamicHidingText;                                                 //@synthesize dynamicHidingText=_dynamicHidingText - In the implementation block
@property (nonatomic,retain) TSDInfoGeometry * dynamicInfoGeometry;                                         //@synthesize dynamicInfoGeometry=_dynamicInfoGeometry - In the implementation block
@property (assign,nonatomic) BOOL dynamicRepressFrozenHeaderRows;                                           //@synthesize dynamicRepressFrozenHeaderRows=_dynamicRepressFrozenHeaderRows - In the implementation block
@property (assign,nonatomic) BOOL dynamicRepressFrozenHeaderColumns;                                        //@synthesize dynamicRepressFrozenHeaderColumns=_dynamicRepressFrozenHeaderColumns - In the implementation block
@property (nonatomic,retain) TSTLayoutDynamicResizeInfo * dynamicResizeInfo;                                //@synthesize dynamicResizeInfo=_dynamicResizeInfo - In the implementation block
@property (assign,nonatomic) BOOL dynamicResizingColumns;                                                   //@synthesize dynamicResizingColumns=_dynamicResizingColumns - In the implementation block
@property (assign,nonatomic) TSUCellRect dynamicResizingColumnRange;                                        //@synthesize dynamicResizingColumnRange=_dynamicResizingColumnRange - In the implementation block
@property (assign,nonatomic) double dynamicResizingColumnAdjustment;                                        //@synthesize dynamicResizingColumnAdjustment=_dynamicResizingColumnAdjustment - In the implementation block
@property (assign,nonatomic) BOOL dynamicResizingRows;                                                      //@synthesize dynamicResizingRows=_dynamicResizingRows - In the implementation block
@property (assign,nonatomic) TSUCellRect dynamicResizingRowRange;                                           //@synthesize dynamicResizingRowRange=_dynamicResizingRowRange - In the implementation block
@property (assign,nonatomic) double dynamicResizingRowAdjustment;                                           //@synthesize dynamicResizingRowAdjustment=_dynamicResizingRowAdjustment - In the implementation block
@property (assign,nonatomic) TSUCellRect dynamicRevealingRowsCols;                                          //@synthesize dynamicRevealingRowsCols=_dynamicRevealingRowsCols - In the implementation block
@property (assign,nonatomic) long long dynamicRevealingRowsColsDirection;                                   //@synthesize dynamicRevealingRowsColsDirection=_dynamicRevealingRowsColsDirection - In the implementation block
@property (assign,nonatomic) int dynamicRowAdjustment;                                                      //@synthesize dynamicRowAdjustment=_dynamicRowAdjustment - In the implementation block
@property (nonatomic,retain) id<TSTLayoutDynamicRowMoveProtocol> dynamicRowMoveDelegate;                    //@synthesize dynamicRowMoveDelegate=_dynamicRowMoveDelegate - In the implementation block
@property (assign,nonatomic) double dynamicRowTabSize;                                                      //@synthesize dynamicRowTabSize=_dynamicRowTabSize - In the implementation block
@property (nonatomic,retain) TSTCellSelection * dynamicSelection;                                           //@synthesize dynamicSelection=_dynamicSelection - In the implementation block
@property (assign,nonatomic) double dynamicTableNameResize;                                                 //@synthesize dynamicTableNameResize=_dynamicTableNameResize - In the implementation block
@property (assign,nonatomic) TSUCellCoord dynamicSuppressingConditionalStylesCellID;                        //@synthesize dynamicSuppressingConditionalStylesCellID=_dynamicSuppressingConditionalStylesCellID - In the implementation block
@property (nonatomic,retain) id<TSTLayoutDynamicCellFillProtocol> dynamicCellFillDelegate;                  //@synthesize dynamicCellFillDelegate=_dynamicCellFillDelegate - In the implementation block
@property (nonatomic,readonly) TSWPColumnStyle * defaultColumnStyle; 
@property (assign,nonatomic,__weak) TSTInfo * tableInfo;                                                    //@synthesize tableInfo=_tableInfo - In the implementation block
@property (assign,nonatomic,__weak) TSKChangeNotifier * changeNotifier;                                     //@synthesize changeNotifier=_changeNotifier - In the implementation block
@property (assign,nonatomic) unsigned maxConcurrentTasks;                                                   //@synthesize maxConcurrentTasks=_maxConcurrentTasks - In the implementation block
@property (assign,nonatomic) unsigned numCellsPerTask;                                                      //@synthesize numCellsPerTask=_numCellsPerTask - In the implementation block
@property (assign,nonatomic) int tableEnvironment;                                                          //@synthesize tableEnvironment=_tableEnvironment - In the implementation block
@property (assign,nonatomic) BOOL dynamicRepResize;                                                         //@synthesize dynamicRepResize=_dynamicRepResize - In the implementation block
@property (assign,nonatomic) double dynamicWidthResize;                                                     //@synthesize dynamicWidthResize=_dynamicWidthResize - In the implementation block
@property (assign,nonatomic) double dynamicHeightResize;                                                    //@synthesize dynamicHeightResize=_dynamicHeightResize - In the implementation block
@property (nonatomic,copy) TSDLayoutGeometry * dynamicSavedLayoutGeometry;                                  //@synthesize dynamicSavedLayoutGeometry=_dynamicSavedLayoutGeometry - In the implementation block
@property (nonatomic,retain) TSTMergeRangeSortedSet * mergeRanges;                                          //@synthesize mergeRanges=_mergeRanges - In the implementation block
@property (assign,nonatomic) BOOL processHiddenRowsForExport;                                               //@synthesize processHiddenRowsForExport=_processHiddenRowsForExport - In the implementation block
@property (assign,nonatomic) CGSize maximumPartitionSize;                                                   //@synthesize maximumPartitionSize=_maximumPartitionSize - In the implementation block
@property (nonatomic,readonly) NSIndexSet * visibleRowIndices; 
@property (nonatomic,readonly) NSIndexSet * visibleColumnIndices; 
@property (nonatomic,readonly) NSIndexSet * hiddenRowIndices; 
@property (nonatomic,readonly) NSIndexSet * hiddenColumnIndices; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) unsigned short numberOfRows; 
@property (nonatomic,readonly) unsigned short numberOfColumns; 
@property (nonatomic,readonly) unsigned short numberOfHeaderRows; 
@property (nonatomic,readonly) unsigned short numberOfFooterRows; 
@property (nonatomic,readonly) unsigned short numberOfHeaderColumns; 
+(double)effectiveTableNameHeightForTable:(id)arg1 ;
+(int)tableRowsBehaviorForTable:(id)arg1 andEnvironment:(int)arg2 ;
+(id)tableNameTextEngine:(id)arg1 ;
+(CGSize)tableNameTextSize:(id)arg1 ;
-(TSUCellRect)expandCellRangeToCoverMergedCells:(TSUCellRect)arg1 ;
-(unsigned short)indexOfVisibleRowAfterAndIncludingRowAtIndex:(unsigned short)arg1 ;
-(unsigned short)indexOfVisibleRowBeforeAndIncludingRowAtIndex:(unsigned short)arg1 ;
-(unsigned char)indexOfVisibleColumnAfterAndIncludingColumnAtIndex:(unsigned char)arg1 ;
-(unsigned char)indexOfVisibleColumnBeforeAndIncludingColumnAtIndex:(unsigned char)arg1 ;
-(unsigned char)indexOfVisibleColumnBeforeColumnAtIndex:(unsigned char)arg1 ;
-(unsigned char)indexOfVisibleColumnAfterColumnAtIndex:(unsigned char)arg1 ;
-(unsigned short)indexOfVisibleRowBeforeRowAtIndex:(unsigned short)arg1 ;
-(unsigned short)indexOfVisibleRowAfterRowAtIndex:(unsigned short)arg1 ;
-(BOOL)hasHiddenRowAtIndex:(unsigned short)arg1 ;
-(BOOL)hasHiddenColumnAtIndex:(unsigned char)arg1 ;
-(id)mergesIntersectingRange:(TSUCellRect)arg1 ;
-(id)mergesIntersectingCellRegion:(id)arg1 ;
-(id)expandCellRegionToCoverMergedCells:(id)arg1 ;
-(BOOL)anyHiddenRowsInCellRange:(TSUCellRect)arg1 ;
-(BOOL)anyHiddenColumnsInCellRange:(TSUCellRect)arg1 ;
-(void)iterateCellsInRange:(TSUCellRect)arg1 flags:(unsigned long long)arg2 searchFlags:(unsigned long long)arg3 usingBlock:(/*^block*/id)arg4 ;
-(id)cellIteratorWithRange:(TSUCellRect)arg1 flags:(unsigned long long)arg2 searchFlags:(unsigned long long)arg3 ;
-(void)iterateCellsAndTerminateWithIterator:(id)arg1 usingBlock:(/*^block*/id)arg2 ;
-(BOOL)isEntireCellRangeHidden:(TSUCellRect)arg1 ;
-(BOOL)isDynamicallyRepressingFrozenHeaderRows;
-(BOOL)isDynamicallyRepressingFrozenHeaderColumns;
-(BOOL)isInDynamicLayoutMode;
-(void)clearDynamicStrokesForCellRange:(TSUCellRect)arg1 ;
-(NSPointerArray *)leftColumnStrokes;
-(NSPointerArray *)rightColumnStrokes;
-(NSPointerArray *)topRowStrokes;
-(NSPointerArray *)bottomRowStrokes;
-(void)setLeftColumnStrokes:(NSPointerArray *)arg1 ;
-(void)setRightColumnStrokes:(NSPointerArray *)arg1 ;
-(void)setTopRowStrokes:(NSPointerArray *)arg1 ;
-(void)setBottomRowStrokes:(NSPointerArray *)arg1 ;
-(double)strokeHeightOfGridRow:(unsigned)arg1 beginColumn:(unsigned)arg2 endColumn:(unsigned)arg3 ;
-(double)strokeWidthOfGridColumn:(unsigned)arg1 beginRow:(unsigned)arg2 endRow:(unsigned)arg3 ;
-(void)enumerateMergedStrokesForGridColumn:(unsigned)arg1 from:(unsigned)arg2 to:(unsigned)arg3 usingBlock:(/*^block*/id)arg4 ;
-(void)enumerateMergedStrokesForGridRow:(unsigned)arg1 from:(unsigned)arg2 to:(unsigned)arg3 usingBlock:(/*^block*/id)arg4 ;
-(void)enumerateMergedStrokesAndCapsForGridColumn:(unsigned)arg1 from:(unsigned)arg2 to:(unsigned)arg3 usingBlock:(/*^block*/id)arg4 ;
-(void)enumerateMergedStrokesAndCapsForGridRow:(unsigned)arg1 from:(unsigned)arg2 to:(unsigned)arg3 usingBlock:(/*^block*/id)arg4 ;
-(double)strokeWidthOfGridColumn:(unsigned)arg1 atRowIndex:(unsigned)arg2 ;
-(double)strokeHeightOfGridRow:(unsigned)arg1 atColumnIndex:(unsigned)arg2 ;
-(id)customStrokeProvider;
-(void)strokesForCellID:(TSUCellCoord)arg1 top:(id*)arg2 left:(id*)arg3 bottom:(id*)arg4 right:(id*)arg5 ;
-(void)validateStrokesArrays:(id)arg1 ;
-(void)p_validateStrokesForRegion:(id)arg1 ;
-(BOOL)isDynamicallyMovingColumns;
-(id<TSTLayoutDynamicColumnMoveProtocol>)dynamicColumnMoveDelegate;
-(BOOL)isDynamicallyMovingRows;
-(id<TSTLayoutDynamicRowMoveProtocol>)dynamicRowMoveDelegate;
-(id)modelCellRegionForLayoutCellRegion:(id)arg1 ;
-(unsigned char)modelColumnForLayoutColumn:(unsigned char)arg1 ;
-(id)p_strokesForGridColumn:(unsigned)arg1 isLeft:(BOOL)arg2 takeStrokeWriteLock:(BOOL)arg3 ;
-(BOOL)adjustGridColumnForVisibility:(unsigned*)arg1 isLeft:(BOOL)arg2 ;
-(id)p_strokesForGridRow:(unsigned)arg1 isTop:(BOOL)arg2 takeStrokeWriteLock:(BOOL)arg3 ;
-(BOOL)adjustGridRowForVisibility:(unsigned*)arg1 isTop:(BOOL)arg2 ;
-(void)p_setDynamicStroke:(id)arg1 strokeOrder:(int)arg2 forGridRow:(unsigned)arg3 isTop:(BOOL)arg4 beginColumn:(unsigned)arg5 endColumn:(unsigned)arg6 ;
-(void)p_setDynamicStroke:(id)arg1 strokeOrder:(int)arg2 forGridColumn:(unsigned)arg3 isLeft:(BOOL)arg4 beginRow:(unsigned)arg5 endRow:(unsigned)arg6 ;
-(id)mergedStrokesForGridRow:(unsigned)arg1 ;
-(id)mergedStrokesForGridColumn:(unsigned)arg1 ;
-(void)setClearedStrokeForGridColumn:(unsigned)arg1 beginRow:(unsigned)arg2 endRow:(unsigned)arg3 ;
-(void)setClearedStrokeForGridRow:(unsigned)arg1 beginColumn:(unsigned)arg2 endColumn:(unsigned)arg3 ;
-(void)invalidateStrokeDefaults;
-(void)invalidateStrokeSpills;
-(NSIndexSet *)hiddenColumnIndices;
-(NSIndexSet *)hiddenRowIndices;
-(void)p_invalidateClearedStrokesForCellRegion:(id)arg1 ;
-(void)p_clearStrokesForMergesInCellRegion:(id)arg1 ;
-(unsigned char)layoutColumnForModelColumn:(unsigned char)arg1 ;
-(unsigned short)nonUserHiddenRowAfterAndIncludingRow:(unsigned short)arg1 ;
-(NSMutableSet *)dynamicLayoutParticipants;
-(void)validateTableNameHeight;
-(void)modifySafelyUsingBlock:(/*^block*/id)arg1 ;
-(void)validateStrokesForChangeDescriptors:(id)arg1 ;
-(void)queueCellForValidation:(TSUCellRect)arg1 cell:(id)arg2 modelMergeRange:(TSUCellRect)arg3 wrap:(BOOL)arg4 verticalAlignment:(int)arg5 padding:(id)arg6 prop:(BOOL)arg7 layoutCacheFlags:(int)arg8 layoutTask:(id)arg9 ;
-(void)p_validateFittingInfoForEmptyMergeRange:(TSUCellRect)arg1 ;
-(TSUCellCoord)p_validateFittingInfoForEmptyCellsBetween:(TSUCellCoord)arg1 andCellID:(TSUCellCoord)arg2 inRange:(TSUCellRect)arg3 widthHeightCollection:(id)arg4 ;
-(void)validateFittingInfoForCell:(id)arg1 cellID:(TSUCellCoord)arg2 mergeRange:(TSUCellRect)arg3 setFitting:(BOOL)arg4 layoutTask:(id)arg5 widthHeightCollection:(id)arg6 ;
-(void)validateFittingInfoWithCellRangeWorker:(TSUCellRect)arg1 ;
-(void)p_validateFittingInfoForEmptyCellsOnSingleRowBetween:(TSUCellCoord)arg1 andEndCellID:(TSUCellCoord)arg2 widthHeightCollection:(id)arg3 ;
-(id)mergeRangesProppingRowHeightsInRegion:(id)arg1 ;
-(id)p_validationFittingCellRegionForColumnsDeleted:(id)arg1 currentRegionToValidate:(id)arg2 ;
-(id)p_validationFittingCellRegionForColumnsInserted:(id)arg1 currentRegionToValidate:(id)arg2 ;
-(id)p_validationFittingCellRegionForColumnsVisibility:(id)arg1 currentRegionToValidate:(id)arg2 ;
-(id)p_validationFittingCellRegionForColumnsMovedFrom:(id)arg1 toColumnIndex:(unsigned char)arg2 currentRegionToValidate:(id)arg3 ;
-(id)p_validationFittingCellRegionForRowsDeleted:(id)arg1 currentRegionToValidate:(id)arg2 ;
-(id)p_validationFittingCellRegionForRowsInserted:(id)arg1 currentRegionToValidate:(id)arg2 ;
-(id)p_validationFittingCellRegionForRowsMovedFrom:(id)arg1 toRowIndex:(unsigned short)arg2 currentRegionToValidate:(id)arg3 ;
-(id)p_validationFittingCellRegionForRangeMergeUnmerge:(id)arg1 currentRegionToValidate:(id)arg2 ;
-(id)p_validationFittingCellRegionForStrokesChanged:(id)arg1 currentRegionToValidate:(id)arg2 ;
-(id)p_validationFittingForChangeDescriptorType:(int)arg1 regionFromChangeDescriptor:(id)arg2 currentRegionToValidate:(id)arg3 ;
-(BOOL)p_deferredMergeExpansionForChangeDescriptorType:(int)arg1 ;
-(double)unwrappedFittingWidthsForColumnInCellRegionWorker:(id)arg1 ;
-(id)tableStrokeProvider;
-(void)setStrokeSpillForRightGridColumn:(unsigned)arg1 leftGridColumn:(unsigned)arg2 inRow:(unsigned)arg3 ;
-(BOOL)hasStrokeSpillForLeftGridColumn:(unsigned)arg1 inRow:(unsigned)arg2 ;
-(void)setDynamicCellBorder:(id)arg1 forCellID:(TSUCellCoord)arg2 ;
-(id)layoutCellRegionForModelCellRegion:(id)arg1 ;
-(TSUCellRect)expandCellRangeToVisibleNeighbors:(TSUCellRect)arg1 ;
-(unsigned short)firstEmptyBodyRow;
-(BOOL)containsAnyContentInRange:(TSUCellRect)arg1 ;
-(id<TSTLayoutDynamicCellFillProtocol>)dynamicCellFillDelegate;
-(BOOL)isDynamicallyChangingCellFill;
-(id)unwrappedFittingWidthsForColumnsInCellRegion:(id)arg1 ;
-(void)readSafelyUsingBlock:(/*^block*/id)arg1 ;
-(TSTStrokeDefaultVendor *)strokesDefaultVendor;
-(void)setStrokesDefaultVendor:(TSTStrokeDefaultVendor *)arg1 ;
-(void)setCellIDToWPColumnCache:(TSTWPColumnCache *)arg1 ;
-(void)setDupContentCache:(TSTDupContentCache *)arg1 ;
-(void)setTempWPColumnCache:(TSTWPColumnCache *)arg1 ;
-(void)setWidthHeightCache:(TSTWidthHeightCache *)arg1 ;
-(void)setHiddenRowsColumnsCache:(TSTHiddenRowsColumnsCache *)arg1 ;
-(void)setBandedFillObject:(TSDFill *)arg1 ;
-(void)setTableRowsBehavior:(int)arg1 ;
-(void)setInDynamicLayoutMode:(BOOL)arg1 ;
-(void)setDynamicAddOrRemoveColumnElementSize:(double)arg1 ;
-(void)setDynamicAddOrRemoveRowElementSize:(double)arg1 ;
-(void)setDynamicBandedFill:(BOOL)arg1 ;
-(void)setDynamicBandedFillSetting:(BOOL)arg1 ;
-(void)setDynamicColumnAdjustment:(int)arg1 ;
-(void)setDynamicColumnTabSize:(double)arg1 ;
-(void)setDynamicFontColor:(TSUColor *)arg1 ;
-(void)setDynamicFontColorCellRange:(TSUCellRect)arg1 ;
-(void)setDynamicInfoGeometry:(TSDInfoGeometry *)arg1 ;
-(void)setDynamicResizingColumns:(BOOL)arg1 ;
-(void)setDynamicResizingColumnRange:(TSUCellRect)arg1 ;
-(void)setDynamicResizingColumnAdjustment:(double)arg1 ;
-(void)setDynamicResizingRows:(BOOL)arg1 ;
-(void)setDynamicResizingRowRange:(TSUCellRect)arg1 ;
-(void)setDynamicResizingRowAdjustment:(double)arg1 ;
-(void)setDynamicRowAdjustment:(int)arg1 ;
-(void)setDynamicRowTabSize:(double)arg1 ;
-(TSTCellSelection *)dynamicSelection;
-(void)setDynamicSelection:(TSTCellSelection *)arg1 ;
-(void)setDynamicTableNameResize:(double)arg1 ;
-(void)setDynamicSuppressingConditionalStylesCellID:(TSUCellCoord)arg1 ;
-(void)setChangeDescriptors:(NSMutableArray *)arg1 ;
-(void)setLayoutQueue:(TSUWidthLimitedQueue *)arg1 ;
-(TSTConcurrentMutableIndexSet *)spillStrokeColumns;
-(void)setSpillStrokeColumns:(TSTConcurrentMutableIndexSet *)arg1 ;
-(TSTCellRegion *)cellRegionForClearedMergeStrokes;
-(void)setCellRegionForClearedMergeStrokes:(TSTCellRegion *)arg1 ;
-(TSTStrokeWidthCache *)columnToStrokeWidthCache;
-(void)setColumnToStrokeWidthCache:(TSTStrokeWidthCache *)arg1 ;
-(TSTStrokeWidthCache *)rowToStrokeHeightCache;
-(void)setRowToStrokeHeightCache:(TSTStrokeWidthCache *)arg1 ;
-(TSTRWRetainedPointerKeyDictionary *)paraStyleToHeightCache;
-(void)setParaStyleToHeightCache:(TSTRWRetainedPointerKeyDictionary *)arg1 ;
-(CGRect)tableNameBounds;
-(void)setTableNameBounds:(CGRect)arg1 ;
-(double)cachedTableNameHeight;
-(void)setCachedTableNameHeight:(double)arg1 ;
-(BOOL)tableNameHeightValid;
-(void)setTableNameHeightValid:(BOOL)arg1 ;
-(unsigned short)cachedNumberOfHeaderColumns;
-(void)setCachedNumberOfHeaderColumns:(unsigned short)arg1 ;
-(unsigned long long)cachedMaxNumberOfColumns;
-(void)setCachedMaxNumberOfColumns:(unsigned long long)arg1 ;
-(unsigned short)cachedNumberOfHeaderRows;
-(void)setCachedNumberOfHeaderRows:(unsigned short)arg1 ;
-(unsigned short)cachedNumberOfFooterRows;
-(void)setCachedNumberOfFooterRows:(unsigned short)arg1 ;
-(unsigned long long)cachedMaxNumberOfRows;
-(void)setCachedMaxNumberOfRows:(unsigned long long)arg1 ;
-(BOOL)bandedFillIsValid;
-(void)setBandedFillIsValid:(BOOL)arg1 ;
-(void)setUseBandedFill:(BOOL)arg1 ;
-(BOOL)tableDefaultFontHeightsAreValid;
-(void)setTableDefaultFontHeightsAreValid:(BOOL)arg1 ;
-(NSMutableSet *)contentReadingThreads;
-(void)setContentReadingThreads:(NSMutableSet *)arg1 ;
-(void)setEmptyFilteredTable:(BOOL)arg1 ;
-(void)setIsGrouped:(BOOL)arg1 ;
-(void)setDynamicLayoutParticipants:(NSMutableSet *)arg1 ;
-(void)setDynamicLayout:(TSTLayout *)arg1 ;
-(void)setDynamicColumnMoveDelegate:(id<TSTLayoutDynamicColumnMoveProtocol>)arg1 ;
-(void)setDynamicContentDelegate:(id<TSTLayoutDynamicContentProtocol>)arg1 ;
-(TSUCellRect)dynamicHidingContent;
-(void)setDynamicHidingContent:(TSUCellRect)arg1 ;
-(TSUCellRect)dynamicHidingRowsCols;
-(void)setDynamicHidingRowsCols:(TSUCellRect)arg1 ;
-(long long)dynamicHidingRowsColsDirection;
-(void)setDynamicHidingRowsColsDirection:(long long)arg1 ;
-(TSUCellRect)dynamicHidingText;
-(void)setDynamicHidingText:(TSUCellRect)arg1 ;
-(BOOL)dynamicRepressFrozenHeaderRows;
-(void)setDynamicRepressFrozenHeaderRows:(BOOL)arg1 ;
-(BOOL)dynamicRepressFrozenHeaderColumns;
-(void)setDynamicRepressFrozenHeaderColumns:(BOOL)arg1 ;
-(TSTLayoutDynamicResizeInfo *)dynamicResizeInfo;
-(void)setDynamicResizeInfo:(TSTLayoutDynamicResizeInfo *)arg1 ;
-(TSUCellRect)dynamicRevealingRowsCols;
-(void)setDynamicRevealingRowsCols:(TSUCellRect)arg1 ;
-(long long)dynamicRevealingRowsColsDirection;
-(void)setDynamicRevealingRowsColsDirection:(long long)arg1 ;
-(void)setDynamicRowMoveDelegate:(id<TSTLayoutDynamicRowMoveProtocol>)arg1 ;
-(void)setDynamicCellFillDelegate:(id<TSTLayoutDynamicCellFillProtocol>)arg1 ;
-(void)dealloc;
-(NSString *)description;
-(unsigned short)numberOfColumns;
-(unsigned short)numberOfRows;
-(void)validate;
-(TSKChangeNotifier *)changeNotifier;
-(id)initWithInfo:(id)arg1 ;
-(TSWPColumnStyle *)defaultColumnStyle;
-(int)tableRowsBehavior;
-(TSTInfo *)tableInfo;
-(BOOL)isGrouped;
-(BOOL)isDynamicallyChangingSelection;
-(BOOL)emptyFilteredTable;
-(unsigned short)numberOfHeaderRows;
-(unsigned short)numberOfHeaderColumns;
-(void)beginDynamicMode:(id)arg1 ;
-(void)endDynamicMode;
-(id<TSTLayoutDynamicContentProtocol>)dynamicContentDelegate;
-(BOOL)isDynamicallyResizingTableName;
-(id)tableNameTextEngine;
-(BOOL)useBandedFill;
-(TSUCellCoord)modelCellIDForLayoutCellID:(TSUCellCoord)arg1 ;
-(TSUCellCoord)layoutCellIDForModelCellID:(TSUCellCoord)arg1 ;
-(unsigned long long)tableAreaForCellID:(TSUCellCoord)arg1 ;
-(BOOL)isDynamicallyChangingContent;
-(BOOL)cell:(id*)arg1 forCellID:(TSUCellCoord)arg2 ;
-(TSUCellCoord)dynamicSuppressingConditionalStylesCellID;
-(BOOL)shouldRowUseBandedFill:(unsigned short)arg1 ;
-(TSDFill *)bandedFillObject;
-(BOOL)dynamicRepResize;
-(BOOL)isDynamicallyHidingRowsCols;
-(TSTWPColumnCache *)cellIDToWPColumnCache;
-(BOOL)isDynamicallyHidingRowsColsCellID:(TSUCellCoord)arg1 ;
-(BOOL)isDynamicallyResizingCellID:(TSUCellCoord)arg1 ;
-(BOOL)isDynamicallyHidingContentOfCellID:(TSUCellCoord)arg1 ;
-(BOOL)isDynamicallyHidingTextOfCellID:(TSUCellCoord)arg1 ;
-(BOOL)isDynamicallyChangingFontColorOfCellID:(TSUCellCoord)arg1 ;
-(id)validateCellForDrawing:(TSUCellCoord)arg1 cell:(id)arg2 contents:(id)arg3 wrap:(BOOL)arg4 verticalAlignment:(int)arg5 padding:(id)arg6 layoutCacheFlags:(int)arg7 pageNumber:(unsigned long long)arg8 pageCount:(unsigned long long)arg9 ;
-(id)newTextEngineForCell:(id)arg1 atCellID:(TSUCellCoord)arg2 ;
-(BOOL)isDynamicallyChangingRowCount;
-(int)dynamicRowAdjustment;
-(BOOL)headerRowsFrozen;
-(BOOL)headerColumnsFrozen;
-(unsigned short)numberOfFooterRows;
-(BOOL)tableNameEnabled;
-(double)tableNameHeight;
-(void)setTableNameEnabled:(BOOL)arg1 ;
-(void)setHeaderRowsFrozen:(BOOL)arg1 ;
-(void)setHeaderColumnsFrozen:(BOOL)arg1 ;
-(id)accountingParagraphStylePropertyMapForCell:(id)arg1 atCellID:(TSUCellCoord)arg2 ;
-(void)setTableInfo:(TSTInfo *)arg1 ;
-(BOOL)isRowUserHidden:(unsigned short)arg1 ;
-(BOOL)anyRowsUserHiddenInCellRange:(TSUCellRect)arg1 ;
-(NSIndexSet *)visibleRowIndices;
-(NSIndexSet *)visibleColumnIndices;
-(void)addChangeDescriptorWithType:(int)arg1 andCellRange:(TSUCellRect)arg2 ;
-(BOOL)validateLayoutHint:(id)arg1 ;
-(TSTWidthHeightCache *)widthHeightCache;
-(double)calculatedTableNameHeight;
-(double)calculatedTableNameHeightIncludingDynamicResize:(BOOL)arg1 ;
-(double)dynamicTableNameResize;
-(BOOL)isDynamicallyChangingRowOrColumnCount;
-(TSTHiddenRowsColumnsCache *)hiddenRowsColumnsCache;
-(BOOL)isDynamicallyResizing:(long long)arg1 rowColIndex:(unsigned short)arg2 ;
-(UIEdgeInsets)defaultPaddingForCellID:(TSUCellCoord)arg1 ;
-(UIEdgeInsets)paddingForCellID:(TSUCellCoord)arg1 ;
-(double)fontHeightOfParagraphStyle:(id)arg1 ;
-(void)invalidateBandedFill;
-(BOOL)isDynamicallySettingBandedFill;
-(BOOL)dynamicBandedFill;
-(BOOL)dynamicBandedFillSetting;
-(void)measureTextForLayoutState:(id)arg1 ;
-(void)setDynamicRepResize:(BOOL)arg1 ;
-(void)setDynamicSavedLayoutGeometry:(TSDLayoutGeometry *)arg1 ;
-(unsigned short)modelRowForLayoutRow:(unsigned short)arg1 ;
-(BOOL)isDynamicallyChangingColumnCount;
-(unsigned short)layoutRowForModelRow:(unsigned short)arg1 ;
-(BOOL)isDynamicallyRevealingRowsCols:(long long)arg1 rowColIndex:(unsigned short)arg2 ;
-(BOOL)isDynamicallyHidingRowsCols:(long long)arg1 rowColIndex:(unsigned short)arg2 ;
-(BOOL)processHiddenRowsForExport;
-(TSTLayout *)dynamicLayout;
-(void)addChangeDescriptorWithType:(int)arg1 andCellRange:(TSUCellRect)arg2 andStrokeRange:(TSUCellRect)arg3 ;
-(void)addChangeDescriptor:(id)arg1 ;
-(NSMutableArray *)changeDescriptors;
-(void)setChangeNotifier:(TSKChangeNotifier *)arg1 ;
-(void)validateBandedFill;
-(void)validateDynamicResizeInfo;
-(void)validateChangeDescriptorQueue;
-(void)invalidateTableNameHeight;
-(void)invalidateDefaultFontHeights;
-(void)validateRowVisibility:(id)arg1 ;
-(void)validateMasterLayoutForChangeDescriptors:(id)arg1 ;
-(void)validateDefaultFontHeights;
-(void)validateFittingInfoForChangeDescriptors:(id)arg1 rowsNeedingFittingInfo:(id)arg2 ;
-(void)processLayoutTask:(id)arg1 ;
-(void)waitForLayoutToComplete;
-(void)updateWHCForMergeRanges;
-(UIEdgeInsets)edgeInsetsFromPadding:(id)arg1 ;
-(TSTDupContentCache *)dupContentCache;
-(void)validateFittingInfoWithCellRange:(TSUCellRect)arg1 ;
-(unsigned)numCellsPerTask;
-(TSUColor *)dynamicFontColor;
-(void)setProcessHiddenRowsForExport:(BOOL)arg1 ;
-(id)newLayoutHint;
-(BOOL)hintIsValid:(id)arg1 ;
-(void)resetModelHeightWidthCache;
-(void)clearModelHeightWidthCacheForCellRange:(TSUCellRect)arg1 ;
-(CGSize)tableNameTextSize;
-(BOOL)isDynamicallyResizing:(long long)arg1 ;
-(BOOL)isDynamicallyChangingInfoGeometry;
-(BOOL)isDynamicallyRevealingRowsCols;
-(void)updateDynamicTableNameSize:(double)arg1 ;
-(BOOL)isDynamicallyColumnTabResizing;
-(BOOL)isDynamicallyRowTabResizing;
-(void)updateDynamicFontColor:(id)arg1 andRange:(TSUCellRect)arg2 ;
-(void)captureDynamicResizeInfo;
-(void)updateDynamicResizeInfo:(id)arg1 ;
-(void)invalidateDynamicResizeInfo;
-(void)validateFittingWidthsForRegion:(id)arg1 ;
-(void)setMaxConcurrentTasks:(unsigned)arg1 ;
-(TSTWPColumnCache *)tempWPColumnCache;
-(int)tableEnvironment;
-(void)setTableEnvironment:(int)arg1 ;
-(unsigned)maxConcurrentTasks;
-(void)setNumCellsPerTask:(unsigned)arg1 ;
-(double)dynamicAddOrRemoveColumnElementSize;
-(double)dynamicAddOrRemoveRowElementSize;
-(int)dynamicColumnAdjustment;
-(double)dynamicColumnTabSize;
-(TSUCellRect)dynamicFontColorCellRange;
-(TSDInfoGeometry *)dynamicInfoGeometry;
-(double)dynamicHeightResize;
-(void)setDynamicHeightResize:(double)arg1 ;
-(double)dynamicWidthResize;
-(void)setDynamicWidthResize:(double)arg1 ;
-(BOOL)dynamicResizingColumns;
-(double)dynamicResizingColumnAdjustment;
-(TSUCellRect)dynamicResizingColumnRange;
-(BOOL)dynamicResizingRows;
-(double)dynamicResizingRowAdjustment;
-(TSUCellRect)dynamicResizingRowRange;
-(double)dynamicRowTabSize;
-(TSDLayoutGeometry *)dynamicSavedLayoutGeometry;
-(TSTMergeRangeSortedSet *)mergeRanges;
-(void)setMergeRanges:(TSTMergeRangeSortedSet *)arg1 ;
-(CGSize)maximumPartitionSize;
-(void)setMaximumPartitionSize:(CGSize)arg1 ;
-(BOOL)headerRowsRepeat;
-(BOOL)headerColumnsRepeat;
-(void)setHeaderColumnsRepeat:(BOOL)arg1 ;
-(void)setHeaderRowsRepeat:(BOOL)arg1 ;
-(TSUWidthLimitedQueue *)layoutQueue;
@end

