/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:30:00 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_semaphore;
#import <iWorkImport/iWorkImport-Structs.h>
@class TSUWeakReference, NSCondition, NSMutableDictionary, NSMutableArray, NSObject;

@interface TSKAccessController : NSObject {

	TSUWeakReference* _delegate;
	opaque_pthread_rwlock_t _rwLock;
	BOOL _secondaryThreadWriting;
	BOOL _thenReadingOnMainThread;
	NSCondition* _cond;
	NSMutableDictionary* _signalIdentifiers;
	NSMutableDictionary* _waitIdentifiers;
	CFRunLoopSourceRef _mainThreadPingSource;
	NSMutableArray* _pendingMainThreadBlocks;
	SCD_Struct_TS594* _readerInfo[64];
	SCD_Struct_TS593 _mainThreadTicketInfo;
	unsigned _readerCount;
	NSMutableArray* _writerQueue;
	NSObject*<OS_dispatch_semaphore> _outstandingTicketReadLock;
	unsigned _outstandingTicketCount;
	BOOL _writeLockHeld;
	unsigned long long _writeBlockedMainThreadCount;
	unsigned long long _mainThreadWriteCount;

}
-(void)performReadAllowingOverlappingImplicitRead:(/*^block*/id)arg1 thenWrite:(/*^block*/id)arg2 thenReadOnMainThread:(/*^block*/id)arg3 ;
-(void)assertHasReadOrWrite;
-(void)assertHasRead;
-(void)performReadWithTicket:(id)arg1 block:(/*^block*/id)arg2 ;
-(BOOL)p_isMainThread;
-(void)p_willAcquireReadLock;
-(SCD_Struct_TS593*)p_ticketInfoForCurrentThread;
-(void)p_finishReadForTicketInfo:(SCD_Struct_TS593*)arg1 ;
-(void)i_startReadForTicket:(id)arg1 ;
-(void)p_readLockTakingRealLock:(BOOL)arg1 ;
-(void)p_readUnlockReleasingRealLock:(BOOL)arg1 ;
-(void)i_finishReadForTicket:(id)arg1 ;
-(SCD_Struct_TS593*)p_ticketInfoForTicket:(id)arg1 ;
-(void)p_willAcquireWriteLock;
-(void)p_enqueueWriteAndBlockAllowingPendingWrites:(BOOL)arg1 ;
-(void)p_unblockMainThread;
-(void)p_performRead:(/*^block*/id)arg1 eagerlyBlockingMainThread:(BOOL)arg2 thenWrite:(/*^block*/id)arg3 allowingPendingWrites:(BOOL)arg4 thenReadOnMainThread:(/*^block*/id)arg5 ;
-(void)p_blockMainThread;
-(void)p_scheduleMainThreadRead:(/*^block*/id)arg1 result:(BOOL)arg2 ;
-(void)p_signalMainThreadWriteComplete;
-(void)p_didAcquireReadLock;
-(void)p_willRelinquishReadLock;
-(void)p_didAcquireWriteLock;
-(void)p_asyncPerformBlockOnMainThread:(/*^block*/id)arg1 ;
-(void)p_willRelinquishWriteLock;
-(unsigned long long)p_writerQueueIndexOfThreadIdentifier:(NSThread*)arg1 ;
-(void)p_performReadOnMainThread:(/*^block*/id)arg1 result:(BOOL)arg2 ;
-(void)performReadGrantingTicket:(/*^block*/id)arg1 ;
-(void)performRead:(/*^block*/id)arg1 thenWrite:(/*^block*/id)arg2 thenReadOnMainThread:(/*^block*/id)arg3 ;
-(void)performRead:(/*^block*/id)arg1 thenWriteBeforePendingWrites:(/*^block*/id)arg2 thenReadOnMainThread:(/*^block*/id)arg3 ;
-(void)assertHasWrite;
-(id)init;
-(void)dealloc;
-(id)initWithDelegate:(id)arg1 ;
-(BOOL)waitOnIdentifier:(id)arg1 untilDate:(id)arg2 releaseReadWhileWaiting:(BOOL)arg3 ;
-(BOOL)p_hasRead;
-(void)p_readUnlock;
-(BOOL)p_hasWrite;
-(BOOL)p_waitWithCondition:(id)arg1 untilDate:(id)arg2 ;
-(void)p_signalThread:(id)arg1 ;
-(void)p_readLock;
-(void)performRead:(/*^block*/id)arg1 ;
-(void)performWrite:(/*^block*/id)arg1 blockMainThread:(BOOL)arg2 ;
-(void)p_writeLockAndBlockMainThread:(BOOL)arg1 ;
-(void)p_writeUnlock;
-(void)p_dequeueWrite;
-(void)performWrite:(/*^block*/id)arg1 ;
-(NSThread*)p_threadIdentifier;
-(void)signalIdentifier:(id)arg1 ;
-(void)waitOnIdentifier:(id)arg1 ;
-(void)p_blockMainThreadForWrite;
-(void)p_flushPendingMainThreadBlocksQueueAcquiringLock:(BOOL)arg1 ;
-(BOOL)hasRead;
-(BOOL)hasWrite;
@end

