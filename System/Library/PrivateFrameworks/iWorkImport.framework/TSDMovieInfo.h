/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:29:58 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSDMediaInfo.h>
#import <iWorkImport/KNImplicitAmbientAnimating.h>
#import <iWorkImport/TSDMixing.h>
#import <iWorkImport/TSDCompatibilityAwareMediaContainer.h>
#import <iWorkImport/TSDPlayableInfo.h>

@class TSPData, NSURL, NSString, TSDMediaStyle;

@interface TSDMovieInfo : TSDMediaInfo <KNImplicitAmbientAnimating, TSDMixing, TSDCompatibilityAwareMediaContainer, TSDPlayableInfo> {

	TSPData* mMovieData;
	NSURL* mMovieRemoteURL;
	TSPData* mImportedAuxiliaryMovieData;
	NSString* mImportedAuxiliaryMovieDataOriginalFilename;
	TSPData* mAudioOnlyImageData;
	double mStartTime;
	double mEndTime;
	double mPosterTime;
	TSPData* mPosterImageData;
	BOOL mPosterImageGeneratedWithAlphaSupport;
	CGSize mNaturalSize;
	long long mLoopOption;
	float mVolume;
	BOOL mAudioOnly;
	BOOL mStreaming;
	TSDMediaStyle* mStyle;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) BOOL canAddImplicitAmbientAnimations; 
@property (getter=isImplicitAmbientAnimationInteractive,nonatomic,readonly) BOOL implicitAmbientAnimationInteractive; 
@property (nonatomic,retain) TSPData * movieData; 
@property (nonatomic,retain) NSURL * movieRemoteURL; 
@property (nonatomic,retain) TSPData * importedAuxiliaryMovieData; 
@property (nonatomic,copy) NSString * importedAuxiliaryMovieDataOriginalFilename; 
@property (nonatomic,retain) TSPData * audioOnlyImageData; 
@property (assign,nonatomic) double posterTime; 
@property (nonatomic,retain) TSPData * posterImageData; 
@property (assign,getter=isAudioOnly,nonatomic) BOOL audioOnly; 
@property (assign,getter=isStreaming,nonatomic) BOOL streaming; 
@property (nonatomic,readonly) BOOL supportsStartTimeAndEndTime; 
@property (assign,nonatomic) double startTime; 
@property (assign,nonatomic) double endTime; 
@property (nonatomic,readonly) BOOL supportsLooping; 
@property (assign,nonatomic) long long loopOption; 
@property (assign,nonatomic) float volume; 
+(id)presetKinds;
+(double)defaultPosterTimeForDuration:(double)arg1 ;
-(void)saveToArchiver:(id)arg1 ;
-(void)loadFromUnarchiver:(id)arg1 ;
-(void)saveToArchive:(MovieArchive*)arg1 archiver:(id)arg2 ;
-(void)loadFromArchive:(const MovieArchive*)arg1 unarchiver:(id)arg2 ;
-(BOOL)isAllowedInGroups;
-(long long)mixingTypeWithObject:(id)arg1 context:(id)arg2 ;
-(BOOL)isEquivalentForCrossDocumentPasteMasterComparison:(id)arg1 ;
-(id)typesToPromiseWhenCopyingSingleDrawable;
-(id)promisedDataForType:(id)arg1 ;
-(id)mediaDataForDragging;
-(id)p_makePosterImageDataWithAVAsset:(id)arg1 inContext:(id)arg2 ;
-(BOOL)supportsStartTimeAndEndTime;
-(BOOL)supportsLooping;
-(NSString *)importedAuxiliaryMovieDataOriginalFilename;
-(void)setImportedAuxiliaryMovieDataOriginalFilename:(NSString *)arg1 ;
-(BOOL)supportsStyleInspecting;
-(id)promisedTSPDataForType:(id)arg1 ;
-(BOOL)willRenderContentViaImager;
-(id)newImplicitAmbientBuildRendererWithAnimatedBuild:(id)arg1 buildChunk:(id)arg2 session:(id)arg3 animatedSlideView:(id)arg4 ;
-(BOOL)canAddImplicitAmbientAnimations;
-(BOOL)isImplicitAmbientAnimationInteractive;
-(void)setEndTime:(double)arg1 ;
-(double)endTime;
-(id)objectForProperty:(int)arg1 ;
-(void)setStartTime:(double)arg1 ;
-(id)style;
-(void)setStyle:(id)arg1 ;
-(double)startTime;
-(float)volume;
-(void)setVolume:(float)arg1 ;
-(BOOL)needsDownload;
-(id)copyWithContext:(id)arg1 ;
-(void)acceptVisitor:(id)arg1 ;
-(BOOL)containsProperty:(int)arg1 ;
-(int)intValueForProperty:(int)arg1 ;
-(float)floatValueForProperty:(int)arg1 ;
-(double)doubleValueForProperty:(int)arg1 ;
-(id)presetKind;
-(Class)layoutClass;
-(Class)repClass;
-(BOOL)supportsAttachedComments;
-(id)initWithContext:(id)arg1 geometry:(id)arg2 ;
-(BOOL)supportsHyperlinks;
-(BOOL)canChangeWrapType;
-(id)animationFilters;
-(id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2 ;
-(id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3 ;
-(Class)styleClass;
-(id)mediaDisplayName;
-(id)mediaFileType;
-(CGSize)rawDataSize;
-(void)p_setPropertiesFromLoadedAsset:(id)arg1 ;
-(TSPData *)movieData;
-(NSURL *)movieRemoteURL;
-(void)setAudioOnly:(BOOL)arg1 ;
-(BOOL)isAudioOnly;
-(BOOL)isStreaming;
-(double)posterTime;
-(id)makeAVAssetWithOptions:(id)arg1 ;
-(id)makeAVAsset;
-(id)makePosterImageGeneratorWithAVAsset:(id)arg1 ;
-(id)generateEmptyPosterImageForContext:(id)arg1 ;
-(TSPData *)posterImageData;
-(long long)loopOption;
-(void)setMovieData:(TSPData *)arg1 ;
-(void)setMovieRemoteURL:(NSURL *)arg1 ;
-(TSPData *)importedAuxiliaryMovieData;
-(void)setImportedAuxiliaryMovieData:(TSPData *)arg1 ;
-(TSPData *)audioOnlyImageData;
-(void)setAudioOnlyImageData:(TSPData *)arg1 ;
-(void)setPosterTime:(double)arg1 ;
-(void)setLoopOption:(long long)arg1 ;
-(id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3 movieData:(id)arg4 loadedAsset:(id)arg5 ;
-(id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3 movieRemoteURL:(id)arg4 loadedAsset:(id)arg5 ;
-(void)setPosterImageData:(TSPData *)arg1 ;
-(void)setStreaming:(BOOL)arg1 ;
-(id)synchronouslyGenerateDefaultPosterImageForContext:(id)arg1 ;
-(BOOL)canResetMediaSize;
-(id)styleIdentifierTemplateForNewPreset;
@end

