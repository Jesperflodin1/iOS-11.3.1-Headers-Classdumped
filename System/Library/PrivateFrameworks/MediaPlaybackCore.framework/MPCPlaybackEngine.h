/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:23:04 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol MPCPlaybackEngineDelegate, MPCPlaybackEngineEventObserving;
@class NSString, MPCPlaybackIntent, MPProtocolProxy, _MPCAVController, _MPCMediaRemotePublisher, _MPCReportingController, _MPCLeaseManager, UIView, MPCPlayerPath;

@interface MPCPlaybackEngine : NSObject {

	BOOL _pictureInPictureSupported;
	BOOL _videoSupported;
	BOOL _stateRestorationSupported;
	BOOL _scheduledPlaybackStatePreservation;
	BOOL _systemMusicApplication;
	NSString* _playerID;
	id<MPCPlaybackEngineDelegate> _delegate;
	MPCPlaybackIntent* _fallbackPlaybackIntent;
	MPProtocolProxy*<MPCPlaybackEngineEventObserving> _eventObserver;
	_MPCAVController* _implementation;
	_MPCMediaRemotePublisher* _mediaRemotePublisher;
	_MPCReportingController* _reportingController;
	_MPCLeaseManager* _leaseManager;

}

@property (assign,getter=hasScheduledPlaybackStatePreservation,nonatomic) BOOL scheduledPlaybackStatePreservation;              //@synthesize scheduledPlaybackStatePreservation=_scheduledPlaybackStatePreservation - In the implementation block
@property (nonatomic,readonly) MPProtocolProxy*<MPCPlaybackEngineEventObserving> eventObserver;                                 //@synthesize eventObserver=_eventObserver - In the implementation block
@property (nonatomic,readonly) _MPCAVController * implementation;                                                               //@synthesize implementation=_implementation - In the implementation block
@property (nonatomic,readonly) _MPCMediaRemotePublisher * mediaRemotePublisher;                                                 //@synthesize mediaRemotePublisher=_mediaRemotePublisher - In the implementation block
@property (nonatomic,readonly) _MPCReportingController * reportingController;                                                   //@synthesize reportingController=_reportingController - In the implementation block
@property (nonatomic,readonly) _MPCLeaseManager * leaseManager;                                                                 //@synthesize leaseManager=_leaseManager - In the implementation block
@property (nonatomic,readonly) UIView * videoView; 
@property (assign,getter=isSystemMusicApplication,nonatomic) BOOL systemMusicApplication;                                       //@synthesize systemMusicApplication=_systemMusicApplication - In the implementation block
@property (nonatomic,readonly) MPCPlayerPath * playerPath; 
@property (nonatomic,copy,readonly) NSString * playerID;                                                                        //@synthesize playerID=_playerID - In the implementation block
@property (assign,nonatomic,__weak) id<MPCPlaybackEngineDelegate> delegate;                                                     //@synthesize delegate=_delegate - In the implementation block
@property (assign,getter=isPictureInPictureSupported,nonatomic) BOOL pictureInPictureSupported;                                 //@synthesize pictureInPictureSupported=_pictureInPictureSupported - In the implementation block
@property (assign,getter=isVideoSupported,nonatomic) BOOL videoSupported;                                                       //@synthesize videoSupported=_videoSupported - In the implementation block
@property (nonatomic,retain) MPCPlaybackIntent * fallbackPlaybackIntent;                                                        //@synthesize fallbackPlaybackIntent=_fallbackPlaybackIntent - In the implementation block
@property (assign,getter=isStateRestorationSupported,nonatomic) BOOL stateRestorationSupported;                                 //@synthesize stateRestorationSupported=_stateRestorationSupported - In the implementation block
+(void)preheatPlayback;
-(id<MPCPlaybackEngineDelegate>)delegate;
-(void)setDelegate:(id<MPCPlaybackEngineDelegate>)arg1 ;
-(void)start;
-(UIView *)videoView;
-(BOOL)isPictureInPictureSupported;
-(id)initWithPlayerID:(id)arg1 ;
-(MPCPlayerPath *)playerPath;
-(NSString *)playerID;
-(_MPCAVController *)implementation;
-(void)addEngineObserver:(id)arg1 ;
-(_MPCReportingController *)reportingController;
-(MPCPlaybackIntent *)fallbackPlaybackIntent;
-(BOOL)isSystemMusicApplication;
-(_MPCLeaseManager *)leaseManager;
-(void)addSupportedSpecializedQueueIdentifier:(id)arg1 localizedName:(id)arg2 queueType:(long long)arg3 queueParameters:(id)arg4 ;
-(void)removeSupportedSpecializedQueueIdentifier:(id)arg1 ;
-(void)_initializePlaybackStack;
-(void)schedulePlaybackStatePreservation;
-(void)setPictureInPictureSupported:(BOOL)arg1 ;
-(void)setFallbackPlaybackIntent:(MPCPlaybackIntent *)arg1 ;
-(MPProtocolProxy*<MPCPlaybackEngineEventObserving>)eventObserver;
-(void)_restorePlaybackStateWithCompletion:(/*^block*/id)arg1 ;
-(void)reportUserSeekFromTime:(double)arg1 toTime:(double)arg2 ;
-(BOOL)hasScheduledPlaybackStatePreservation;
-(void)setScheduledPlaybackStatePreservation:(BOOL)arg1 ;
-(void)_preservePlaybackStateImmediately;
-(BOOL)isStateRestorationSupported;
-(void)restoreStateWithCompletion:(/*^block*/id)arg1 ;
-(void)setVideoSupported:(BOOL)arg1 ;
-(void)removeEngineObserver:(id)arg1 ;
-(void)setSystemMusicApplication:(BOOL)arg1 ;
-(void)setStateRestorationSupported:(BOOL)arg1 ;
-(_MPCMediaRemotePublisher *)mediaRemotePublisher;
-(void)becomeActive;
-(BOOL)isVideoSupported;
@end

