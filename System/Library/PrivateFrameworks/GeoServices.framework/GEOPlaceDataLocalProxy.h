/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:21:27 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <GeoServices/GeoServices-Structs.h>
#import <libobjc.A.dylib/GEOPlaceDataProxy.h>

@protocol OS_dispatch_queue;
@class NSObject, NSMapTable, GEOPlaceDataCacheRegister, GEOPhoneNumberMUIDMapper, NSMutableSet, NSMutableArray, NSMutableOrderedSet, NSString;

@interface GEOPlaceDataLocalProxy : NSObject <GEOPlaceDataProxy> {

	NSObject*<OS_dispatch_queue> _accessSerialQueue;
	NSMapTable* _pendingRequests;
	GEOPlaceDataCacheRegister* _cacheRegister;
	GEOPhoneNumberMUIDMapper* _phoneNumberMapper;
	NSMutableSet* _requestsInProgress;
	NSMutableArray* _requestHandlersPending;
	NSMutableOrderedSet* _placeHashes;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)cancelRequest:(id)arg1 ;
-(void)requestIdentifiers:(id)arg1 resultProviderID:(int)arg2 traits:(id)arg3 options:(unsigned long long)arg4 auditToken:(id)arg5 requesterHandler:(/*^block*/id)arg6 ;
-(void)requestComponentsFromNetwork:(id)arg1 identifier:(id)arg2 resultProviderID:(int)arg3 traits:(id)arg4 auditToken:(id)arg5 requesterHandler:(/*^block*/id)arg6 ;
-(void)requestPhoneNumbers:(id)arg1 allowCellularDataForLookup:(BOOL)arg2 traits:(id)arg3 auditToken:(id)arg4 requesterHandler:(/*^block*/id)arg5 ;
-(void)fetchAllCacheEntriesWithRequesterHandler:(/*^block*/id)arg1 ;
-(void)trackPlaceData:(id)arg1 ;
-(void)performPlaceDataRequest:(id)arg1 traits:(id)arg2 cachePolicy:(unsigned long long)arg3 timeout:(double)arg4 auditToken:(id)arg5 networkActivity:(/*^block*/id)arg6 requesterHandler:(/*^block*/id)arg7 ;
-(void)calculateFreeableSpaceWithHandler:(/*^block*/id)arg1 ;
-(void)shrinkBySize:(unsigned long long)arg1 finished:(/*^block*/id)arg2 ;
-(id)cacheRegister;
-(void)startRequest:(id)arg1 traits:(id)arg2 timeout:(double)arg3 auditToken:(id)arg4 finished:(/*^block*/id)arg5 networkActivity:(/*^block*/id)arg6 error:(/*^block*/id)arg7 ;
-(void)_requestIdentifiersFromNetwork:(id)arg1 resultProviderID:(int)arg2 traits:(id)arg3 auditToken:(id)arg4 finished:(/*^block*/id)arg5 error:(/*^block*/id)arg6 ;
-(id)_placeResponseFromPlaces:(id)arg1 ;
-(long long)_invalidationStateForPlace:(id)arg1 fromRequest:(id)arg2 ;
-(void)_trackPlaceData:(id)arg1 forRequest:(id)arg2 ;
-(BOOL)_populateKey:(GEOTileKey*)arg1 request:(id)arg2 ;
-(id)_cachedPlacedForRequest:(id)arg1 ;
-(void)_cachePlaceData:(id)arg1 forKey:(GEOTileKey)arg2 shouldOptimizeWritesToDisk:(BOOL)arg3 ;
-(void)_cachePlaceData:(id)arg1 forKey:(GEOTileKey)arg2 shouldOptimizeWritesToDisk:(BOOL)arg3 shouldUseDefaultProviderId:(BOOL)arg4 ;
-(void)_resetPhoneNumberMapper;
-(void)_callHistoryRecentsClearedObserver:(id)arg1 ;
-(void)_privacyAndLocationSettingsResetObserver:(id)arg1 ;
-(id)init;
-(void)dealloc;
-(void)clearCache;
@end

