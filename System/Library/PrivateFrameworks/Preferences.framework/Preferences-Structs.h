/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:26:09 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/Preferences.framework/Preferences
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

typedef struct _NSZone* NSZoneRef;

typedef struct CGPoint {
	double x;
	double y;
} CGPoint;

typedef struct CGSize {
	double width;
	double height;
} CGSize;

typedef struct __SCPreferences* SCPreferencesRef;

typedef struct __CFString* CFStringRef;

typedef struct __SCDynamicStore* SCDynamicStoreRef;

typedef struct __CFRunLoopSource* CFRunLoopSourceRef;

typedef struct __SCNetworkInterface* SCNetworkInterfaceRef;

typedef struct {
	[4 columns];
} SCD_Struct_PS8;

typedef struct __FSEventStream* FSEventStreamRef;

typedef struct _compressed_pair<InstanceInfo *, std::__1::allocator<InstanceInfo> > {
	InstanceInfo __value_;
} compressed_pair<InstanceInfo *, std::__1::allocator<InstanceInfo> >;

typedef struct vector<InstanceInfo, std::__1::allocator<InstanceInfo> > {
	InstanceInfo __begin_;
	InstanceInfo __end_;
	compressed_pair<InstanceInfo *, std::__1::allocator<InstanceInfo> > __end_cap_;
} vector<InstanceInfo, std::__1::allocator<InstanceInfo> >;

typedef struct NSRange {
	unsigned long long location;
	unsigned long long length;
} NSRange;

typedef struct __CFBundle* CFBundleRef;

typedef struct __CFStringTokenizer* CFStringTokenizerRef;

