/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:29:14 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/WebKitLegacy.framework/WebKitLegacy
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

typedef struct CGPoint {
	double x;
	double y;
} CGPoint;

typedef struct WKQuad {
	CGPoint p1;
	CGPoint p2;
	CGPoint p3;
	CGPoint p4;
} WKQuad;

typedef struct OpaqueJSContext* OpaqueJSContextRef;

typedef struct OpaqueJSValue* OpaqueJSValueRef;

typedef struct __CTFont* CTFontRef;

typedef struct RootObject* RootObjectRef;

typedef struct _NSZone* NSZoneRef;

typedef struct DOMObjectInternal* DOMObjectInternalRef;

typedef struct CGImage* CGImageRef;

typedef struct CGColor* CGColorRef;

typedef struct RefPtr<WebCore::LegacyWebArchive, WTF::DumbPtrTraits<WebCore::LegacyWebArchive> > {
	LegacyWebArchive m_ptr;
} RefPtr<WebCore::LegacyWebArchive, WTF::DumbPtrTraits<WebCore::LegacyWebArchive> >;

typedef struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > {
	StringImpl m_ptr;
} RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> >;

typedef struct String {
	RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl> > m_impl;
} String;

typedef struct Vector<WebCore::MimeClassInfo, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> {
	MimeClassInfo m_buffer;
	unsigned m_capacity;
	unsigned m_size;
	unsigned m_mask;
} Vector<WebCore::MimeClassInfo, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc>;

typedef struct PluginInfo {
	String name;
	String file;
	String desc;
	Vector<WebCore::MimeClassInfo, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> mimes;
	BOOL isApplicationPlugin;
	unsigned char clientLoadPolicy;
} PluginInfo;

typedef struct RetainPtr<__CFBundle *> {
	void m_ptr;
} RetainPtr<__CFBundle *>;

typedef struct RefPtr<WebCore::DeviceOrientationData, WTF::DumbPtrTraits<WebCore::DeviceOrientationData> > {
	DeviceOrientationData m_ptr;
} RefPtr<WebCore::DeviceOrientationData, WTF::DumbPtrTraits<WebCore::DeviceOrientationData> >;

typedef struct _compressed_pair<WebCore::DeviceOrientationClientMock *, std::__1::default_delete<WebCore::DeviceOrientationClientMock> > {
	DeviceOrientationClientMock __value_;
} compressed_pair<WebCore::DeviceOrientationClientMock *, std::__1::default_delete<WebCore::DeviceOrientationClientMock> >;

typedef struct unique_ptr<WebCore::DeviceOrientationClientMock, std::__1::default_delete<WebCore::DeviceOrientationClientMock> > {
	compressed_pair<WebCore::DeviceOrientationClientMock *, std::__1::default_delete<WebCore::DeviceOrientationClientMock> > __ptr_;
} unique_ptr<WebCore::DeviceOrientationClientMock, std::__1::default_delete<WebCore::DeviceOrientationClientMock> >;

typedef struct DeviceOrientationController* DeviceOrientationControllerRef;

typedef struct RefPtr<WebCore::UndoStep, WTF::DumbPtrTraits<WebCore::UndoStep> > {
	UndoStep m_ptr;
} RefPtr<WebCore::UndoStep, WTF::DumbPtrTraits<WebCore::UndoStep> >;

typedef struct _compressed_pair<WebScriptDebugger *, std::__1::default_delete<WebScriptDebugger> > {
	WebScriptDebugger __value_;
} compressed_pair<WebScriptDebugger *, std::__1::default_delete<WebScriptDebugger> >;

typedef struct unique_ptr<WebScriptDebugger, std::__1::default_delete<WebScriptDebugger> > {
	compressed_pair<WebScriptDebugger *, std::__1::default_delete<WebScriptDebugger> > __ptr_;
} unique_ptr<WebScriptDebugger, std::__1::default_delete<WebScriptDebugger> >;

typedef struct RetainPtr<NSString> {
	void m_ptr;
} RetainPtr<NSString>;

typedef struct CGContext* CGContextRef;

typedef struct RefPtr<WebCore::Frame, WTF::DumbPtrTraits<WebCore::Frame> > {
	Frame m_ptr;
} RefPtr<WebCore::Frame, WTF::DumbPtrTraits<WebCore::Frame> >;

typedef struct _compressed_pair<WTF::Function<void (WebCore::PolicyAction)>::CallableWrapperBase *, std::__1::default_delete<WTF::Function<void (WebCore::PolicyAction)>::CallableWrapperBase> > {
	CallableWrapperBase __value_;
} compressed_pair<WTF::Function<void (WebCore::PolicyAction)>::CallableWrapperBase *, std::__1::default_delete<WTF::Function<void (WebCore::PolicyAction)>::CallableWrapperBase> >;

typedef struct unique_ptr<WTF::Function<void (WebCore::PolicyAction)>::CallableWrapperBase, std::__1::default_delete<WTF::Function<void (WebCore::PolicyAction)>::CallableWrapperBase> > {
	compressed_pair<WTF::Function<void (WebCore::PolicyAction)>::CallableWrapperBase *, std::__1::default_delete<WTF::Function<void (WebCore::PolicyAction)>::CallableWrapperBase> > __ptr_;
} unique_ptr<WTF::Function<void (WebCore::PolicyAction)>::CallableWrapperBase, std::__1::default_delete<WTF::Function<void (WebCore::PolicyAction)>::CallableWrapperBase> >;

typedef struct Function<void (WebCore::PolicyAction)> {
	unique_ptr<WTF::Function<void (WebCore::PolicyAction)>::CallableWrapperBase, std::__1::default_delete<WTF::Function<void (WebCore::PolicyAction)>::CallableWrapperBase> > m_callableWrapper;
} Function<void (WebCore::PolicyAction)>;

typedef struct RetainPtr<NSURL> {
	void m_ptr;
} RetainPtr<NSURL>;

typedef struct RefPtr<WebCore::Geolocation, WTF::DumbPtrTraits<WebCore::Geolocation> > {
	Geolocation m_ptr;
} RefPtr<WebCore::Geolocation, WTF::DumbPtrTraits<WebCore::Geolocation> >;

typedef struct RetainPtr<WebView *> {
	void m_ptr;
} RetainPtr<WebView *>;

typedef struct RetainPtr<CLLocationManager> {
	void m_ptr;
} RetainPtr<CLLocationManager>;

typedef struct optional<double> {
	BOOL init_;
	constexpr_storage_t<double> storage_;
	unsigned char dummy_;
	d) value_;
} optional<double>;

typedef struct GeolocationPosition {
	double timestamp;
	double latitude;
	double longitude;
	double accuracy;
	optional<double> altitude;
	optional<double> altitudeAccuracy;
	optional<double> heading;
	optional<double> speed;
	optional<double> floorLevel;
} GeolocationPosition;

typedef struct RetainPtr<WebGeolocationCoreLocationProvider> {
	void m_ptr;
} RetainPtr<WebGeolocationCoreLocationProvider>;

typedef struct RetainPtr<_WebCoreLocationUpdateThreadingProxy> {
	void m_ptr;
} RetainPtr<_WebCoreLocationUpdateThreadingProxy>;

typedef struct HashTable<WTF::RetainPtr<WebView>, WTF::KeyValuePair<WTF::RetainPtr<WebView>, WTF::RetainPtr<id<WebGeolocationProviderInitializationListener> > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::RetainPtr<WebView>, WTF::RetainPtr<id<WebGeolocationProviderInitializationListener> > > >, WTF::PtrHash<WTF::RetainPtr<WebView> >, WTF::HashMap<WTF::RetainPtr<WebView>, WTF::RetainPtr<id<WebGeolocationProviderInitializationListener> >, WTF::PtrHash<WTF::RetainPtr<WebView> >, WTF::HashTraits<WTF::RetainPtr<WebView> >, WTF::HashTraits<WTF::RetainPtr<id<WebGeolocationProviderInitializationListener> > > >::KeyValuePairTraits, WTF::HashTraits<WTF::RetainPtr<WebView> > > {
	KeyValuePair<WTF::RetainPtr<WebView>, WTF::RetainPtr<id<WebGeolocationProviderInitializationListener> > > m_table;
	unsigned m_tableSize;
	unsigned m_tableSizeMask;
	unsigned m_keyCount;
	unsigned m_deletedCount;
} HashTable<WTF::RetainPtr<WebView>, WTF::KeyValuePair<WTF::RetainPtr<WebView>, WTF::RetainPtr<id<WebGeolocationProviderInitializationListener> > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::RetainPtr<WebView>, WTF::RetainPtr<id<WebGeolocationProviderInitializationListener> > > >, WTF::PtrHash<WTF::RetainPtr<WebView> >, WTF::HashMap<WTF::RetainPtr<WebView>, WTF::RetainPtr<id<WebGeolocationProviderInitializationListener> >, WTF::PtrHash<WTF::RetainPtr<WebView> >, WTF::HashTraits<WTF::RetainPtr<WebView> >, WTF::HashTraits<WTF::RetainPtr<id<WebGeolocationProviderInitializationListener> > > >::KeyValuePairTraits, WTF::HashTraits<WTF::RetainPtr<WebView> > >;

typedef struct HashMap<WTF::RetainPtr<WebView>, WTF::RetainPtr<id<WebGeolocationProviderInitializationListener> >, WTF::PtrHash<WTF::RetainPtr<WebView> >, WTF::HashTraits<WTF::RetainPtr<WebView> >, WTF::HashTraits<WTF::RetainPtr<id<WebGeolocationProviderInitializationListener> > > > {
	HashTable<WTF::RetainPtr<WebView>, WTF::KeyValuePair<WTF::RetainPtr<WebView>, WTF::RetainPtr<id<WebGeolocationProviderInitializationListener> > >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::RetainPtr<WebView>, WTF::RetainPtr<id<WebGeolocationProviderInitializationListener> > > >, WTF::PtrHash<WTF::RetainPtr<WebView> >, WTF::HashMap<WTF::RetainPtr<WebView>, WTF::RetainPtr<id<WebGeolocationProviderInitializationListener> >, WTF::PtrHash<WTF::RetainPtr<WebView> >, WTF::HashTraits<WTF::RetainPtr<WebView> >, WTF::HashTraits<WTF::RetainPtr<id<WebGeolocationProviderInitializationListener> > > >::KeyValuePairTraits, WTF::HashTraits<WTF::RetainPtr<WebView> > > m_impl;
} HashMap<WTF::RetainPtr<WebView>, WTF::RetainPtr<id<WebGeolocationProviderInitializationListener> >, WTF::PtrHash<WTF::RetainPtr<WebView> >, WTF::HashTraits<WTF::RetainPtr<WebView> >, WTF::HashTraits<WTF::RetainPtr<id<WebGeolocationProviderInitializationListener> > > >;

typedef struct HashTable<WebView *, WebView *, WTF::IdentityExtractor, WTF::PtrHash<WebView *>, WTF::HashTraits<WebView *>, WTF::HashTraits<WebView *> > {
	id m_table;
	unsigned m_tableSize;
	unsigned m_tableSizeMask;
	unsigned m_keyCount;
	unsigned m_deletedCount;
} HashTable<WebView *, WebView *, WTF::IdentityExtractor, WTF::PtrHash<WebView *>, WTF::HashTraits<WebView *>, WTF::HashTraits<WebView *> >;

typedef struct HashSet<WebView *, WTF::PtrHash<WebView *>, WTF::HashTraits<WebView *> > {
	HashTable<WebView *, WebView *, WTF::IdentityExtractor, WTF::PtrHash<WebView *>, WTF::HashTraits<WebView *>, WTF::HashTraits<WebView *> > m_impl;
} HashSet<WebView *, WTF::PtrHash<WebView *>, WTF::HashTraits<WebView *> >;

typedef struct RetainPtr<NSTimer> {
	void m_ptr;
} RetainPtr<NSTimer>;

typedef struct RetainPtr<WebGeolocationPosition> {
	void m_ptr;
} RetainPtr<WebGeolocationPosition>;

typedef struct _compressed_pair<WTF::HashMap<long long, WTF::RetainPtr<NSMutableArray>, WTF::IntHash<unsigned long long>, WTF::HashTraits<long long>, WTF::HashTraits<WTF::RetainPtr<NSMutableArray> > > *, std::__1::default_delete<WTF::HashMap<long long, WTF::RetainPtr<NSMutableArray>, WTF::IntHash<unsigned long long>, WTF::HashTraits<long long>, WTF::HashTraits<WTF::RetainPtr<NSMutableArray> > > > > {
	HashMap<long long, WTF::RetainPtr<NSMutableArray>, WTF::IntHash<unsigned long long>, WTF::HashTraits<long long>, WTF::HashTraits<WTF::RetainPtr<NSMutableArray> > > __value_;
} compressed_pair<WTF::HashMap<long long, WTF::RetainPtr<NSMutableArray>, WTF::IntHash<unsigned long long>, WTF::HashTraits<long long>, WTF::HashTraits<WTF::RetainPtr<NSMutableArray> > > *, std::__1::default_delete<WTF::HashMap<long long, WTF::RetainPtr<NSMutableArray>, WTF::IntHash<unsigned long long>, WTF::HashTraits<long long>, WTF::HashTraits<WTF::RetainPtr<NSMutableArray> > > > >;

typedef struct unique_ptr<WTF::HashMap<long long, WTF::RetainPtr<NSMutableArray>, WTF::IntHash<unsigned long long>, WTF::HashTraits<long long>, WTF::HashTraits<WTF::RetainPtr<NSMutableArray> > >, std::__1::default_delete<WTF::HashMap<long long, WTF::RetainPtr<NSMutableArray>, WTF::IntHash<unsigned long long>, WTF::HashTraits<long long>, WTF::HashTraits<WTF::RetainPtr<NSMutableArray> > > > > {
	compressed_pair<WTF::HashMap<long long, WTF::RetainPtr<NSMutableArray>, WTF::IntHash<unsigned long long>, WTF::HashTraits<long long>, WTF::HashTraits<WTF::RetainPtr<NSMutableArray> > > *, std::__1::default_delete<WTF::HashMap<long long, WTF::RetainPtr<NSMutableArray>, WTF::IntHash<unsigned long long>, WTF::HashTraits<long long>, WTF::HashTraits<WTF::RetainPtr<NSMutableArray> > > > > __ptr_;
} unique_ptr<WTF::HashMap<long long, WTF::RetainPtr<NSMutableArray>, WTF::IntHash<unsigned long long>, WTF::HashTraits<long long>, WTF::HashTraits<WTF::RetainPtr<NSMutableArray> > >, std::__1::default_delete<WTF::HashMap<long long, WTF::RetainPtr<NSMutableArray>, WTF::IntHash<unsigned long long>, WTF::HashTraits<long long>, WTF::HashTraits<WTF::RetainPtr<NSMutableArray> > > > >;

typedef struct RefPtr<WebCore::HistoryItem, WTF::DumbPtrTraits<WebCore::HistoryItem> > {
	HistoryItem m_ptr;
} RefPtr<WebCore::HistoryItem, WTF::DumbPtrTraits<WebCore::HistoryItem> >;

typedef struct _compressed_pair<WTF::Vector<WTF::String, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> *, std::__1::default_delete<WTF::Vector<WTF::String, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> > > {
	Vector<WTF::String, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> __value_;
} compressed_pair<WTF::Vector<WTF::String, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> *, std::__1::default_delete<WTF::Vector<WTF::String, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> > >;

typedef struct unique_ptr<WTF::Vector<WTF::String, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc>, std::__1::default_delete<WTF::Vector<WTF::String, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> > > {
	compressed_pair<WTF::Vector<WTF::String, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> *, std::__1::default_delete<WTF::Vector<WTF::String, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> > > __ptr_;
} unique_ptr<WTF::Vector<WTF::String, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc>, std::__1::default_delete<WTF::Vector<WTF::String, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> > >;

typedef struct RetainPtr<WebEvent> {
	void m_ptr;
} RetainPtr<WebEvent>;

typedef struct RetainPtr<WebPluginController> {
	void m_ptr;
} RetainPtr<WebPluginController>;

typedef struct RetainPtr<NSArray> {
	void m_ptr;
} RetainPtr<NSArray>;

typedef struct RetainPtr<WebDataSource> {
	void m_ptr;
} RetainPtr<WebDataSource>;

typedef struct RefPtr<WebCore::FileChooser, WTF::DumbPtrTraits<WebCore::FileChooser> > {
	FileChooser m_ptr;
} RefPtr<WebCore::FileChooser, WTF::DumbPtrTraits<WebCore::FileChooser> >;

typedef struct CGPDFDocument* CGPDFDocumentRef;

typedef struct CGPDFPage* CGPDFPageRef;

typedef struct CGSize {
	double width;
	double height;
} CGSize;

typedef struct RefPtr<WebCore::ArchiveResource, WTF::DumbPtrTraits<WebCore::ArchiveResource> > {
	ArchiveResource m_ptr;
} RefPtr<WebCore::ArchiveResource, WTF::DumbPtrTraits<WebCore::ArchiveResource> >;

typedef struct {
	int payload;
	int tag;
} SCD_Struct_We57;

typedef struct JSValue {
	EncodedValueDescriptor u;
	long long asInt64;
	JSCell ptr;
	SCD_Struct_We57) asBits;
} JSValue;

typedef struct RefPtr<WebCore::DOMWrapperWorld, WTF::DumbPtrTraits<WebCore::DOMWrapperWorld> > {
	DOMWrapperWorld m_ptr;
} RefPtr<WebCore::DOMWrapperWorld, WTF::DumbPtrTraits<WebCore::DOMWrapperWorld> >;

typedef struct CGRect {
	CGPoint origin;
	CGSize size;
} CGRect;

typedef struct _compressed_pair<WebCore::TextIterator *, std::__1::default_delete<WebCore::TextIterator> > {
	TextIterator __value_;
} compressed_pair<WebCore::TextIterator *, std::__1::default_delete<WebCore::TextIterator> >;

typedef struct unique_ptr<WebCore::TextIterator, std::__1::default_delete<WebCore::TextIterator> > {
	compressed_pair<WebCore::TextIterator *, std::__1::default_delete<WebCore::TextIterator> > __ptr_;
} unique_ptr<WebCore::TextIterator, std::__1::default_delete<WebCore::TextIterator> >;

typedef struct Vector<unsigned short, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc> {
	unsigned short m_buffer;
	unsigned m_capacity;
	unsigned m_size;
	unsigned m_mask;
} Vector<unsigned short, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc>;

typedef struct UserContentURLPattern {
	BOOL m_invalid;
	String m_scheme;
	String m_host;
	String m_path;
	BOOL m_matchSubdomains;
} UserContentURLPattern;

typedef struct RefPtr<WebCore::UserMediaRequest, WTF::DumbPtrTraits<WebCore::UserMediaRequest> > {
	UserMediaRequest m_ptr;
} RefPtr<WebCore::UserMediaRequest, WTF::DumbPtrTraits<WebCore::UserMediaRequest> >;

typedef struct RefPtr<WebCore::MediaDevicesEnumerationRequest, WTF::DumbPtrTraits<WebCore::MediaDevicesEnumerationRequest> > {
	MediaDevicesEnumerationRequest m_ptr;
} RefPtr<WebCore::MediaDevicesEnumerationRequest, WTF::DumbPtrTraits<WebCore::MediaDevicesEnumerationRequest> >;

typedef struct {
	unsigned field1[8];
} SCD_Struct_We67;

typedef struct Page* PageRef;

typedef struct RefPtr<WebViewGroup, WTF::DumbPtrTraits<WebViewGroup> > {
	WebViewGroup m_ptr;
} RefPtr<WebViewGroup, WTF::DumbPtrTraits<WebViewGroup> >;

typedef struct RefPtr<WebCore::ValidationBubble, WTF::DumbPtrTraits<WebCore::ValidationBubble> > {
	ValidationBubble m_ptr;
} RefPtr<WebCore::ValidationBubble, WTF::DumbPtrTraits<WebCore::ValidationBubble> >;

typedef struct WebResourceDelegateImplementationCache {
	/*function pointer*/void* didReceiveAuthenticationChallengeFunc;
	/*function pointer*/void* canAuthenticateAgainstProtectionSpaceFunc;
	/*function pointer*/void* connectionPropertiesFunc;
	/*function pointer*/void* webThreadDidFinishLoadingFromDataSourceFunc;
	/*function pointer*/void* webThreadDidFailLoadingWithErrorFromDataSourceFunc;
	/*function pointer*/void* webThreadIdentifierForRequestFunc;
	/*function pointer*/void* webThreadDidLoadResourceFromMemoryCacheFunc;
	/*function pointer*/void* webThreadWillSendRequestFunc;
	/*function pointer*/void* webThreadDidReceiveResponseFunc;
	/*function pointer*/void* webThreadDidReceiveContentLengthFunc;
	/*function pointer*/void* webThreadWillCacheResponseFunc;
	/*function pointer*/void* identifierForRequestFunc;
	/*function pointer*/void* willSendRequestFunc;
	/*function pointer*/void* didReceiveResponseFunc;
	/*function pointer*/void* didReceiveContentLengthFunc;
	/*function pointer*/void* didFinishLoadingFromDataSourceFunc;
	/*function pointer*/void* didFailLoadingWithErrorFromDataSourceFunc;
	/*function pointer*/void* didLoadResourceFromMemoryCacheFunc;
	/*function pointer*/void* willCacheResponseFunc;
	/*function pointer*/void* plugInFailedWithErrorFunc;
	/*function pointer*/void* shouldUseCredentialStorageFunc;
	/*function pointer*/void* shouldPaintBrokenImageForURLFunc;
} WebResourceDelegateImplementationCache;

typedef struct WebFrameLoadDelegateImplementationCache {
	/*function pointer*/void* didCreateJavaScriptContextForFrameFunc;
	/*function pointer*/void* didClearWindowObjectForFrameFunc;
	/*function pointer*/void* didClearWindowObjectForFrameInScriptWorldFunc;
	/*function pointer*/void* didClearInspectorWindowObjectForFrameFunc;
	/*function pointer*/void* windowScriptObjectAvailableFunc;
	/*function pointer*/void* didHandleOnloadEventsForFrameFunc;
	/*function pointer*/void* didReceiveServerRedirectForProvisionalLoadForFrameFunc;
	/*function pointer*/void* didCancelClientRedirectForFrameFunc;
	/*function pointer*/void* willPerformClientRedirectToURLDelayFireDateForFrameFunc;
	/*function pointer*/void* didChangeLocationWithinPageForFrameFunc;
	/*function pointer*/void* didPushStateWithinPageForFrameFunc;
	/*function pointer*/void* didReplaceStateWithinPageForFrameFunc;
	/*function pointer*/void* didPopStateWithinPageForFrameFunc;
	/*function pointer*/void* willCloseFrameFunc;
	/*function pointer*/void* didStartProvisionalLoadForFrameFunc;
	/*function pointer*/void* didReceiveTitleForFrameFunc;
	/*function pointer*/void* didCommitLoadForFrameFunc;
	/*function pointer*/void* didFailProvisionalLoadWithErrorForFrameFunc;
	/*function pointer*/void* didFailLoadWithErrorForFrameFunc;
	/*function pointer*/void* didFinishLoadForFrameFunc;
	/*function pointer*/void* didFirstLayoutInFrameFunc;
	/*function pointer*/void* didFirstVisuallyNonEmptyLayoutInFrameFunc;
	/*function pointer*/void* didLayoutFunc;
	/*function pointer*/void* didReceiveIconForFrameFunc;
	/*function pointer*/void* didFinishDocumentLoadForFrameFunc;
	/*function pointer*/void* didDisplayInsecureContentFunc;
	/*function pointer*/void* didRunInsecureContentFunc;
	/*function pointer*/void* didDetectXSSFunc;
	/*function pointer*/void* didRemoveFrameFromHierarchyFunc;
	/*function pointer*/void* webThreadDidLayoutFunc;
} WebFrameLoadDelegateImplementationCache;

typedef struct WebScriptDebugDelegateImplementationCache {
	BOOL didParseSourceExpectsBaseLineNumber;
	BOOL exceptionWasRaisedExpectsHasHandlerFlag;
	/*function pointer*/void* didParseSourceFunc;
	/*function pointer*/void* failedToParseSourceFunc;
	/*function pointer*/void* exceptionWasRaisedFunc;
} WebScriptDebugDelegateImplementationCache;

typedef struct WebHistoryDelegateImplementationCache {
	/*function pointer*/void* navigatedFunc;
	/*function pointer*/void* clientRedirectFunc;
	/*function pointer*/void* serverRedirectFunc;
	/*function pointer*/void* deprecatedSetTitleFunc;
	/*function pointer*/void* setTitleFunc;
	/*function pointer*/void* populateVisitedLinksFunc;
} WebHistoryDelegateImplementationCache;

typedef struct atomic<unsigned char> {
	AC __a_;
} atomic<unsigned char>;

typedef struct Atomic<unsigned char> {
	atomic<unsigned char> value;
} Atomic<unsigned char>;

typedef struct Lock {
	Atomic<unsigned char> m_byte;
} Lock;

typedef struct RetainPtr<WebUITextIndicatorData> {
	void m_ptr;
} RetainPtr<WebUITextIndicatorData>;

typedef struct HashTable<unsigned long, WTF::KeyValuePair<unsigned long, WTF::RetainPtr<id> >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<unsigned long, WTF::RetainPtr<id> > >, WTF::IntHash<unsigned long>, WTF::HashMap<unsigned long, WTF::RetainPtr<id>, WTF::IntHash<unsigned long>, WTF::HashTraits<unsigned long>, WTF::HashTraits<WTF::RetainPtr<id> > >::KeyValuePairTraits, WTF::HashTraits<unsigned long> > {
	KeyValuePair<unsigned long, WTF::RetainPtr<id> > m_table;
	unsigned m_tableSize;
	unsigned m_tableSizeMask;
	unsigned m_keyCount;
	unsigned m_deletedCount;
} HashTable<unsigned long, WTF::KeyValuePair<unsigned long, WTF::RetainPtr<id> >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<unsigned long, WTF::RetainPtr<id> > >, WTF::IntHash<unsigned long>, WTF::HashMap<unsigned long, WTF::RetainPtr<id>, WTF::IntHash<unsigned long>, WTF::HashTraits<unsigned long>, WTF::HashTraits<WTF::RetainPtr<id> > >::KeyValuePairTraits, WTF::HashTraits<unsigned long> >;

typedef struct HashMap<unsigned long, WTF::RetainPtr<id>, WTF::IntHash<unsigned long>, WTF::HashTraits<unsigned long>, WTF::HashTraits<WTF::RetainPtr<id> > > {
	HashTable<unsigned long, WTF::KeyValuePair<unsigned long, WTF::RetainPtr<id> >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<unsigned long, WTF::RetainPtr<id> > >, WTF::IntHash<unsigned long>, WTF::HashMap<unsigned long, WTF::RetainPtr<id>, WTF::IntHash<unsigned long>, WTF::HashTraits<unsigned long>, WTF::HashTraits<WTF::RetainPtr<id> > >::KeyValuePairTraits, WTF::HashTraits<unsigned long> > m_impl;
} HashMap<unsigned long, WTF::RetainPtr<id>, WTF::IntHash<unsigned long>, WTF::HashTraits<unsigned long>, WTF::HashTraits<WTF::RetainPtr<id> > >;

typedef struct RefPtr<LayerFlushController, WTF::DumbPtrTraits<LayerFlushController> > {
	LayerFlushController m_ptr;
} RefPtr<LayerFlushController, WTF::DumbPtrTraits<LayerFlushController> >;

typedef struct RetainPtr<NSData> {
	void m_ptr;
} RetainPtr<NSData>;

typedef struct WebObjectInternal* WebObjectInternalRef;

