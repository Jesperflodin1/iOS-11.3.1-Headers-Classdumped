/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:25:19 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/PASampling.framework/PASampling
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <PASampling/PASampling-Structs.h>
#import <libobjc.A.dylib/NSSecureCoding.h>

@class NSMutableDictionary, NSMutableArray, PAGenealogyTracker, PAMountStatusTracker, PAWSUpdateDataStore, NSMutableSet, PABinaryLocator, PASymbolDataStore, NSString, PASampleTimeInsensitiveTaskData, NSDictionary, NSSet, PAImageInfo, NSArray;

@interface PASampleTimeSeriesDataStore : NSObject <NSSecureCoding> {

	NSMutableDictionary* _timeInsensitiveTaskDataDict;
	NSMutableArray* _timeSensitiveSampleDataArray;
	double _startMachTimestamp;
	double _endMachTimestamp;
	double _startWallTimestamp;
	double _endWallTimestamp;
	double _lastWakeTime;
	BOOL _sanitizePaths;
	BOOL _omitThirdPartyProcessStacks;
	BOOL _omitSensitiveStrings;
	NSMutableArray* _fanSpeedArray;
	PAGenealogyTracker* _genealogyTracker;
	PAMountStatusTracker* _mountStatusTracker;
	PAWSUpdateDataStore* _wsDataStore;
	NSMutableSet* _rootKernelFrames;
	PABinaryLocator* _binaryLocator;
	PASymbolDataStore* _symbolDataStore;
	BOOL _usingDsymForUUIDForEverything;
	NSMutableArray* _namesForDsymForUUID;
	NSMutableArray* _numsForDsymForUUID;
	NSMutableDictionary* _symbolHandleCache;
	NSMutableDictionary* _oldSymbolHandleCache;
	NSMutableSet* _pidsToTrack;
	NSMutableArray* _hidEvents;
	unsigned long long _dataSource;
	NSString* _reason;
	BOOL _expectsLiveProcesses;
	BOOL _gatheredNonTimeCriticalDataFromLiveSystem;
	BOOL _shouldPreemptivelyCacheSymbolicators;
	BOOL _shouldSymbolicate;
	BOOL _sampleOnlyMainThreads;
	BOOL _shouldGatherKextStat;
	double _timeWhenTransitionedToSamplingAllProcesses;
	int _targetProcessId;
	PASampleTimeInsensitiveTaskData* _targetTask;
	unsigned long long _targetThreadId;
	unsigned long long _targetHIDEventMachAbs;
	unsigned _cpuPercent;
	unsigned _cpuDuration;
	unsigned _wakeupsPerSec;
	unsigned _wakeupsDuration;
	NSString* _event;
	NSString* _eventNote;
	NSString* _signature;
	double _extraDuration;
	NSString* _durationNote;
	NSString* _stepsNote;
	double _attemptedSamplingInterval;
	NSString* _kextStat;
	NSString* _kernelVersion;
	NSString* _osProductName;
	NSString* _osProductVersion;
	NSString* _osBuildVersion;
	NSString* _machineArchitecture;
	unsigned _workQueueSoftThreadLimit;
	unsigned _workQueueHardThreadLimit;
	NSString* _hardwareModel;
	unsigned _numActiveCPUs;
	NSString* _bootArgs;
	NSString* _targetProcessBundleVersion;
	NSString* _targetProcessBundleShortVersion;
	NSString* _targetProcessBundleBuildVersion;
	NSString* _targetProcessBundleProjectName;
	NSString* _targetProcessBundleSourceVersion;
	NSString* _targetProcessBundleProductBuildVersion;
	NSString* _targetProcessBundleId;
	NSString* _targetProcessCommerceAppID;
	NSString* _targetProcessCommerceExternalID;
	unsigned long long _previousSampleTimestamp;
	unsigned _previousStackshotBufferSize;
	mach_timebase_info _machTimebase;
	CSArchitecture _arch;
	unsigned _threadPolicyVersion;

}

@property (nonatomic,readonly) NSDictionary * tidToTidStateChangeArrayDictionary; 
@property (nonatomic,readonly) NSDictionary * pidToPidStateChangeArrayDictionary; 
@property (nonatomic,readonly) NSSet * idleThreadSet; 
@property (nonatomic,readonly) NSDictionary * pidToTidSetDict; 
@property (nonatomic,readonly) NSDictionary * tidToPidDict; 
@property (readonly) unsigned long long dataSource;                                            //@synthesize dataSource=_dataSource - In the implementation block
@property (copy) NSString * reason;                                                            //@synthesize reason=_reason - In the implementation block
@property (readonly) double lastWakeTime;                                                      //@synthesize lastWakeTime=_lastWakeTime - In the implementation block
@property (readonly) PAImageInfo * kernelCache; 
@property (readonly) double startMachTimestamp;                                                //@synthesize startMachTimestamp=_startMachTimestamp - In the implementation block
@property (readonly) double endMachTimestamp;                                                  //@synthesize endMachTimestamp=_endMachTimestamp - In the implementation block
@property (readonly) double startWallTimestamp;                                                //@synthesize startWallTimestamp=_startWallTimestamp - In the implementation block
@property (readonly) double endWallTimestamp;                                                  //@synthesize endWallTimestamp=_endWallTimestamp - In the implementation block
@property (readonly) unsigned long long numSamples; 
@property (readonly) NSArray * samples;                                                        //@synthesize timeSensitiveSampleDataArray=_timeSensitiveSampleDataArray - In the implementation block
@property (readonly) PAMountStatusTracker * mountStatusTracker;                                //@synthesize mountStatusTracker=_mountStatusTracker - In the implementation block
@property (readonly) PAGenealogyTracker * genealogyTracker;                                    //@synthesize genealogyTracker=_genealogyTracker - In the implementation block
@property (readonly) NSArray * hidEvents;                                                      //@synthesize hidEvents=_hidEvents - In the implementation block
@property (assign) BOOL expectsLiveProcesses;                                                  //@synthesize expectsLiveProcesses=_expectsLiveProcesses - In the implementation block
@property (assign) BOOL shouldPreemptivelyCacheSymbolicators;                                  //@synthesize shouldPreemptivelyCacheSymbolicators=_shouldPreemptivelyCacheSymbolicators - In the implementation block
@property (assign) BOOL shouldSymbolicate; 
@property (assign) BOOL shouldUseDsymForUUIDToFindBinaries; 
@property (assign) BOOL sampleOnlyMainThreads;                                                 //@synthesize sampleOnlyMainThreads=_sampleOnlyMainThreads - In the implementation block
@property (assign) double timeWhenTransitionedToSamplingAllProcesses;                          //@synthesize timeWhenTransitionedToSamplingAllProcesses=_timeWhenTransitionedToSamplingAllProcesses - In the implementation block
@property (assign) BOOL sanitizePaths;                                                         //@synthesize sanitizePaths=_sanitizePaths - In the implementation block
@property (assign) BOOL omitThirdPartyProcessStacks;                                           //@synthesize omitThirdPartyProcessStacks=_omitThirdPartyProcessStacks - In the implementation block
@property (assign) BOOL omitSensitiveStrings;                                                  //@synthesize omitSensitiveStrings=_omitSensitiveStrings - In the implementation block
@property (assign) BOOL shouldGatherKextStat;                                                  //@synthesize shouldGatherKextStat=_shouldGatherKextStat - In the implementation block
@property (copy,readonly) NSString * kextStat;                                                 //@synthesize kextStat=_kextStat - In the implementation block
@property (readonly) NSString * kernelVersion;                                                 //@synthesize kernelVersion=_kernelVersion - In the implementation block
@property (copy) NSString * osProductName;                                                     //@synthesize osProductName=_osProductName - In the implementation block
@property (copy) NSString * osProductVersion;                                                  //@synthesize osProductVersion=_osProductVersion - In the implementation block
@property (copy) NSString * osBuildVersion;                                                    //@synthesize osBuildVersion=_osBuildVersion - In the implementation block
@property (copy) NSString * machineArchitecture;                                               //@synthesize machineArchitecture=_machineArchitecture - In the implementation block
@property (readonly) unsigned workQueueSoftThreadLimit;                                        //@synthesize workQueueSoftThreadLimit=_workQueueSoftThreadLimit - In the implementation block
@property (readonly) unsigned workQueueHardThreadLimit;                                        //@synthesize workQueueHardThreadLimit=_workQueueHardThreadLimit - In the implementation block
@property (copy) NSString * hardwareModel;                                                     //@synthesize hardwareModel=_hardwareModel - In the implementation block
@property (assign) unsigned numActiveCPUs;                                                     //@synthesize numActiveCPUs=_numActiveCPUs - In the implementation block
@property (copy) NSString * bootArgs;                                                          //@synthesize bootArgs=_bootArgs - In the implementation block
@property (assign) int targetProcessId; 
@property (assign) unsigned long long targetThreadId;                                          //@synthesize targetThreadId=_targetThreadId - In the implementation block
@property (assign) unsigned long long targetHIDEventMachAbs;                                   //@synthesize targetHIDEventMachAbs=_targetHIDEventMachAbs - In the implementation block
@property (assign) unsigned cpuPercent;                                                        //@synthesize cpuPercent=_cpuPercent - In the implementation block
@property (assign) unsigned cpuDuration;                                                       //@synthesize cpuDuration=_cpuDuration - In the implementation block
@property (assign) unsigned wakeupsPerSec;                                                     //@synthesize wakeupsPerSec=_wakeupsPerSec - In the implementation block
@property (assign) unsigned wakeupsDuration;                                                   //@synthesize wakeupsDuration=_wakeupsDuration - In the implementation block
@property (copy) NSString * event;                                                             //@synthesize event=_event - In the implementation block
@property (copy) NSString * eventNote;                                                         //@synthesize eventNote=_eventNote - In the implementation block
@property (copy) NSString * signature;                                                         //@synthesize signature=_signature - In the implementation block
@property (assign) double extraDuration;                                                       //@synthesize extraDuration=_extraDuration - In the implementation block
@property (copy) NSString * durationNote;                                                      //@synthesize durationNote=_durationNote - In the implementation block
@property (copy) NSString * stepsNote;                                                         //@synthesize stepsNote=_stepsNote - In the implementation block
@property (assign) double attemptedSamplingInterval;                                           //@synthesize attemptedSamplingInterval=_attemptedSamplingInterval - In the implementation block
@property (readonly) NSString * targetProcessName; 
@property (readonly) NSString * targetProcessAbsolutePath; 
@property (readonly) NSString * targetProcessBundleName; 
@property (readonly) NSString * targetProcessBundleVersion;                                    //@synthesize targetProcessBundleVersion=_targetProcessBundleVersion - In the implementation block
@property (readonly) NSString * targetProcessBundleShortVersion;                               //@synthesize targetProcessBundleShortVersion=_targetProcessBundleShortVersion - In the implementation block
@property (readonly) NSString * targetProcessBundleBuildVersion;                               //@synthesize targetProcessBundleBuildVersion=_targetProcessBundleBuildVersion - In the implementation block
@property (readonly) NSString * targetProcessBundleProjectName;                                //@synthesize targetProcessBundleProjectName=_targetProcessBundleProjectName - In the implementation block
@property (readonly) NSString * targetProcessBundleSourceVersion;                              //@synthesize targetProcessBundleSourceVersion=_targetProcessBundleSourceVersion - In the implementation block
@property (readonly) NSString * targetProcessBundleProductBuildVersion;                        //@synthesize targetProcessBundleProductBuildVersion=_targetProcessBundleProductBuildVersion - In the implementation block
@property (readonly) NSString * targetProcessBundleId;                                         //@synthesize targetProcessBundleId=_targetProcessBundleId - In the implementation block
@property (readonly) NSString * targetProcessCommerceAppID;                                    //@synthesize targetProcessCommerceAppID=_targetProcessCommerceAppID - In the implementation block
@property (readonly) NSString * targetProcessCommerceExternalID;                               //@synthesize targetProcessCommerceExternalID=_targetProcessCommerceExternalID - In the implementation block
+(BOOL)supportsSecureCoding;
+(id)sampleStoreForKTraceFile:(const char*)arg1 warningsOut:(id)arg2 errorOut:(id*)arg3 ;
+(void)_sortStateChangeArraysOfSampleStore:(id)arg1 ;
+(BOOL)canOpenFileAsKTraceFile:(const char*)arg1 errorOut:(id*)arg2 ;
+(id)newSampleStoreFromFilePath:(const char*)arg1 warningsOut:(id)arg2 errorOut:(id*)arg3 ;
-(NSString *)hardwareModel;
-(void)setHardwareModel:(NSString *)arg1 ;
-(id)init;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)dealloc;
-(unsigned long long)dataSource;
-(NSString *)event;
-(void)setEvent:(NSString *)arg1 ;
-(NSString *)reason;
-(NSArray *)samples;
-(id)targetTask;
-(NSString *)signature;
-(void)setSignature:(NSString *)arg1 ;
-(void)setReason:(NSString *)arg1 ;
-(id)symbolHandleForAddress:(unsigned long long)arg1 inLivingPid:(int)arg2 ;
-(void)addDSCSymFromBuffer:(const void*)arg1 withLength:(unsigned long long)arg2 ;
-(void)addDsymPaths:(id)arg1 ;
-(void)addSymbolsFromTailspin:(id)arg1 ;
-(BOOL)shouldSymbolicate;
-(void)setShouldSymbolicate:(BOOL)arg1 ;
-(BOOL)shouldUseDsymForUUIDToFindBinaries;
-(void)setShouldUseDsymForUUIDToFindBinaries:(BOOL)arg1 ;
-(PAImageInfo *)kernelCache;
-(NSDictionary *)pidToTidSetDict;
-(NSDictionary *)tidToPidDict;
-(void)setPidToTidSetDict:(NSDictionary *)arg1 ;
-(void)setTidToPidDict:(NSDictionary *)arg1 ;
-(NSDictionary *)tidToTidStateChangeArrayDictionary;
-(void)setTidToTidStateChangeArrayDictionary:(NSDictionary *)arg1 ;
-(NSDictionary *)pidToPidStateChangeArrayDictionary;
-(void)setPidToPidStateChangeArrayDictionary:(NSDictionary *)arg1 ;
-(NSSet *)idleThreadSet;
-(void)setIdleThreadSet:(NSSet *)arg1 ;
-(void)_asynchronouslyCacheSymbolicatorForPid:(int)arg1 ;
-(id)timeInsensitiveTaskDataPid:(int)arg1 andUniqueId:(unsigned long long)arg2 andName:(const char*)arg3 didExec:(BOOL)arg4 ;
-(void)_addPid:(int)arg1 tid:(unsigned long long)arg2 ;
-(id)getMissingSampleTaskInCurrentSampleForPid:(int)arg1 andTaskName:(const char*)arg2 didExecSinceLastSample:(BOOL)arg3 needNewTaskForThisSample:(BOOL)arg4 ;
-(void)_addProcessStateChangeToArray:(id)arg1 ;
-(void)_addThreadStateChange:(id)arg1 ;
-(id)getMissingSampleThreadInCurrentSampleInTask:(id)arg1 forTid:(unsigned long long)arg2 needNewThreadForThisSample:(BOOL)arg3 ;
-(id)addKernelStack:(id)arg1 ;
-(id)_latestThreadStateChangeForTid:(unsigned long long)arg1 ;
-(id)_latestProcessStateChangeForPid:(int)arg1 ;
-(double)timeForMachAbsTime:(unsigned long long)arg1 ;
-(mach_timebase_info)machTimebase;
-(CSArchitecture)arch;
-(id)timeInsensitiveTaskDataForKCDataStackshotTask:(const task_snapshot_v2*)arg1 withLoadInfos:(const dyld_uuid_info_64*)arg2 numLoadInfos:(unsigned)arg3 andMachineArchitecture:(CSArchitecture)arg4 ;
-(void)backfillKPerfTaskWithDataFromKCDataTask:(const task_snapshot_v2*)arg1 ;
-(void)backfillKPerfThreadWithDataFromKCDataThread:(const thread_snapshot_v2*)arg1 inPid:(int)arg2 withLeafUserFrame:(id)arg3 andLeafKernelFrame:(id)arg4 andName:(const char*)arg5 taskIsSuspended:(BOOL)arg6 threadInstructionCycles:(const instrs_cycles_snapshot*)arg7 ;
-(void)setMachTimebase:(mach_timebase_info)arg1 ;
-(void)setArch:(CSArchitecture)arg1 ;
-(id)_firstPetSampleAfterTime:(double)arg1 ;
-(void)setExpectsLiveProcesses:(BOOL)arg1 ;
-(void)setAttemptedSamplingInterval:(double)arg1 ;
-(void)setNumActiveCPUs:(unsigned)arg1 ;
-(void)setOsBuildVersion:(NSString *)arg1 ;
-(void)setOsProductName:(NSString *)arg1 ;
-(void)setOsProductVersion:(NSString *)arg1 ;
-(NSString *)osProductName;
-(NSString *)osProductVersion;
-(NSString *)osBuildVersion;
-(int)_addKPerfDataFromKTraceSession:(ktrace_sessionRef)arg1 beforeTime:(unsigned long long)arg2 ;
-(unsigned long long)_backfillPETSamplesUsingKCDataStackshotFromBuffer:(const void*)arg1 withLength:(unsigned long long)arg2 ;
-(void)addProcessInfoFromTailspin:(id)arg1 ;
-(void)_addTidToIdleThreadSet:(unsigned long long)arg1 ;
-(id)tidsForPid:(int)arg1 ;
-(int)pidForTid:(unsigned long long)arg1 ;
-(void)cacheSymbolInformationForAllSymbols;
-(NSString *)machineArchitecture;
-(BOOL)sanitizePaths;
-(id)symbolHandleForAddress:(unsigned long long)arg1 inSampleTask:(id)arg2 ;
-(NSString *)kernelVersion;
-(unsigned)workQueueSoftThreadLimit;
-(unsigned)workQueueHardThreadLimit;
-(PAGenealogyTracker *)genealogyTracker;
-(BOOL)omitThirdPartyProcessStacks;
-(int)targetProcessId;
-(void)flushCachedSymbolicatorForTask:(id)arg1 ;
-(double)attemptedSamplingInterval;
-(PAMountStatusTracker *)mountStatusTracker;
-(id)symbolHandleForOffset:(unsigned long long)arg1 inBinaryWithUUID:(id)arg2 inSampleTask:(id)arg3 ;
-(id)newArrayOfSamplesForSampleIndexRangeStart:(unsigned long long)arg1 end:(unsigned long long)arg2 ;
-(BOOL)hasSampleOnOrAfterTime:(double)arg1 returningFirstIndex:(unsigned long long*)arg2 ;
-(id)newArrayOfSamplesForTimeRangeWithMachStartTime:(double)arg1 andEndTime:(double)arg2 ;
-(BOOL)hasSampleOnOrAfterWallTime:(double)arg1 returningFirstIndex:(unsigned long long*)arg2 ;
-(id)newArrayOfSamplesForTimeRangeWithWallClockStartTime:(double)arg1 andEndTime:(double)arg2 ;
-(double)timeWhenTransitionedToSamplingAllProcesses;
-(unsigned long long)targetHIDEventMachAbs;
-(NSArray *)hidEvents;
-(NSString *)targetProcessBundleId;
-(NSString *)targetProcessBundleShortVersion;
-(NSString *)targetProcessBundleVersion;
-(NSString *)targetProcessBundleBuildVersion;
-(NSString *)targetProcessBundleProductBuildVersion;
-(NSString *)targetProcessBundleProjectName;
-(NSString *)targetProcessBundleSourceVersion;
-(NSString *)targetProcessCommerceAppID;
-(NSString *)targetProcessCommerceExternalID;
-(NSString *)eventNote;
-(unsigned long long)targetThreadId;
-(unsigned)cpuPercent;
-(unsigned)cpuDuration;
-(unsigned)wakeupsPerSec;
-(unsigned)wakeupsDuration;
-(double)extraDuration;
-(NSString *)durationNote;
-(NSString *)stepsNote;
-(unsigned)numActiveCPUs;
-(double)lastWakeTime;
-(id)fanSpeedClosestToMachTime:(double)arg1 ;
-(NSString *)kextStat;
-(void)printFrameRateReportWithStartSampleIndex:(unsigned long long)arg1 andEndIndex:(unsigned long long)arg2 andStartDisplayIndex:(unsigned long long)arg3 toStream:(id)arg4 ;
-(id)copyImageInfosForPid:(int)arg1 ;
-(BOOL)expectsLiveProcesses;
-(void)gatherExtraInfoForTargetProcess:(id)arg1 ;
-(void)gatherKextStat;
-(void)gatherKernelVersion;
-(void)gatherOsVersions;
-(void)gatherMachineArchitecture;
-(void)gatherWorkQueueSoftThreadLimit;
-(void)gatherWorkQueueHardThreadLimit;
-(void)gatherHardwareModel;
-(void)gatherNumActiveCPUs;
-(void)gatherBootArgs;
-(unsigned long long)_addKCDataStackshotFromBuffer:(const void*)arg1 withLength:(unsigned long long)arg2 toSample:(id)arg3 shouldSkipSampleOut:(BOOL*)arg4 ;
-(void)_addSampleToSampleArray:(id)arg1 ;
-(id)timeInsensitiveTaskDataForKCDataStackshotDeltaTask:(const task_delta_snapshot_v2*)arg1 withLoadInfos:(const dyld_uuid_info_64*)arg2 numLoadInfos:(unsigned)arg3 andMachineArchitecture:(CSArchitecture)arg4 ;
-(BOOL)addKCDataThreadV4:(const thread_snapshot_v4*)arg1 orKCDataThreadV2:(const thread_snapshot_v2*)arg2 orDeltaThreadV3:(const thread_delta_snapshot_v3*)arg3 orDeltaThreadV2:(const thread_delta_snapshot_v2*)arg4 withStack:(id)arg5 andName:(const char*)arg6 andWaitInfo:(const stackshot_thread_waitinfo*)arg7 andInstructionCycles:(const instrs_cycles_snapshot*)arg8 toTask:(id)arg9 withCurrentThreads:(id)arg10 withPreviousThreads:(id)arg11 ;
-(id)timeInsensitiveTaskDataForUniqueId:(unsigned long long)arg1 ;
-(BOOL)_addStackshot:(id)arg1 ;
-(id)timeInsensitiveTaskDataForStackshotTask:(id)arg1 andMachineArchitecture:(CSArchitecture)arg2 ;
-(void)useDsymForUUIDFor:(id)arg1 ;
-(BOOL)setTargetProcessWithHint:(id)arg1 ;
-(void)setTargetProcessId:(int)arg1 ;
-(NSString *)targetProcessName;
-(NSString *)targetProcessAbsolutePath;
-(NSString *)targetProcessBundleName;
-(BOOL)cacheLoadInfoForProcess:(int)arg1 ;
-(void)gatherOccasionalLiveDataForMachTime:(double)arg1 ;
-(void)startingSamplingLiveSystem;
-(void)doneSamplingLiveSystem;
-(void)gatherNonTimeCriticalDataFromLiveSystem;
-(id)cachedSymbolHandleForAddress:(unsigned long long)arg1 inPid:(int)arg2 ;
-(void)flushAllSymbolicators;
-(void)flushAllCachedSymbolInformation;
-(id)sharedCacheInfoForSampleTask:(id)arg1 ;
-(id)sharedCacheImageInfosForSharedCacheInfo:(id)arg1 ;
-(void)setDSCSymDir:(id)arg1 ;
-(unsigned long long)addKCDataStackshots:(id)arg1 createSeparateSamplePerStackshot:(BOOL)arg2 ;
-(unsigned long long)addKCDataStackshotFromBuffer:(const void*)arg1 withLength:(unsigned long long)arg2 ;
-(unsigned long long)addStackshots:(id)arg1 ;
-(void)addStackshot:(id)arg1 ;
-(void)addPidToSampledPids:(int)arg1 ;
-(void)addPidsWithNameToSampledPids:(id)arg1 ;
-(void)sampleTrackedPidsNow;
-(void)setMachineArchitecture:(NSString *)arg1 ;
-(double)startMachTimestamp;
-(double)endMachTimestamp;
-(double)startWallTimestamp;
-(double)endWallTimestamp;
-(void)setSanitizePaths:(BOOL)arg1 ;
-(void)setOmitThirdPartyProcessStacks:(BOOL)arg1 ;
-(BOOL)omitSensitiveStrings;
-(void)setOmitSensitiveStrings:(BOOL)arg1 ;
-(void)setTargetHIDEventMachAbs:(unsigned long long)arg1 ;
-(void)setTargetThreadId:(unsigned long long)arg1 ;
-(void)setCpuPercent:(unsigned)arg1 ;
-(void)setCpuDuration:(unsigned)arg1 ;
-(void)setWakeupsPerSec:(unsigned)arg1 ;
-(void)setWakeupsDuration:(unsigned)arg1 ;
-(void)setEventNote:(NSString *)arg1 ;
-(void)setExtraDuration:(double)arg1 ;
-(void)setDurationNote:(NSString *)arg1 ;
-(void)setStepsNote:(NSString *)arg1 ;
-(void)setBootArgs:(NSString *)arg1 ;
-(BOOL)shouldPreemptivelyCacheSymbolicators;
-(void)setShouldPreemptivelyCacheSymbolicators:(BOOL)arg1 ;
-(BOOL)sampleOnlyMainThreads;
-(void)setSampleOnlyMainThreads:(BOOL)arg1 ;
-(BOOL)shouldGatherKextStat;
-(void)setShouldGatherKextStat:(BOOL)arg1 ;
-(void)setTimeWhenTransitionedToSamplingAllProcesses:(double)arg1 ;
-(NSString *)bootArgs;
-(unsigned long long)numSamples;
@end

