/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:12:47 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/AVConference.framework/AVConference
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <AVConference/AVConference-Structs.h>
@class AVCStatisticsCollector, SenderLargeFrameInfo;

@interface VCRateControlMediaController : NSObject {

	id _mediaControllerDelegate;
	AVCStatisticsCollector* _statisticsCollector;
	tagHANDLE* _hMediaQueue;
	unsigned _videoSendingBitrate;
	unsigned _audioSendingBitrate;
	unsigned _minTargetBitrate;
	unsigned _targetBitrate;
	BOOL _isVideoStoppedByVCRateControl;
	BOOL _isVideoStoppedByBaseband;
	BOOL _isVideoPausedByUser;
	BOOL _isAudioOnly;
	BOOL _isBasebandFlushing;
	BOOL _isAudioStall;
	BOOL _isInThrottlingMode;
	unsigned char _videoPayloadType;
	unsigned short _videoTransactionID;
	unsigned _videoRefreshFrameTimestamp;
	unsigned _videoRefreshFramePacketCount;
	double _lastVideoKeyFrameTime;
	SenderLargeFrameInfo* _senderLargeFrameInfo;
	unsigned _probingLargeFrameSize;
	unsigned _probingLargeFrameSizeCap;
	unsigned _probingSequencePacketSize;
	unsigned _probingSequencePacketCount;
	BOOL _shouldDisableLargeFrameRequestsWhenInitialRampUp;
	BOOL _isRateLimitedMaxTimeExceeded;
	BOOL _isSenderProbingEnabled;
	int _basebandFlushCount;
	double _lastBasebandFlushAudioTime;
	double _lastBasebandFlushVideoTime;
	unsigned short _videoFlushTransactionID;
	unsigned _audioStallBitrate;
	unsigned _basebandAverageBitrate;
	unsigned _basebandTotalQueueDepth;
	unsigned _basebandFlushableQueueDepth;
	double _basebandExpectedQueuingDelay;
	double _basebandNBDCD;
	double _lastBasebandHighNBDCDTime;
	BOOL _isBasebandQueuingDelayHigh;
	void* _logBasebandDump;
	unsigned _afrcRemoteEstimatedBandwidth;

}

@property (nonatomic,retain) AVCStatisticsCollector * statisticsCollector;                       //@synthesize statisticsCollector=_statisticsCollector - In the implementation block
@property (assign,nonatomic) unsigned videoSendingBitrate;                                       //@synthesize videoSendingBitrate=_videoSendingBitrate - In the implementation block
@property (assign,nonatomic) unsigned audioSendingBitrate;                                       //@synthesize audioSendingBitrate=_audioSendingBitrate - In the implementation block
@property (assign,nonatomic) unsigned minTargetBitrate;                                          //@synthesize minTargetBitrate=_minTargetBitrate - In the implementation block
@property (assign,nonatomic) unsigned targetBitrate;                                             //@synthesize targetBitrate=_targetBitrate - In the implementation block
@property (nonatomic,readonly) int basebandFlushCount;                                           //@synthesize basebandFlushCount=_basebandFlushCount - In the implementation block
@property (nonatomic,readonly) BOOL isVideoStoppedByVCRateControl;                               //@synthesize isVideoStoppedByVCRateControl=_isVideoStoppedByVCRateControl - In the implementation block
@property (nonatomic,readonly) BOOL isVideoStopped; 
@property (nonatomic,readonly) BOOL isInThrottlingMode;                                          //@synthesize isInThrottlingMode=_isInThrottlingMode - In the implementation block
@property (assign,nonatomic) BOOL isSenderProbingEnabled;                                        //@synthesize isSenderProbingEnabled=_isSenderProbingEnabled - In the implementation block
@property (assign,nonatomic) BOOL isAudioOnly;                                                   //@synthesize isAudioOnly=_isAudioOnly - In the implementation block
@property (assign,nonatomic) BOOL isRateLimitedMaxTimeExceeded;                                  //@synthesize isRateLimitedMaxTimeExceeded=_isRateLimitedMaxTimeExceeded - In the implementation block
@property (assign,nonatomic) BOOL shouldDisableLargeFrameRequestsWhenInitialRampUp;              //@synthesize shouldDisableLargeFrameRequestsWhenInitialRampUp=_shouldDisableLargeFrameRequestsWhenInitialRampUp - In the implementation block
@property (nonatomic,readonly) unsigned probingLargeFrameSize;                                   //@synthesize probingLargeFrameSize=_probingLargeFrameSize - In the implementation block
@property (nonatomic,readonly) unsigned probingSequencePacketCount;                              //@synthesize probingSequencePacketCount=_probingSequencePacketCount - In the implementation block
@property (nonatomic,readonly) unsigned probingSequencePacketSize;                               //@synthesize probingSequencePacketSize=_probingSequencePacketSize - In the implementation block
@property (assign,nonatomic) unsigned afrcRemoteEstimatedBandwidth;                              //@synthesize afrcRemoteEstimatedBandwidth=_afrcRemoteEstimatedBandwidth - In the implementation block
-(void)dealloc;
-(void)setStatisticsCollector:(AVCStatisticsCollector *)arg1 ;
-(void)enableBasebandLogDump:(void*)arg1 ;
-(void)setIsSenderProbingEnabled:(BOOL)arg1 ;
-(unsigned)targetBitrate;
-(void)setTargetBitrate:(unsigned)arg1 ;
-(int)basebandFlushCount;
-(AVCStatisticsCollector *)statisticsCollector;
-(unsigned)probingSequencePacketSize;
-(unsigned)probingSequencePacketCount;
-(BOOL)isVideoStopped;
-(void)increaseBasebandFlushCountInternallyWithSuggestion:(VCRateControlMediaSuggestion*)arg1 ;
-(BOOL)isProbingLargeFrameRequiredAtTime:(double)arg1 ;
-(void)updateLargeFrameSizeWithBandwidth:(unsigned)arg1 ;
-(void)scheduleProbingSequenceAtTime:(double)arg1 ;
-(void)printLargeFrameStatsAtTime:(double)arg1 timeSinceLastProbingSequence:(double)arg2 frameSize:(unsigned)arg3 wastedBytes:(unsigned)arg4 isFrameRequested:(BOOL)arg5 ;
-(void)updateProbingLargeFrameSizeCap;
-(id)initWithMediaQueue:(tagHANDLE*)arg1 delegate:(id)arg2 ;
-(void)getMediaQueueInVideoBitrate:(double*)arg1 outVideoBitrate:(double*)arg2 inAudioBitrate:(double*)arg3 outAudioBitrate:(double*)arg4 ;
-(void)getMediaQueueRateChangeCounter:(unsigned*)arg1 rateChangeTime:(double*)arg2 ;
-(void)computePacketLossWithTimestamp:(unsigned short)arg1 totalRemoteReceivedPackets:(unsigned)arg2 packetBurstLoss:(unsigned)arg3 packetLossRate:(double*)arg4 mostBurstLoss:(unsigned*)arg5 ;
-(void)updateBasebandSuggestionWithStatistics:(SCD_Struct_AV10)arg1 ;
-(void)pauseVideoByUser:(BOOL)arg1 ;
-(void)stopVideoByVCRateControl;
-(void)resumeVideoByVCRateControl;
-(void)recordVideoRefreshFrameWithTimestamp:(unsigned)arg1 payloadType:(unsigned char)arg2 packetCount:(unsigned)arg3 isKeyFrame:(BOOL)arg4 ;
-(BOOL)increaseFlushCountForVideoRefresh:(int)arg1 transactionID:(unsigned short)arg2 ;
-(BOOL)increaseFlushCountForAudioStall:(int)arg1 audioStallBitrate:(unsigned)arg2 ;
-(unsigned)getRefreshFrameTimestamp;
-(void)decreaseFlushCount:(int)arg1 ;
-(BOOL)didMediaGetFlushedWithPayloadType:(unsigned char)arg1 transactionID:(unsigned short)arg2 packetDropped:(unsigned short)arg3 sequenceNumberArray:(unsigned short*)arg4 ;
-(void)setAudioSendingBitrate:(unsigned)arg1 ;
-(unsigned)probingLargeFrameSize;
-(void)scheduleProbingSequenceWithFrameSize:(unsigned)arg1 paddingBytes:(unsigned)arg2 isProbingSequenceScheduled:(BOOL*)arg3 ;
-(unsigned)videoSendingBitrate;
-(void)setVideoSendingBitrate:(unsigned)arg1 ;
-(unsigned)audioSendingBitrate;
-(unsigned)minTargetBitrate;
-(void)setMinTargetBitrate:(unsigned)arg1 ;
-(BOOL)isVideoStoppedByVCRateControl;
-(BOOL)isSenderProbingEnabled;
-(BOOL)isInThrottlingMode;
-(BOOL)isRateLimitedMaxTimeExceeded;
-(void)setIsRateLimitedMaxTimeExceeded:(BOOL)arg1 ;
-(BOOL)shouldDisableLargeFrameRequestsWhenInitialRampUp;
-(void)setShouldDisableLargeFrameRequestsWhenInitialRampUp:(BOOL)arg1 ;
-(unsigned)afrcRemoteEstimatedBandwidth;
-(void)setAfrcRemoteEstimatedBandwidth:(unsigned)arg1 ;
-(BOOL)isAudioOnly;
-(void)setIsAudioOnly:(BOOL)arg1 ;
@end

