/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:12:46 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/AVConference.framework/AVConference
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol VCRateControlAlgorithm, OS_dispatch_queue;
#import <AVConference/AVConference-Structs.h>
@class AVCStatisticsCollector, AVCRateControlFeedbackController, AVCBasebandCongestionDetector, VCRateControlMediaController, NSObject;

@interface AVCRateController : NSObject {

	id _rateControllerDelegate;
	AVCStatisticsCollector* _statisticsCollector;
	AVCRateControlFeedbackController* _feedbackController;
	AVCBasebandCongestionDetector* _basebandCongestionDetector;
	VCRateControlMediaController* _mediaController;
	id<VCRateControlAlgorithm> _rateControlAlgorithm;
	AVCRateControlConfig _configuration;
	NSObject*<OS_dispatch_queue> _rateControllerQueue;
	unsigned _targetBitrate;
	unsigned _rateChangeCounter;
	unsigned _roundTripTimeMilliseconds;
	unsigned _packetLossPercentage;
	unsigned _burstPacketLoss;
	BOOL _isNetworkCongested;
	void* _logDump;
	void* _logFeedbackDump;
	void* _logBasebandDump;
	BOOL _isDumpFileEnabled;
	unsigned _dumpID;
	BOOL _isPeriodicLoggingEnabled;
	BOOL _isBasebandEnabled;

}

@property (nonatomic,retain) VCRateControlMediaController * mediaController;                          //@synthesize mediaController=_mediaController - In the implementation block
@property (nonatomic,readonly) unsigned targetBitrate;                                                //@synthesize targetBitrate=_targetBitrate - In the implementation block
@property (nonatomic,retain) AVCStatisticsCollector * statisticsCollector;                            //@synthesize statisticsCollector=_statisticsCollector - In the implementation block
@property (nonatomic,retain) AVCRateControlFeedbackController * feedbackController;                   //@synthesize feedbackController=_feedbackController - In the implementation block
@property (nonatomic,retain) AVCBasebandCongestionDetector * basebandCongestionDetector;              //@synthesize basebandCongestionDetector=_basebandCongestionDetector - In the implementation block
-(void)dealloc;
-(AVCRateControlFeedbackController *)feedbackController;
-(void)setFeedbackController:(AVCRateControlFeedbackController *)arg1 ;
-(void)createLogDumpFiles:(unsigned)arg1 ;
-(void)releaseLogDumpFiles;
-(void)setStatisticsCollector:(AVCStatisticsCollector *)arg1 ;
-(void)setMediaController:(VCRateControlMediaController *)arg1 ;
-(void)createBasebandLogDumpFile;
-(void)configureAlgorithmWithRestart:(BOOL)arg1 ;
-(unsigned)rateControlModeFromAVConferenceOperatingMode:(int)arg1 ;
-(unsigned)radioAccessTechnologyFromAVConferenceCellTech:(int)arg1 isCellular:(BOOL)arg2 ;
-(id)indicatorFromRadioTech:(unsigned)arg1 ;
-(int)maxTierBelowBitrate:(unsigned)arg1 maxTierIndex:(int)arg2 minTierIndex:(int)arg3 ;
-(int)initialBitrateTierFromLearntBitrateWithLocalTechnology:(unsigned)arg1 remoteTech:(unsigned)arg2 defaultTier:(int)arg3 ;
-(int)minTierAboveBitrate:(unsigned)arg1 maxTierIndex:(int)arg2 minTierIndex:(int)arg3 ;
-(void)setDefaultAlgorithmConfiguration:(VCRateControlAlgorithmConfig*)arg1 ;
-(void)createVCRateControlAlgorithmWithConfiguration:(VCRateControlAlgorithmConfig*)arg1 ;
-(unsigned)targetBitrate;
-(void)reportTargetBitrateChange:(unsigned)arg1 rateChangeCounter:(unsigned)arg2 ;
-(void)doRateControlWithStatistics:(SCD_Struct_AV10)arg1 ;
-(void)doRateControlWithBasebandStatistics:(SCD_Struct_AV10)arg1 ;
-(void)printFeedbackMessage:(SCD_Struct_AV10)arg1 ;
-(void)reportNetworkStatistics;
-(void)printBasebandNotificationStatistics:(SCD_Struct_AV10)arg1 ;
-(id)initWithDelegate:(id)arg1 dumpID:(unsigned)arg2 ;
-(void)configureWithOperatingMode:(int)arg1 isLocalCellular:(BOOL)arg2 localCellTech:(int)arg3 isRemoteCellular:(BOOL)arg4 remoteCellTech:(int)arg5 bitrateCap:(unsigned)arg6 ;
-(AVCBasebandCongestionDetector *)basebandCongestionDetector;
-(void)setBasebandCongestionDetector:(AVCBasebandCongestionDetector *)arg1 ;
-(AVCStatisticsCollector *)statisticsCollector;
-(VCRateControlMediaController *)mediaController;
-(void)configure:(AVCRateControlConfig)arg1 ;
@end

