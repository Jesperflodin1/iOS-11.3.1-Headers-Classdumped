/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:12:49 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/AVConference.framework/AVConference
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AVConference/AVConference-Structs.h>
#import <libobjc.A.dylib/VCMediaStreamProtocol.h>
#import <libobjc.A.dylib/RTCPReportProvider.h>
#import <libobjc.A.dylib/VCSecurityEventHandler.h>

@protocol OS_dispatch_queue, VCMediaStreamDelegate, VCMomentsCollectorDelegate;
@class NSObject, VCMediaStreamConfig, VCDatagramChannelIDS, NSString, VCWeakObjectHolder;

@interface VCMediaStream : NSObject <VCMediaStreamProtocol, RTCPReportProvider, VCSecurityEventHandler> {

	NSObject*<OS_dispatch_queue> _delegateNotificationQueue;
	opaque_pthread_mutex_t _streamLock;
	int _state;
	VCMediaStreamConfig* _streamConfig;
	VCDatagramChannelIDS* _datagramChannel;
	NSString* _idsDestination;
	id<VCMediaStreamDelegate> _delegate;
	id<VCMomentsCollectorDelegate> _momentsCollectorDelegate;
	NSString* _callID;
	tagHANDLE* _rtpHandle;
	BOOL _isSRTPInitialized;
	double _rtpTimeoutEnabledTime;
	double _rtcpTimeoutEnabledTime;
	double _lastRTPTimeoutReportTime;
	double _lastRTCPTimeoutReportTime;
	unsigned _localSSRC;
	VCWeakObjectHolder* _notificationDelegate;
	VCWeakObjectHolder* _rtcpReportProvider;

}

@property (nonatomic,readonly) int state;                                                          //@synthesize state=_state - In the implementation block
@property (nonatomic,retain) VCMediaStreamConfig * streamConfig;                                   //@synthesize streamConfig=_streamConfig - In the implementation block
@property (assign,nonatomic) id<VCMediaStreamDelegate> delegate; 
@property (assign,nonatomic) id<VCMomentsCollectorDelegate> momentsCollectorDelegate;              //@synthesize momentsCollectorDelegate=_momentsCollectorDelegate - In the implementation block
@property (nonatomic,readonly) unsigned localSSRC;                                                 //@synthesize localSSRC=_localSSRC - In the implementation block
@property (assign,nonatomic) id<VCMediaStreamNotification> notificationDelegate; 
@property (assign,nonatomic) id<RTCPReportProvider> rtcpReportProvider; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(BOOL)isSameSRTPKey:(id)arg1 newKey:(id)arg2 ;
-(id)init;
-(id<VCMediaStreamDelegate>)delegate;
-(void)setDelegate:(id<VCMediaStreamDelegate>)arg1 ;
-(void)dealloc;
-(int)state;
-(void)lock;
-(void)unlock;
-(void)stop;
-(void)start;
-(void)registerRTPPayloadMappings;
-(id)rxNetworkPayloads;
-(VCMediaStreamConfig *)streamConfig;
-(BOOL)configureMediaStreamWithConfiguration:(id)arg1 error:(id*)arg2 rtpHandle:(tagHANDLE*)arg3 ;
-(id)supportedPayloads;
-(void)onCallIDChanged;
-(BOOL)onConfigureStreamWithConfiguration:(id)arg1 error:(id*)arg2 ;
-(void)onStartWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)onStopWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)onPauseWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)onResumeWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)onRtcpSendIntervalChanged;
-(void)onRtcpEnabledChanged;
-(void)sendControlPacket;
-(id<VCMomentsCollectorDelegate>)momentsCollectorDelegate;
-(char*)streamStateToString:(int)arg1 ;
-(BOOL)generateReceptionReportList:(RTCP_RECEPTION_REPORT*)arg1 reportCount:(char*)arg2 ;
-(void)setStreamDirection:(long long)arg1 ;
-(unsigned)localSSRC;
-(id<VCMediaStreamNotification>)notificationDelegate;
-(void)setPause:(BOOL)arg1 ;
-(id)setLocalParticipantInfo:(id)arg1 networkSockets:(id)arg2 withError:(id*)arg3 ;
-(BOOL)setStreamConfig:(id)arg1 withError:(id*)arg2 ;
-(void)setMomentsCollectorDelegate:(id<VCMomentsCollectorDelegate>)arg1 ;
-(id)setupRTPWithError:(id*)arg1 ;
-(void)setRtcpReportProvider:(id<RTCPReportProvider>)arg1 ;
-(void)setNotificationDelegate:(id<VCMediaStreamNotification>)arg1 ;
-(unsigned)getRTCPReportNTPTimeMiddle32ForReportId:(unsigned char)arg1 ;
-(unsigned)getExtendedSequenceNumberForSequenceNumber:(unsigned short)arg1 ;
-(void)handleEncryptionInfoChange:(id)arg1 ;
-(int)getSRTPMasterKeyLength:(long long)arg1 ;
-(int)getCryptoSet:(tagSRTPExchangeInfo*)arg1 withMasterKey:(id)arg2 ;
-(int)SRTPCipherSuiteForVCMediaStreamCipherSuite:(long long)arg1 ;
-(id)setupRTPWithIDSDestination:(id)arg1 error:(id*)arg2 ;
-(id)setupRTPWithIPInfo:(id)arg1 error:(id*)arg2 ;
-(BOOL)isSameSRTPConfig:(id)arg1 ;
-(void)setStreamConfig:(VCMediaStreamConfig *)arg1 ;
-(int)setupSRTP;
-(int)getKeyDerivationCryptoSet:(SCD_Struct_VC80*)arg1 withKeyMaterial:(id)arg2 ;
-(id)setupRTPWithSockets:(id)arg1 error:(id*)arg2 ;
-(id)setupRTPWithLocalParticipantInfo:(id)arg1 error:(id*)arg2 ;
-(long long)streamDirection;
-(id<RTCPReportProvider>)rtcpReportProvider;
-(void)setRtcpEnabled:(BOOL)arg1 ;
-(void)setRtpTimeOutEnabled:(BOOL)arg1 ;
-(void)setRtcpTimeOutEnabled:(BOOL)arg1 ;
-(void)setRtcpSendInterval:(double)arg1 ;
-(void)setRtcpTimeOutInterval:(double)arg1 ;
-(void)setRtpTimeOutInterval:(double)arg1 ;
@end

