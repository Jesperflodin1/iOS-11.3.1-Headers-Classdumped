/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:12:47 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/AVConference.framework/AVConference
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AVConference/AVConference-Structs.h>
#import <AVConference/VCMediaStream.h>
#import <libobjc.A.dylib/WRMClientDelegate.h>
#import <libobjc.A.dylib/VCMediaStreamSyncSource.h>
#import <libobjc.A.dylib/VCAudioIOSource.h>
#import <libobjc.A.dylib/VCAudioIOSink.h>
#import <libobjc.A.dylib/VCAudioIODelegate.h>

@protocol OS_dispatch_source;
@class NSObject, NSMutableArray, DTMFEventHandler, WRMClient, VCAudioPayload, VCAudioTransmitter, AVCStatisticsCollector, VCAudioIO, NSString;

@interface VCAudioStream : VCMediaStream <WRMClientDelegate, VCMediaStreamSyncSource, VCAudioIOSource, VCAudioIOSink, VCAudioIODelegate> {

	int _clientPid;
	int numBufferBytesAvailable;
	NSObject*<OS_dispatch_source> pausedAudioHeartBeat;
	double dAudioHostTime;
	BOOL lastVoiceActive;
	unsigned conferenceID;
	unsigned lastInputAudioTimeStamp;
	unsigned lastSentAudioSampleTime;
	unsigned packetTimeoutCheckCounter;
	unsigned awdTime;
	long long sampleRate;
	long long samplesPerFrame;
	opaque_pthread_rwlock_t stateLock;
	NSMutableArray* audioPayloads;
	AudioStreamBasicDescription vpioFormat;
	int preferredAudioCodec;
	DTMFEventHandler* dtmfEventHandler;
	WRMClient* wrmClient;
	VCAudioPayload* currentAudioPayload;
	VCAudioPayload* currentDTXPayload;
	tagVCAudioReceiver* _audioReceiver;
	VCAudioTransmitter* _audioTransmitter;
	AVCStatisticsCollector* _statisticsCollector;
	opaqueRTCReportingRef reportingAgent;
	METER_INFO soundMeter[2];
	BOOL isValid;
	int deviceRole;
	int operatingMode;
	void* _audioMediaControlInfoGenerator;
	id syncSourceDelegate;
	tagWRMMetricsInfo* wrmInfo;
	VCAudioIO* _audioIO;
	BOOL _isMuted;
	BOOL _isRemoteMuted;

}

@property (retain) VCAudioTransmitter * audioTransmitter;                                                //@synthesize audioTransmitter=_audioTransmitter - In the implementation block
@property (retain) VCAudioIO * audioIO;                                                                  //@synthesize audioIO=_audioIO - In the implementation block
@property (assign,nonatomic) NSObject*<VCMediaStreamSyncSourceDelegate> syncSourceDelegate; 
@property (nonatomic,retain) AVCStatisticsCollector * statisticsCollector;                               //@synthesize statisticsCollector=_statisticsCollector - In the implementation block
@property (readonly) unsigned conferenceID; 
@property (assign,nonatomic) BOOL isValid; 
@property (assign,nonatomic) int deviceRole; 
@property (assign,nonatomic) int operatingMode; 
@property (assign,getter=isMuted,nonatomic) BOOL muted;                                                  //@synthesize isMuted=_isMuted - In the implementation block
@property (assign,getter=isRemoteMuted,nonatomic) BOOL remoteMuted;                                      //@synthesize isRemoteMuted=_isRemoteMuted - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)supportedAudioPayloads;
+(unsigned char)audioIODirectionWithMediaStreamDirection:(long long)arg1 ;
+(id)capabilities;
-(void)setOperatingMode:(int)arg1 ;
-(int)operatingMode;
-(void)dealloc;
-(void)setState:(int)arg1 ;
-(BOOL)isValid;
-(BOOL)isMuted;
-(void)setMuted:(BOOL)arg1 ;
-(int)deviceRole;
-(void)setDeviceRole:(int)arg1 ;
-(void)pullAudioSamples:(opaqueVCAudioBufferListRef)arg1 ;
-(void)pushAudioSamples:(opaqueVCAudioBufferListRef)arg1 ;
-(void)setStatisticsCollector:(AVCStatisticsCollector *)arg1 ;
-(AVCStatisticsCollector *)statisticsCollector;
-(id)initWithClientPid:(int)arg1 ;
-(void)stateExit;
-(void)stateEnter;
-(void)setupRTPPayloads;
-(id)supportedPayloads;
-(void)onCallIDChanged;
-(BOOL)onConfigureStreamWithConfiguration:(id)arg1 error:(id*)arg2 ;
-(void)onStartWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)onStopWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)onPauseWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)onResumeWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)onRtcpSendIntervalChanged;
-(void)onRtcpEnabledChanged;
-(VCAudioTransmitter *)audioTransmitter;
-(unsigned)internalSampleRateForCodecType:(long long)arg1 ;
-(unsigned)computePacketTimestampWithInputTimestamp:(unsigned)arg1 numSamples:(int)arg2 hostTime:(double)arg3 ;
-(void)setInputTimestamp:(unsigned)arg1 packetTimestamp:(int)arg2 hostTime:(double)arg3 ;
-(NSObject*<VCMediaStreamSyncSourceDelegate>)syncSourceDelegate;
-(void)checkPacketTimeouts;
-(unsigned)codecTypeFromAudioPayload:(int)arg1 ;
-(BOOL)setupAudioCodecWithPayload:(int)arg1 ;
-(id)addAudioPayload:(int)arg1 ;
-(unsigned)preferredAudioBitrateForPayload:(int)arg1 ;
-(id)configForPayloadType:(int)arg1 ;
-(int)bundlingSchemeForOperatingMode:(int)arg1 payloadType:(int)arg2 ;
-(void)stopPausedHeartbeat;
-(void)startPausedHeartbeat;
-(id)initWithClientPid:(int)arg1 ssrc:(unsigned)arg2 ;
-(void)initializeWRM;
-(void)setFrequencyMeteringEnabled:(BOOL)arg1 meterType:(int)arg2 ;
-(void)uninitializeWRM;
-(BOOL)setReceiverPayloads:(id)arg1 ;
-(void)registerCodecRateModeChangeNotifications;
-(int)getPacketsPerBundle;
-(BOOL)choosePayload:(int*)arg1 count:(int)arg2 ;
-(void)setDTXPayload:(id)arg1 ;
-(BOOL)setMediaQueueStreamSettings;
-(void)startWRM;
-(void)stopWRM;
-(BOOL)generateReceptionReportList:(RTCP_RECEPTION_REPORT*)arg1 reportCount:(char*)arg2 ;
-(void)setStreamDirection:(long long)arg1 ;
-(int)operatingModeForAudioStreamMode:(long long)arg1 ;
-(int)getReportingClientType;
-(id)getReportingClientName;
-(id)getReportingServiceID;
-(void)setAudioTransmitter:(VCAudioTransmitter *)arg1 ;
-(void)_computeInternalFormatForAudioConfig:(id)arg1 ;
-(void)setAudioIO:(VCAudioIO *)arg1 ;
-(BOOL)createAudioReceiver;
-(BOOL)createAudioTransmitter:(long long)arg1 ;
-(void)prepareAudio;
-(void)cleanupAudio;
-(void)startAudioWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)reportingAudioStreamEvent:(unsigned short)arg1 ;
-(void)stopAudioWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)restartPausedHeartbeat;
-(void)pullDecodedMeshMode:(opaqueVCAudioBufferListRef)arg1 ;
-(void)updateSoundMeter:(int)arg1 sampleBuffer:(opaqueVCAudioBufferListRef)arg2 ;
-(int)captureMeshMode:(opaqueVCAudioBufferListRef)arg1 ;
-(void)setWRMMetricConfig:(SCD_Struct_VC36*)arg1 ;
-(void)setWRMNotification:(SCD_Struct_VC37*)arg1 ;
-(void)setSyncSourceDelegate:(NSObject*<VCMediaStreamSyncSourceDelegate>)arg1 ;
-(long long)getSyncSourceSampleRate;
-(void)didSuspendAudioIO:(id)arg1 ;
-(void)didResumeAudioIO:(id)arg1 ;
-(void)generateWRMReport;
-(void)reportRTCPPackets:(RTCPPacketList*)arg1 ;
-(BOOL)setAudioStreamConfig:(id)arg1 error:(id*)arg2 ;
-(void)sendDTMFEvent:(id)arg1 ;
-(void)stopSendDTMFEvent;
-(BOOL)isFrequencyMeteringEnabled:(int)arg1 ;
-(BOOL)canProcessAudio;
-(void)setCanProcessAudio:(BOOL)arg1 ;
-(void)reportWRMMetrics:(const SCD_Struct_VC42*)arg1 ;
-(void)unregisterCodecRateModeChangeNotifications;
-(void)handleCodecRateModeChange:(int)arg1 payload:(int)arg2 ;
-(unsigned)conferenceID;
-(VCAudioIO *)audioIO;
-(BOOL)isRemoteMuted;
-(void)setRemoteMuted:(BOOL)arg1 ;
-(void)setIsValid:(BOOL)arg1 ;
@end

