/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:12:50 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/AVConference.framework/AVConference
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AVConference/AVConference-Structs.h>
#import <AVConference/VCMediaStream.h>
#import <libobjc.A.dylib/VCVideoStreamReceiverDelegate.h>
#import <libobjc.A.dylib/VCMediaStreamSyncDestination.h>

@protocol OS_dispatch_queue, OS_dispatch_source;
@class NSObject, VCImageQueue, VCVideoStreamTransmitter, VCVideoStreamReceiver, NSString;

@interface VCVideoStream : VCMediaStream <VCVideoStreamReceiverDelegate, VCMediaStreamSyncDestination> {

	NSObject*<OS_dispatch_queue> _lastDecodedFrameQueue;
	NSObject*<OS_dispatch_source> _rtcpSendHeartBeat;
	opaque_pthread_mutex_t _remoteLayerLock;
	opaque_pthread_mutex_t _localLayerLock;
	unsigned _uplinkOperatingBitrate;
	CVBufferRef _cachedRemoteVideoFrame;
	VCImageQueue* _remoteQueue;
	long long _streamToken;
	VCVideoStreamTransmitter* _videoTransmitter;
	VCVideoStreamReceiver* _videoReceiver;
	opaqueRTCReportingRef _reportingAgent;

}

@property (readonly) long long streamToken;                         //@synthesize streamToken=_streamToken - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)supportedVideoPayloads;
+(id)capabilities;
-(id)init;
-(void)dealloc;
-(unsigned)generateStreamToken;
-(void)setupRTPPayloads;
-(id)supportedPayloads;
-(void)onCallIDChanged;
-(BOOL)onConfigureStreamWithConfiguration:(id)arg1 error:(id*)arg2 ;
-(void)onStartWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)onStopWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)onPauseWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)onResumeWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)onRtcpSendIntervalChanged;
-(void)onRtcpEnabledChanged;
-(void)reportingVideoStreamEvent:(unsigned short)arg1 ;
-(void)checkPacketTimeouts;
-(void)reportRTCPPackets:(RTCPPacketList*)arg1 ;
-(BOOL)startSynchronization:(id)arg1 ;
-(void)stopSynchronization;
-(void)updateVideoConfig:(id)arg1 ;
-(void)vcVideoStreamReceiver:(id)arg1 downlinkQualityDidChange:(id)arg2 ;
-(unsigned)vcVideoStreamReceiver:(id)arg1 receivedTMMBR:(unsigned)arg2 ;
-(void)vcVideoStreamReceiverRequestKeyFrame:(id)arg1 rtcpPSFBType:(unsigned)arg2 ;
-(BOOL)vcVideoStreamReceiver:(id)arg1 didReceiveRemoteFrame:(CVBufferRef)arg2 atTime:(SCD_Struct_VC33)arg3 newVideoAttributes:(id)arg4 isFirstFrame:(BOOL)arg5 ;
-(void)resetRtcpSendHeartBeatTimer:(unsigned long long)arg1 ;
-(void)destroyVideoTransmitter;
-(void)destroyVideoReceiver;
-(void)stopRtcpSendHeartBeat;
-(void)initVideoTransmitter:(id)arg1 ;
-(void)updateVideoReceiver:(id)arg1 ;
-(void)startRtcpSendHeartBeat;
-(void)sendLastRemoteVideoFrame:(CVBufferRef)arg1 ;
-(void)overrideConfigWithDefaults;
-(void)cacheRemoteVideoFrame:(CVBufferRef)arg1 ;
-(void)destroyVideoModules;
-(void)collectVideoConfigMetrics:(CFDictionaryRef)arg1 ;
-(void)collectVideoStreamStartMetrics:(CFDictionaryRef)arg1 ;
-(BOOL)setRTPPayloads:(int*)arg1 numPayloads:(int)arg2 withError:(id*)arg3 ;
-(long long)streamToken;
-(void)requestLastDecodedFrame;
@end

