/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:23:54 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PrivateFrameworks/NanoMediaRemote.framework/NanoMediaRemote
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/NMROriginObserver.h>

@protocol NMROriginObserverDelegate;
@class NMROrigin, NMRNowPlayingState, NMRPlaybackQueue, MPCPlayer, MPRemoteCommandCenter;

@interface NMROriginLocalObserver : NSObject <NMROriginObserver> {

	MPCPlayer* _player;
	MPRemoteCommandCenter* _commandCenter;
	NMRNowPlayingState* _nowPlayingState;
	BOOL shouldObservePlaybackQueue;
	BOOL shouldObserveArtwork;
	id<NMROriginObserverDelegate> _delegate;
	NMROrigin* _origin;
	NMRPlaybackQueue* playbackQueue;

}

@property (nonatomic,readonly) NMROrigin * origin;                                       //@synthesize origin=_origin - In the implementation block
@property (nonatomic,readonly) NMRNowPlayingState * nowPlayingState; 
@property (nonatomic,readonly) NMRPlaybackQueue * playbackQueue; 
@property (assign,nonatomic,__weak) id<NMROriginObserverDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) BOOL shouldObservePlaybackQueue; 
@property (assign,nonatomic) BOOL shouldObserveArtwork; 
-(id)initWithOrigin:(id)arg1 ;
-(id<NMROriginObserverDelegate>)delegate;
-(void)setDelegate:(id<NMROriginObserverDelegate>)arg1 ;
-(void)dealloc;
-(id)description;
-(NMROrigin *)origin;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(NMRPlaybackQueue *)playbackQueue;
-(void)endObserving;
-(void)_updateSupportedCommands;
-(id)initWithOrigin:(id)arg1 player:(id)arg2 ;
-(void)_updateNowPlayingState;
-(void)_updatePlaybackState;
-(void)_notifyObserverOfUpdatedNowPlayingInfo;
-(void)_notifyObserverOfUpdatedElapsedTime;
-(void)_notifyObserverOfUpdatedPlaybackState;
-(void)_notifyObserverOfUpdatedSupportedCommands;
-(void)updateNowPlayingStateWithCompletion:(/*^block*/id)arg1 ;
-(NMRNowPlayingState *)nowPlayingState;
-(BOOL)shouldObservePlaybackQueue;
-(void)setShouldObservePlaybackQueue:(BOOL)arg1 ;
-(BOOL)shouldObserveArtwork;
-(void)setShouldObserveArtwork:(BOOL)arg1 ;
-(void)beginObserving;
@end

