/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:04:30 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/Frameworks/HealthKit.framework/HealthKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <HealthKit/HealthKit-Structs.h>
#import <libobjc.A.dylib/HKHealthRecordsStoreInterface.h>
#import <libobjc.A.dylib/_HKXPCExportable.h>

@class HKPluginProxyProvider, NSHashTable, HKHealthStore, NSString;

@interface HKHealthRecordsStore : NSObject <HKHealthRecordsStoreInterface, _HKXPCExportable> {

	HKPluginProxyProvider* _proxyProvider;
	long long _ingestionState;
	NSHashTable* _ingestionStateChangeListeners;

}

@property (retain) NSHashTable * ingestionStateChangeListeners;              //@synthesize ingestionStateChangeListeners=_ingestionStateChangeListeners - In the implementation block
@property (nonatomic,readonly) HKHealthStore * healthStore; 
@property (assign) long long ingestionState;                                 //@synthesize ingestionState=_ingestionState - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)exportedInterface;
-(void)conceptForCodings:(id)arg1 preferredSystems:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_fetchHealthRecordsPluginServerProxyWithHandler:(/*^block*/id)arg1 errorHandler:(/*^block*/id)arg2 ;
-(/*^block*/id)_actionCompletionWithObjectOnClientQueue:(/*^block*/id)arg1 ;
-(void)ingestHealthRecordsWithFHIRDocumentHandle:(id)arg1 accountIdentifier:(NSUUID*)arg2 options:(unsigned long long)arg3 completion:(/*^block*/id)arg4 ;
-(void)displayStringForMedicalCodingSystem:(id)arg1 code:(id)arg2 version:(id)arg3 completion:(/*^block*/id)arg4 ;
-(long long)ingestionState;
-(void)setIngestionState:(long long)arg1 ;
-(void)dispatchIngestionStateChange;
-(NSHashTable *)ingestionStateChangeListeners;
-(void)setIngestionStateChangeListeners:(NSHashTable *)arg1 ;
-(void)clientRemote_updateIngestionState:(long long)arg1 ;
-(void)fetchAllAccountsWithCompletion:(/*^block*/id)arg1 ;
-(void)fetchAccountsForGateways:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)fetchAccountForSource:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)accountWithIdentifier:(NSUUID*)arg1 setUserEnabled:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(void)deleteAccountWithIdentifier:(NSUUID*)arg1 completion:(/*^block*/id)arg2 ;
-(void)invalidateCredentialForAccountWithIdentifier:(NSUUID*)arg1 completion:(/*^block*/id)arg2 ;
-(void)beginInitialLoginSessionForGateway:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)beginReloginSessionForAccount:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)endLoginSessionWithState:(id)arg1 code:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)pruneAuthenticationDataWithCompletion:(/*^block*/id)arg1 ;
-(void)replaceAccountWithNewAccountForAccountWithIdentifier:(NSUUID*)arg1 usingCredentialWithPersistentID:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)ingestHealthRecordsWithOptions:(unsigned long long)arg1 completion:(/*^block*/id)arg2 ;
-(void)ingestHealthRecordsWithFHIRDocumentHandle:(id)arg1 accountIdentifier:(NSUUID*)arg2 completion:(/*^block*/id)arg3 ;
-(void)resetHealthRecordsLastExtractedRowIDWithCompletion:(/*^block*/id)arg1 ;
-(void)getHealthRecordsIngestionFrequencyWithCompletion:(/*^block*/id)arg1 ;
-(void)setHealthRecordsIngestionFrequency:(long long)arg1 completion:(/*^block*/id)arg2 ;
-(void)fetchRawSourceStringForHealthRecord:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)fetchFHIRJSONDocumentWithAccountIdentifier:(NSUUID*)arg1 completion:(/*^block*/id)arg2 ;
-(void)displayStringForMedicalCodingSystem:(id)arg1 code:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)performCodingTasks:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)triggerClinicalOptInDataCollectionForReason:(long long)arg1 completion:(/*^block*/id)arg2 ;
-(void)resetClinicalOptInDataCollectionAnchorsWithCompletion:(/*^block*/id)arg1 ;
-(void)fetchClinicalOptInDataCollectionFilePathsWithCompletion:(/*^block*/id)arg1 ;
-(void)triggerClinicalContentAnalyticsForReason:(long long)arg1 options:(unsigned long long)arg2 completion:(/*^block*/id)arg3 ;
-(void)resetClinicalContentAnalyticsAnchorsWithCompletion:(/*^block*/id)arg1 ;
-(void)fetchRemoteSearchResultsPageForQuery:(id)arg1 latitude:(id)arg2 longitude:(id)arg3 from:(long long)arg4 completion:(/*^block*/id)arg5 ;
-(void)cancelInFlightSearchQueriesWithCompletion:(/*^block*/id)arg1 ;
-(void)fetchRemoteProviderWithExternalID:(id)arg1 batchID:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)fetchRemoteGatewayWithExternalID:(id)arg1 batchID:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)fetchLogoDataForBrand:(id)arg1 scaleKey:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)fetchLogoDataForFeaturedBrandsAtScaleKey:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)addIngestionStateListener:(id)arg1 ;
-(void)createStaticAccountWithTitle:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)badgeForNewHealthRecordsWithCompletion:(/*^block*/id)arg1 ;
-(void)notifyForNewHealthRecordsWithCompletion:(/*^block*/id)arg1 ;
-(void)_hk_shouldPromptForOptInClinicalDataCollection:(/*^block*/id)arg1 ;
-(id)remoteInterface;
-(void)connectionInvalidated;
-(/*^block*/id)_objectCompletionOnClientQueue:(/*^block*/id)arg1 ;
-(/*^block*/id)_actionCompletionOnClientQueue:(/*^block*/id)arg1 ;
-(id)initWithHealthStore:(id)arg1 ;
-(HKHealthStore *)healthStore;
@end

