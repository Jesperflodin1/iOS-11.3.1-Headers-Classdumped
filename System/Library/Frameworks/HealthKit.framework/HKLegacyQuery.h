/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:04:30 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/Frameworks/HealthKit.framework/HealthKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <HealthKit/HKQuery.h>

@protocol HKQueryDelegate;
@class NSPredicate, NSMutableArray;

@interface HKLegacyQuery : HKQuery {

	int _batchCount;
	NSPredicate* _predicate;
	id<HKQueryDelegate> _delegate;
	NSMutableArray* _sampleObjects;
	NSMutableArray* _deletedObjects;
	BOOL _receivedInitialResults;
	double _collectionInterval;

}

@property (getter=_hasReceivedInitialResults,nonatomic,readonly) BOOL receivedInitialResults;                                  //@synthesize receivedInitialResults=_receivedInitialResults - In the implementation block
@property (assign,setter=_setCollectionInterval:,getter=_collectionInterval,nonatomic) double collectionInterval;              //@synthesize collectionInterval=_collectionInterval - In the implementation block
@property (assign,setter=_setBatchCount:,nonatomic) int batchCount; 
+(id)clientInterfaceProtocol;
+(Class)_queryServerDataObjectClass;
+(void)configureClientInterface:(id)arg1 ;
-(void)queue_validate;
-(void)queue_connectToQueryServerWithHealthStore:(id)arg1 activationUUID:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)queue_deliverError:(id)arg1 ;
-(BOOL)queue_shouldDeactivateAfterInitialResults;
-(void)queue_queryDidDeactivate:(id)arg1 ;
-(id)_initWithDataType:(id)arg1 predicate:(id)arg2 ;
-(void)_dispatchToClientForUUID:(id)arg1 block:(/*^block*/id)arg2 ;
-(void)_dispatchAsyncToResourceQueue:(/*^block*/id)arg1 ;
-(void)_queue_configureQueryServerDataObject:(id)arg1 ;
-(void)_queue_cleanupAfterDeactivation;
-(void)_queue_validate;
-(BOOL)_queue_shouldStayAliveAfterInitialResults;
-(/*^block*/id)_queue_errorHandler;
-(double)_collectionInterval;
-(void)_queue_requestServerProxyWithUUID:(id)arg1 server:(id)arg2 handler:(/*^block*/id)arg3 ;
-(void)_setCollectionInterval:(double)arg1 ;
-(BOOL)_requiresValidSampleType;
-(void)deliverSampleObjects:(id)arg1 deletedObjects:(id)arg2 withAnchor:(id)arg3 forQuery:(id)arg4 ;
-(void)_dispatchSyncToResourceQueue:(/*^block*/id)arg1 ;
-(void)_client_receivedInitialResults;
-(BOOL)_shouldStayAliveAfterInitialResults;
-(void)deliverSampleBatch:(id)arg1 deletedBatch:(id)arg2 final:(BOOL)arg3 anchor:(id)arg4 forQuery:(id)arg5 ;
-(void)deliverResultsResetWithAnchor:(id)arg1 final:(BOOL)arg2 forQuery:(id)arg3 ;
-(void)dataUpdatedInDatabaseWithAnchor:(id)arg1 query:(id)arg2 ;
-(void)deliverUpdatedSources:(id)arg1 added:(id)arg2 forQuery:(id)arg3 ;
-(void)deliverValuesByType:(id)arg1 forQuery:(id)arg2 ;
-(void)deliverUpdatedValuesByType:(id)arg1 forQuery:(id)arg2 ;
-(void)deliverResetValuesByType:(id)arg1 forQuery:(id)arg2 ;
-(void)deliverStatisticsBatch:(id)arg1 initialDelivery:(BOOL)arg2 finalBatch:(BOOL)arg3 anchor:(id)arg4 forQuery:(id)arg5 ;
-(void)deliverInitialStatisticsObjects:(id)arg1 anchor:(id)arg2 forQuery:(id)arg3 ;
-(void)deliverUpdatedStatistics:(id)arg1 anchor:(id)arg2 forQuery:(id)arg3 ;
-(void)resetStatisticsForQuery:(id)arg1 ;
-(void)deliverResetStatisticsObjects:(id)arg1 forQuery:(id)arg2 ;
-(void)deliverStatistics:(id)arg1 forQuery:(id)arg2 ;
-(void)deliverActivityMoveStatistics:(id)arg1 exerciseStatistics:(id)arg2 standHoursInfo:(id)arg3 workouts:(id)arg4 forQuery:(id)arg5 ;
-(void)_setBatchCount:(int)arg1 ;
-(int)batchCount;
-(BOOL)_hasReceivedInitialResults;
-(void)deliverCurrentActivityCache:(id)arg1 moveStatistics:(id)arg2 exerciseStatistics:(id)arg3 standHoursInfo:(id)arg4 queryUUID:(id)arg5 ;
@end

