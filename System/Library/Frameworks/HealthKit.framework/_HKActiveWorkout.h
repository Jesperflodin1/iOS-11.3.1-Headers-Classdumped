/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:04:29 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/Frameworks/HealthKit.framework/HealthKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <HealthKit/HKWorkout.h>
#import <libobjc.A.dylib/_HKActiveWorkoutClient.h>

@protocol _HKActiveWorkoutDelegate, _HKActiveWorkoutLifecycleDelegate, OS_dispatch_queue, NSXPCProxyCreating, _HKActiveWorkoutResumeDelegate;
@class NSObject, HKQuantity, NSUUID, NSDate, NSMutableDictionary, NSMutableData, _HKLocationSeriesStore, _HKWorkoutRouteStore, NSDictionary, NSData, NSString;

@interface _HKActiveWorkout : HKWorkout <_HKActiveWorkoutClient> {

	id<_HKActiveWorkoutDelegate> _delegate;
	id<_HKActiveWorkoutLifecycleDelegate> _lifecycleDelegate;
	NSObject*<OS_dispatch_queue> _propertyQueue;
	NSObject*<OS_dispatch_queue> _clientQueue;
	long long _workoutState;
	long long _serverState;
	HKQuantity* _lapLength;
	long long _swimmingLocation;
	NSUUID* _fitnessMachineSessionID;
	NSDate* _lastObservedDate;
	NSMutableDictionary* _resumeDataByType;
	id<NSXPCProxyCreating> _serverProxy;
	NSMutableData* _associatedObjectUUIDData;
	_HKLocationSeriesStore* _locationStore;
	_HKWorkoutRouteStore* _workoutRouteStore;
	BOOL _shouldUseDeviceData;
	id<_HKActiveWorkoutResumeDelegate> _resumeDelegate;

}

@property (readonly) NSDictionary * resumeDataByType;                                                                                                 //@synthesize resumeDataByType=_resumeDataByType - In the implementation block
@property (getter=_associatedObjectUUIDData,readonly) NSData * associatedObjectUUIDData; 
@property (getter=_shouldUseDeviceData,readonly) BOOL shouldUseDeviceData;                                                                            //@synthesize shouldUseDeviceData=_shouldUseDeviceData - In the implementation block
@property (setter=_setLifecycleDelegate:,getter=_lifecycleDelegate,__weak) id<_HKActiveWorkoutLifecycleDelegate> lifecycleDelegate; 
@property (assign,setter=_setResumeDelegate:,getter=_resumeDelegate,nonatomic,__weak) id<_HKActiveWorkoutResumeDelegate> resumeDelegate;              //@synthesize resumeDelegate=_resumeDelegate - In the implementation block
@property (__weak) id<_HKActiveWorkoutDelegate> delegate; 
@property (readonly) long long workoutState; 
@property (readonly) long long serverState; 
@property (nonatomic,retain) HKQuantity * lapLength; 
@property (assign,nonatomic) long long swimmingLocation; 
@property (nonatomic,retain) NSUUID * fitnessMachineSessionID; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(BOOL)supportsSecureCoding;
+(id)_sanitizeWorkoutEvents:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 ;
+(id)_workoutWithActivityType:(unsigned long long)arg1 startDate:(id)arg2 endDate:(id)arg3 workoutEvents:(id)arg4 duration:(double)arg5 totalActiveEnergyBurned:(id)arg6 totalBasalEnergyBurned:(id)arg7 totalDistance:(id)arg8 goalType:(unsigned long long)arg9 goal:(id)arg10 shouldUseDeviceData:(BOOL)arg11 metadata:(id)arg12 ;
+(id)_clientInterface;
+(id)_serverInterface;
-(id<_HKActiveWorkoutDelegate>)delegate;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)setDelegate:(id<_HKActiveWorkoutDelegate>)arg1 ;
-(double)duration;
-(id)totalDistance;
-(id)_init;
-(id)metadata;
-(void)endWorkoutWithDate:(id)arg1 metadata:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)_workoutServerWithErrorHandler:(/*^block*/id)arg1 ;
-(void)_propertyQueue_transitionToServerState:(long long)arg1 ;
-(void)_handleWorkoutPausedWithDate:(id)arg1 userInitiated:(BOOL)arg2 ;
-(void)_propertyQueue_alertDelegateDidUpdateState:(long long)arg1 date:(id)arg2 ;
-(void)_propertyQueue_setEndDate:(id)arg1 ;
-(id)_resumeDelegate;
-(id)_propertyQueue_endDate;
-(void)_propertyQueue_deactivate;
-(id)_lifecycleDelegate;
-(id)_propertyQueue_serverConfiguration;
-(void)_propertyQueue_alertDelegateDidEncounterError:(id)arg1 ;
-(void)setSwimmingLocation:(long long)arg1 ;
-(void)setFitnessMachineSessionID:(NSUUID *)arg1 ;
-(id)_propertyQueue_addAssociatedObjectUUIDs:(id)arg1 ;
-(void)_propertyQueue_updateTotalsWithQuantity:(id)arg1 quantityType:(id)arg2 ;
-(void)_propertyQueue_alertDelegateWorkoutDidUpdateTotalDistance;
-(void)_propertyQueue_handleUpdatesForDistanceQty:(id)arg1 ;
-(void)_propertyQueue_handleUpdatesForPowerQty:(id)arg1 metricType:(unsigned long long)arg2 ;
-(void)_propertyQueue_handleUpdatesForPaceQty:(id)arg1 metricType:(unsigned long long)arg2 ;
-(void)_propertyQueue_handleUpdatesForElapsedTimeQty:(id)arg1 ;
-(void)_propertyQueue_handleUpdatesForAverageHeartRate:(id)arg1 ;
-(void)_propertyQueue_alertDelegateDidReceiveWorkoutEvent:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_propertyQueue_addActiveEnergyBurned:(id)arg1 ;
-(void)_propertyQueue_alertDelegateWorkoutDidUpdateTotalActiveEnergyBurned;
-(void)_propertyQueue_addBasalEnergyBurned:(id)arg1 ;
-(void)_propertyQueue_alertDelegateWorkoutDidUpdateTotalBasalEnergyBurned;
-(void)_propertyQueue_addDistance:(id)arg1 ;
-(void)_propertyQueue_addSwimmingStrokeCount:(id)arg1 ;
-(void)_propertyQueue_alertDelegateWorkoutDidUpdateTotalSwimmingStrokeCount;
-(void)_propertyQueue_addFlightsClimbed:(id)arg1 ;
-(void)_propertyQueue_alertDelegateWorkoutDidUpdateTotalFlightsClimbed;
-(void)_propertyQueue_addStepCount:(id)arg1 ;
-(id)_inactiveCopyWithEndDate:(id)arg1 ;
-(BOOL)_propertyQueue_serverAttached;
-(BOOL)_serverAttached;
-(double)_durationWithEndDate:(id)arg1 ;
-(void)activateWorkoutWithCompletion:(/*^block*/id)arg1 ;
-(void)pauseWorkoutWithDate:(id)arg1 userInitiated:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(void)resumeWorkoutFromDate:(id)arg1 userInitiated:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(void)endWorkoutWithDate:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_nukeWithCompletion:(/*^block*/id)arg1 ;
-(void)_insertOrUpdateMetadata:(id)arg1 ;
-(void)_addSegmentMarkerAtDate:(id)arg1 ;
-(void)_attachServerWithClientQueue:(id)arg1 lifecycleDelegate:(id)arg2 healthStore:(id)arg3 fitnessMachineConnectionClient:(id)arg4 fitnessMachineSessionConfiguration:(id)arg5 willReactivate:(BOOL)arg6 completion:(/*^block*/id)arg7 ;
-(void)_connectionDidEncounterError:(id)arg1 ;
-(void)_addSamples:(id)arg1 ;
-(id)_inactiveCopy;
-(void)_prepareForSaving;
-(void)_setServerProxy:(id)arg1 ;
-(void)_setLifecycleDelegate:(id)arg1 ;
-(id)_associatedObjectUUIDData;
-(NSUUID *)fitnessMachineSessionID;
-(id)locationSeriesSamples;
-(id)workoutRoutes;
-(id)_resumeDataByQuantityType;
-(void)_restoreResumeData:(id)arg1 ;
-(void)_restoreState:(long long)arg1 ;
-(void)_restoreSampleUUIDs:(id)arg1 ;
-(void)_restoreFlightsClimbed:(id)arg1 ;
-(void)_restoreActiveEnergyBurned:(id)arg1 ;
-(void)_restoreBasalEnergyBurned:(id)arg1 ;
-(void)_restoreDistance:(id)arg1 ;
-(void)_restoreLocationSeriesSample:(id)arg1 ;
-(void)_restoreWorkoutRoutes:(id)arg1 ;
-(void)_restoreEvents:(id)arg1 ;
-(void)_setResumeDelegate:(id)arg1 ;
-(id)endDate;
-(void)_setEndDate:(id)arg1 ;
-(long long)workoutState;
-(id)totalEnergyBurned;
-(void)setLapLength:(HKQuantity *)arg1 ;
-(HKQuantity *)lapLength;
-(void)_setTotalEnergyBurned:(id)arg1 ;
-(void)_setTotalDistance:(id)arg1 ;
-(NSDictionary *)resumeDataByType;
-(long long)swimmingLocation;
-(long long)serverState;
-(void)clientRemote_serverPausedWithDate:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)clientRemote_updateTotalsWithQuantities:(id)arg1 resumeData:(id)arg2 UUIDs:(id)arg3 ;
-(void)clientRemote_updateMetrics:(id)arg1 ;
-(BOOL)_shouldUseDeviceData;
-(void)clientRemote_serverStoppedWithDate:(id)arg1 ;
-(void)clientRemote_serverFailedWithError:(id)arg1 ;
-(void)clientRemote_receivedWorkoutEvent:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)clientRemote_updateElevationChange:(id)arg1 ;
-(void)clientRemote_updateLocationSeriesSample:(id)arg1 ;
-(void)clientRemote_updateWorkoutRoute:(id)arg1 ;
-(BOOL)_validateForSavingWithClientEntitlements:(id)arg1 error:(id*)arg2 ;
-(id)_serverProxy;
@end

