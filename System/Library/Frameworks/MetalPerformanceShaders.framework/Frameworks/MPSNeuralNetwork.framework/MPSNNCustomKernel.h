/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:06:59 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSNeuralNetwork.framework/MPSNeuralNetwork
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MPSNeuralNetwork/MPSNeuralNetwork-Structs.h>
#import <MPSCore/MPSKernel.h>

@protocol MPSNNCustomKernelProvider, MPSNNPadding, MPSImageAllocator;
@interface MPSNNCustomKernel : MPSKernel {

	id<MPSNNCustomKernelProvider> _provider;
	unsigned long long _maxSrcCount;
	SrcProperties* _srcProperties;
	id<MPSNNPadding> _padding;
	BOOL _isBackwards;
	id<MPSImageAllocator> _destinationImageAllocator;
	unsigned long long _destinationFeatureChannelOffset;
	SCD_Struct_MP12 _clipRect;

}

@property (nonatomic,readonly) id<MPSNNCustomKernelProvider> kernelProvider;               //@synthesize provider=_provider - In the implementation block
@property (assign,nonatomic) SCD_Struct_MP12 clipRect;                                     //@synthesize clipRect=_clipRect - In the implementation block
@property (nonatomic,retain) id<MPSNNPadding> padding;                                     //@synthesize padding=_padding - In the implementation block
@property (nonatomic,retain) id<MPSImageAllocator> destinationImageAllocator;              //@synthesize destinationImageAllocator=_destinationImageAllocator - In the implementation block
+(const MPSLibraryInfo*)libraryInfo;
-(id)initWithCoder:(id)arg1 device:(id)arg2 ;
-(id)destinationImageDescriptorForSourceImages:(id)arg1 sourceStates:(id)arg2 ;
-(void)setDestinationImageAllocator:(id<MPSImageAllocator>)arg1 ;
-(id)temporaryResultStateForCommandBuffer:(id)arg1 sourceImages:(id)arg2 sourceStates:(id)arg3 destinationImage:(id)arg4 ;
-(id)resultStateForSourceImages:(id)arg1 sourceStates:(id)arg2 destinationImage:(id)arg3 ;
-(id<MPSImageAllocator>)destinationImageAllocator;
-(id)initWithDevice:(id)arg1 kernelProvider:(id)arg2 ;
-(void)encodeToCommandBuffer:(id)arg1 sourceImages:(id)arg2 sourceStates:(id)arg3 destinationStates:(id)arg4 destinationImage:(id)arg5 ;
-(void)hintWithCommandBuffer:(id)arg1 sourceImages:(id)arg2 sourceStates:(id)arg3 destinationImage:(id)arg4 ;
-(id)setKernelProvider:(id<MPSNNCustomKernelProvider>)arg1 ;
-(id)destinationImageDescriptorForSourceImages:(id)arg1 sourceStates:(id)arg2 paddingMethod:(unsigned long long)arg3 ;
-(void)encodeToCommandBuffer:(id)arg1 sourceImages:(id)arg2 sourceStates:(id)arg3 destinationStates:(id)arg4 destinationImage:(id)arg5 prefetch:(BOOL)arg6 ;
-(void)encodeBatchToCommandBuffer:(id)arg1 sourceImages:(id)arg2 sourceStates:(id)arg3 destinationStates:(id)arg4 destinationImage:(NSArray*)arg5 prefetch:(BOOL)arg6 ;
-(void)setOffset:(SCD_Struct_MP11)arg1 atIndex:(unsigned long long)arg2 ;
-(unsigned long long)edgeModeAtIndex:(unsigned long long)arg1 ;
-(void)setEdgeMode:(unsigned long long)arg1 atIndex:(unsigned long long)arg2 ;
-(id)encodeToCommandBuffer:(id)arg1 sourceImages:(id)arg2 sourceStates:(id)arg3 destinationStates:(id)arg4 ;
-(void)hintBatchWithCommandBuffer:(id)arg1 sourceImages:(id)arg2 sourceStates:(id)arg3 destinationImage:(NSArray*)arg4 ;
-(NSArray*)resultStateBatchForSourceImages:(id)arg1 sourceStates:(id)arg2 destinationImages:(NSArray*)arg3 ;
-(id<MPSNNCustomKernelProvider>)kernelProvider;
-(void)encodeWithCoder:(id)arg1 ;
-(void)dealloc;
-(void)setPadding:(id<MPSNNPadding>)arg1 ;
-(id<MPSNNPadding>)padding;
-(SCD_Struct_MP11)offsetAtIndex:(unsigned long long)arg1 ;
-(SCD_Struct_MP12)clipRect;
-(void)setClipRect:(SCD_Struct_MP12)arg1 ;
@end

