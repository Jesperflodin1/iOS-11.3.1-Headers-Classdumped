/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:09:31 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/Frameworks/UIKit.framework/UIKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/AFDictationDelegate.h>

@protocol UIDictationConnectionDelegate, UIDictationConnectionTokenFilterProtocol;
@class AFDictationConnection, NSString;

@interface UIDictationConnection : NSObject <AFDictationDelegate> {

	BOOL _offlineOnly;
	id<UIDictationConnectionDelegate> _delegate;
	id<UIDictationConnectionTokenFilterProtocol> _tokenFilter;
	AFDictationConnection* _connection;

}

@property (nonatomic,retain) AFDictationConnection * connection;                                           //@synthesize connection=_connection - In the implementation block
@property (assign,nonatomic) BOOL offlineOnly;                                                             //@synthesize offlineOnly=_offlineOnly - In the implementation block
@property (assign,nonatomic,__weak) id<UIDictationConnectionDelegate> delegate;                            //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic,__weak) id<UIDictationConnectionTokenFilterProtocol> tokenFilter;              //@synthesize tokenFilter=_tokenFilter - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(BOOL)isDictationAvailable;
+(BOOL)dictationIsSupportedForLanguageCode:(id)arg1 error:(id*)arg2 ;
+(void)cacheSupportedDictationLanguages;
+(BOOL)dictationRestricted;
+(void)afDelegate:(id)arg1 didReceiveSearchResults:(id)arg2 recognizedText:(id)arg3 stable:(BOOL)arg4 final:(BOOL)arg5 ;
+(void)_updateFromGlobalOptions:(id)arg1 ;
+(id)interpretationFromSpeechTokens:(id)arg1 startIndex:(unsigned long long)arg2 filterBlock:(/*^block*/id)arg3 ;
-(id<UIDictationConnectionDelegate>)delegate;
-(void)setDelegate:(id<UIDictationConnectionDelegate>)arg1 ;
-(void)start;
-(AFDictationConnection *)connection;
-(void)setConnection:(AFDictationConnection *)arg1 ;
-(BOOL)dictationIsAvailableForLanguage:(id)arg1 ;
-(void)sendSpeechCorrection:(id)arg1 forIdentifier:(id)arg2 ;
-(void)cancelAvailabilityMonitoring;
-(void)beginAvailabilityMonitoring;
-(void)restartDictation;
-(float)averagePower;
-(void)startForFileAtURL:(id)arg1 forLanguage:(id)arg2 ;
-(void)endSession;
-(void)setTokenFilter:(id<UIDictationConnectionTokenFilterProtocol>)arg1 ;
-(void)cancelSpeech;
-(void)stopSpeech;
-(void)stopSpeechWithoutAlert;
-(void)preheat;
-(void)dictationConnnectionDidChangeAvailability:(id)arg1 ;
-(void)dictationConnection:(id)arg1 didReceiveSearchResults:(id)arg2 recognizedText:(id)arg3 stable:(BOOL)arg4 final:(BOOL)arg5 ;
-(id)_createConnectionOptions;
-(id)_initializeWithOptions:(id)arg1 ;
-(void)_startWithOptions:(id)arg1 ;
-(id)_dictationOptions:(id)arg1 ;
-(id)_speechOptions:(id)arg1 ;
-(void)setSuppressStopAlert:(BOOL)arg1 ;
-(void)dictationConnectionSpeechRecordingWillBegin:(id)arg1 ;
-(void)dictationConnectionSpeechRecordingDidBegin:(id)arg1 ;
-(void)dictationConnectionSpeechRecordingDidEnd:(id)arg1 ;
-(void)dictationConnectionSpeechRecordingDidCancel:(id)arg1 ;
-(void)dictationConnection:(id)arg1 speechRecordingDidFail:(id)arg2 ;
-(void)dictationConnection:(id)arg1 speechRecognitionDidFail:(id)arg2 ;
-(void)dictationConnection:(id)arg1 didRecognizePhrases:(id)arg2 languageModel:(id)arg3 correctionIdentifier:(id)arg4 ;
-(void)dictationConnection:(id)arg1 didRecognizeTokens:(id)arg2 languageModel:(id)arg3 ;
-(void)dictationConnectionSpeechRecognitionDidSucceed:(id)arg1 ;
-(id<UIDictationConnectionTokenFilterProtocol>)tokenFilter;
-(BOOL)offlineOnly;
-(void)setOfflineOnly:(BOOL)arg1 ;
@end

