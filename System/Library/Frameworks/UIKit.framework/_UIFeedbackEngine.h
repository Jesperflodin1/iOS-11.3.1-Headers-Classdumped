/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:09:37 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/Frameworks/UIKit.framework/UIKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSMutableDictionary, NSTimer, NSString;

@interface _UIFeedbackEngine : NSObject {

	NSMutableDictionary* _completionBlocks;
	NSTimer* _suspensionTimer;
	BOOL _suspended;
	long long _prewarmCount;
	long long _state;
	unsigned long long _numberOfClients;
	unsigned long long _backgroundTaskIdentifier;
	long long _suspensionState;

}

@property (assign,nonatomic) long long prewarmCount;                                                                                                         //@synthesize prewarmCount=_prewarmCount - In the implementation block
@property (assign,setter=_setState:,getter=_state,nonatomic) long long state;                                                                                //@synthesize state=_state - In the implementation block
@property (nonatomic,readonly) unsigned long long numberOfClients;                                                                                           //@synthesize numberOfClients=_numberOfClients - In the implementation block
@property (assign,setter=_setSuspended:,getter=_isSuspended,nonatomic) BOOL suspended;                                                                       //@synthesize suspended=_suspended - In the implementation block
@property (assign,setter=_setBackgroundTaskIdentifier:,getter=_backgroundTaskIdentifier,nonatomic) unsigned long long backgroundTaskIdentifier;              //@synthesize backgroundTaskIdentifier=_backgroundTaskIdentifier - In the implementation block
@property (getter=_suspensionState,nonatomic,readonly) long long suspensionState;                                                                            //@synthesize suspensionState=_suspensionState - In the implementation block
@property (nonatomic,readonly) NSString * _stats_key; 
@property (nonatomic,readonly) double currentTime; 
+(id)sharedEngine;
+(BOOL)_supportsPlayingFeedback:(id)arg1 ;
+(id)engineForFeedback:(id)arg1 ;
-(id)init;
-(id)description;
-(void)_setSuspended:(BOOL)arg1 ;
-(long long)_state;
-(NSString *)_stats_key;
-(void)_setState:(long long)arg1 ;
-(void)_teardownBackgroundTask;
-(BOOL)_isSuspended;
-(void)_updateSuspension;
-(void)_serviceBlocksForState:(long long)arg1 withSuccess:(BOOL)arg2 ;
-(void)_stats_outOfChannels;
-(void)_performAtState:(long long)arg1 block:(/*^block*/id)arg2 ;
-(void)_deactivateEngineIfPossible;
-(double)currentTime;
-(void)_activateUnderlyingPlayerWithCompletion:(/*^block*/id)arg1 ;
-(BOOL)_teardownUnderlyingPlayerIfPossible;
-(void)_prewarmUnderlyingPlayerWithCompletion:(/*^block*/id)arg1 ;
-(BOOL)_cooldownUnderlyingPlayerIfPossible;
-(void)_dequeueReusableFeedbackPlayerWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)_willPlayFeedback:(id)arg1 atTime:(double)arg2 ;
-(void)_willCancelFeedback:(id)arg1 ;
-(void)_applicationDidBecomeActive:(id)arg1 ;
-(BOOL)_canPlayFeedback:(id)arg1 ;
-(unsigned long long)_backgroundTaskIdentifier;
-(void)_applicationWillResignActive:(id)arg1 ;
-(void)_startWarmingFeedbacks:(id)arg1 ;
-(void)_stopWarmingFeedbacks:(id)arg1 ;
-(void)_hostWillEnterForeground:(id)arg1 ;
-(void)_hostDidEnterBackground:(id)arg1 ;
-(void)_prewarmWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)_activateWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)_cooldown;
-(void)_deactivate;
-(id)_statsSuffix;
-(id)_activationCountStatistics;
-(id)_activationDurationStatistics;
-(id)_prewarmCountStatistics;
-(id)_prewarmDurationStatistics;
-(id)_outOfChannelsCountStatistics;
-(void)_stats_stateDidChangeFrom:(long long)arg1 to:(long long)arg2 ;
-(void)_removeViewControllerWillDisconnect:(id)arg1 ;
-(void)_applicationWillSuspend:(id)arg1 ;
-(void)_applicationDidResume:(id)arg1 ;
-(unsigned long long)numberOfClients;
-(long long)prewarmCount;
-(void)_cooldownEngineIfPossible;
-(void)_setupBackgroundTask;
-(void)_prewarmEngine;
-(void)_activateEngine;
-(void)_suspendEngineNow;
-(void)_setBackgroundTaskIdentifier:(unsigned long long)arg1 ;
-(void)runWhenReady:(/*^block*/id)arg1 ;
-(void)setPrewarmCount:(long long)arg1 ;
-(long long)_suspensionState;
@end

