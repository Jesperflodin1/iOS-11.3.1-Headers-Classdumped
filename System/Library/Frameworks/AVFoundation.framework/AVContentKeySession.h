/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:03:45 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <AVFoundation/AVFoundation-Structs.h>
@class AVContentKeySessionInternal, NSURL, NSString, NSData;

@interface AVContentKeySession : NSObject {

	AVContentKeySessionInternal* _session;

}

@property (getter=isInternal,nonatomic,readonly) BOOL internal; 
@property (__weak,readonly) id<AVContentKeySessionDelegate> delegate; 
@property (readonly) NSObject*<OS_dispatch_queue> delegateQueue; 
@property (readonly) NSURL * storageURL; 
@property (readonly) NSString * keySystem; 
@property (readonly) NSData * contentProtectionSessionIdentifier; 
+(id)contentKeySessionWithKeySystem:(id)arg1 ;
+(id)contentKeySessionWithKeySystem:(id)arg1 storageDirectoryAtURL:(id)arg2 ;
+(id)pendingExpiredSessionReportsWithAppIdentifier:(id)arg1 storageDirectoryAtURL:(id)arg2 ;
+(void)removePendingExpiredSessionReports:(id)arg1 withAppIdentifier:(id)arg2 storageDirectoryAtURL:(id)arg3 ;
+(id)_uniqueIDForCyptorUUID:(id)arg1 cryptorRequestID:(unsigned long long)arg2 ;
-(id)_weakReference;
-(void)processContentKeyRequestWithIdentifier:(id)arg1 initializationData:(id)arg2 options:(id)arg3 ;
-(const OpaqueFigContentKeySessionRef)_figContentKeySession;
-(int)createAndInstallCustomURLHandlerForAsset:(id)arg1 outHandler:(OpaqueFigCustomURLHandler*)arg2 ;
-(id)delegateStorage;
-(void)_willDeallocOrFinalize;
-(NSString *)keySystem;
-(const OpaqueFigCPECryptorRef)createDecryptorIfNecessaryForIdentifier:(id)arg1 initializationData:(id)arg2 formatDescription:(opaqueCMFormatDescriptionRef)arg3 hlsMethod:(id)arg4 error:(id*)arg5 ;
-(void)createProtectorSessionIdentifierIfNecessary;
-(void)_setContentKeyRequest:(id)arg1 forCryptorUUID:(id)arg2 cryptorRequestID:(unsigned long long)arg3 ;
-(void)renewExpiringResponseDataForContentKeyRequest:(id)arg1 ;
-(BOOL)clientCanReceivePersistableContentKeyRequest;
-(void)issueContentKeyRequestWithCustomURLHandler:(OpaqueFigCustomURLHandlerRef)arg1 identifier:(id)arg2 requestInfo:(CFDictionaryRef)arg3 requestID:(unsigned long long)arg4 providesPersistableKey:(BOOL)arg5 ;
-(void)issueContentKeyRequestWithCustomURLProviderContext:(id)arg1 identifier:(id)arg2 initializationData:(id)arg3 providesPersistableKey:(BOOL)arg4 ;
-(void)issueContentKeyRequestWithPreloadingRequestOptions:(id)arg1 identifier:(id)arg2 initializationData:(id)arg3 providesPersistableKey:(BOOL)arg4 ;
-(id)initWithKeySystem:(id)arg1 storageDirectoryAtURL:(id)arg2 ;
-(const OpaqueFigCPECryptorRef)copyDecryptorForIdentifier:(id)arg1 initializationData:(id)arg2 ;
-(id)initWithStorageDirectoryAtURL:(id)arg1 ;
-(NSURL *)storageURL;
-(void)addContentKeyRecipient:(id)arg1 ;
-(void)removeContentKeyRecipient:(id)arg1 ;
-(id)contentKeyRecipients;
-(NSData *)contentProtectionSessionIdentifier;
-(void)makeSecureTokenForExpirationDateOfPersistableContentKey:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)_contentKeyRequestForCryptorUUID:(id)arg1 cryptorRequestID:(unsigned long long)arg2 ;
-(void)_removeContentKeyRequestForCryptorUUID:(id)arg1 cryptorRequestID:(unsigned long long)arg2 ;
-(void)issueContentKeyRequest:(id)arg1 ;
-(int)decodeKeyRequestInitializationData:(id)arg1 IntoSinfs:(id*)arg2 CodecType:(id*)arg3 MediaType:(id*)arg4 ContainerType:(id*)arg5 ;
-(id)createCryptorOptionsForIdentifier:(id)arg1 initializationData:(id)arg2 formatDescription:(opaqueCMFormatDescriptionRef)arg3 hlsMethod:(id)arg4 ;
-(id)initWithKeySystem:(id)arg1 storageDirectoryAtURL:(id)arg2 internal:(BOOL)arg3 ;
-(BOOL)hasProtector;
-(id)issueContentKeyRequestForInitializationData:(id)arg1 ;
-(void)_handleRequest:(CFDictionaryRef)arg1 withRequestID:(unsigned long long)arg2 fromHandler:(OpaqueFigCustomURLHandlerRef)arg3 willHandleRequest:(BOOL*)arg4 ;
-(void)_handleUpdateToPersistentKey:(id)arg1 forKeyIdentifier:(id)arg2 ;
-(void)_handleKeyResponseError:(id)arg1 forCryptorUUID:(id)arg2 andCryptorRequestID:(unsigned long long)arg3 ;
-(void)_handleKeyResponseSuccessfullyProcessedForCryptorUUID:(id)arg1 andCryptorRequestID:(unsigned long long)arg2 ;
-(int)setAppIdentifier:(id)arg1 ;
-(id)init;
-(id<AVContentKeySessionDelegate>)delegate;
-(void)setDelegate:(id<AVContentKeySessionDelegate>)arg1 ;
-(void)dealloc;
-(NSObject*<OS_dispatch_queue>)delegateQueue;
-(BOOL)isInternal;
-(void)setDelegate:(id)arg1 queue:(id)arg2 ;
-(void)expire;
-(void)finalize;
@end

