/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:04:29 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/Frameworks/GameController.framework/GameController
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <GameController/GameController-Structs.h>
@class NSArray, NSString, GCGamepad, GCMicroGamepad, GCExtendedGamepad, GCMotion;

@interface GCController : NSObject

@property (nonatomic,retain) id<GCNamedProfile> profile; 
@property (nonatomic,retain,readonly) NSArray * hidServices; 
@property (nonatomic,readonly) unsigned service; 
@property (nonatomic,retain) NSString * physicalDeviceUniqueID; 
@property (assign,nonatomic) BOOL physicalDeviceUsesCompass; 
@property (nonatomic,copy) id controllerPausedHandler; 
@property (retain) NSObject*<OS_dispatch_queue> handlerQueue; 
@property (nonatomic,copy,readonly) NSString * vendorName; 
@property (getter=isAttachedToDevice,nonatomic,readonly) BOOL attachedToDevice; 
@property (assign,nonatomic) long long playerIndex; 
@property (nonatomic,retain,readonly) GCGamepad * gamepad; 
@property (nonatomic,retain,readonly) GCMicroGamepad * microGamepad; 
@property (nonatomic,retain,readonly) GCExtendedGamepad * extendedGamepad; 
@property (nonatomic,retain,readonly) GCMotion * motion; 
+(void)__daemon__appDidEnterBackground;
+(void)__daemon__appWillEnterForeground;
+(void)_startWirelessControllerDiscoveryWithCompanions:(BOOL)arg1 btClassic:(BOOL)arg2 btle:(BOOL)arg3 completionHandler:(/*^block*/id)arg4 ;
+(void)__open__;
+(void)__openXPC__;
+(void)__openXPC_and_CBApplicationDidBecomeActive__;
+(void)__setLogger__:(/*^block*/id)arg1 ;
+(void)__daemon__startBonjourService;
+(void)__daemon__setUserActivityUserInfo:(id)arg1 ;
+(void)__daemon__requestConnectedHostUpdatesWithHandler:(/*^block*/id)arg1 ;
+(void)__daemon__addController:(id)arg1 ;
+(void)__daemon__removeController:(id)arg1 ;
+(void)__daemon__controllerWithUDID:(unsigned long long)arg1 setValue:(float)arg2 forElement:(int)arg3 ;
+(void)startWirelessControllerDiscoveryWithCompletionHandler:(/*^block*/id)arg1 ;
+(void)stopWirelessControllerDiscovery;
+(void)handleUIEvent:(id)arg1 ;
+(id)controllers;
-(NSString *)physicalDeviceUniqueID;
-(unsigned)service;
-(GCExtendedGamepad *)extendedGamepad;
-(GCGamepad *)gamepad;
-(unsigned)sampleRate;
-(void)setPlayerIndex:(long long)arg1 ;
-(long long)playerIndex;
-(GCMotion *)motion;
-(unsigned long long)deviceHash;
-(void)removeServiceRef:(IOHIDServiceClientRef)arg1 ;
-(BOOL)supportsMotionLite;
-(NSArray *)hidServices;
-(void)setPhysicalDeviceUniqueID:(NSString *)arg1 ;
-(BOOL)physicalDeviceUsesCompass;
-(void)setPhysicalDeviceUsesCompass:(BOOL)arg1 ;
-(void)addServiceRefs:(id)arg1 ;
-(BOOL)isForwarded;
-(id)controllerPausedHandler;
-(GCMicroGamepad *)microGamepad;
-(void)setControllerPausedHandler:(id)arg1 ;
-(BOOL)isAttachedToDevice;
-(BOOL)isEqualToController:(id)arg1 ;
-(BOOL)hasServiceRef:(IOHIDServiceClientRef)arg1 ;
-(void*)createInputBufferForDevice:(IOHIDDeviceRef)arg1 withSize:(unsigned long long)arg2 ;
-(id<GCNamedProfile>)profile;
-(void)setProfile:(id<GCNamedProfile>)arg1 ;
-(NSString *)vendorName;
-(NSObject*<OS_dispatch_queue>)handlerQueue;
-(void)setHandlerQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
@end

