/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:04:10 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/Frameworks/CoreImage.framework/CoreImage
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CoreImage/CIFilter.h>

@class CIImage, NSNumber, CIVector;

@interface CIPortraitPrepareStage : CIFilter {

	CIImage* inputImage;
	CIImage* inputDisparityImage;
	CIImage* inputThresholdImage;
	NSNumber* inputMaxNumVertices;
	NSNumber* inputSigmaS;
	NSNumber* inputSigmaRLuma;
	NSNumber* inputSigmaRChroma;
	NSNumber* inputLambda;
	NSNumber* inputMaxNumIterations;
	CIVector* inputBandRange;
	NSNumber* inputThresholdOffset;
	NSNumber* inputFilterCut;
	NSNumber* inputFeatherBandRange;
	NSNumber* inputAdaptiveThresholdRange;
	NSNumber* inputSigmaFallout;

}

@property (retain) CIImage * inputImage; 
@property (retain) CIImage * inputDisparityImage; 
@property (retain) CIImage * inputThresholdImage; 
@property (nonatomic,copy) NSNumber * inputMaxNumVertices; 
@property (nonatomic,copy) NSNumber * inputSigmaS; 
@property (nonatomic,copy) NSNumber * inputSigmaRLuma; 
@property (nonatomic,copy) NSNumber * inputSigmaRChroma; 
@property (nonatomic,copy) NSNumber * inputLambda; 
@property (nonatomic,copy) NSNumber * inputMaxNumIterations; 
@property (retain) CIVector * inputBandRange; 
@property (nonatomic,copy) NSNumber * inputThresholdOffset; 
@property (nonatomic,copy) NSNumber * inputFilterCut; 
@property (nonatomic,copy) NSNumber * inputFeatherBandRange; 
@property (nonatomic,copy) NSNumber * inputAdaptiveThresholdRange; 
@property (nonatomic,copy) NSNumber * inputSigmaFallout; 
+(id)customAttributes;
-(id)convertToHalfFloat;
-(id)renormalize01;
-(id)renormalizeThreshold;
-(id)computeBand;
-(id)protectInterior;
-(id)denormalize;
-(id)invertImage;
-(id)normalizeToPhysicalDepth;
-(id)filterCut;
-(id)boxBlur3Mono;
-(CIImage *)inputDisparityImage;
-(void)setInputDisparityImage:(CIImage *)arg1 ;
-(CIImage *)inputThresholdImage;
-(void)setInputThresholdImage:(CIImage *)arg1 ;
-(NSNumber *)inputMaxNumVertices;
-(void)setInputMaxNumVertices:(NSNumber *)arg1 ;
-(NSNumber *)inputSigmaS;
-(void)setInputSigmaS:(NSNumber *)arg1 ;
-(NSNumber *)inputSigmaRLuma;
-(void)setInputSigmaRLuma:(NSNumber *)arg1 ;
-(NSNumber *)inputSigmaRChroma;
-(void)setInputSigmaRChroma:(NSNumber *)arg1 ;
-(NSNumber *)inputLambda;
-(void)setInputLambda:(NSNumber *)arg1 ;
-(NSNumber *)inputMaxNumIterations;
-(void)setInputMaxNumIterations:(NSNumber *)arg1 ;
-(CIVector *)inputBandRange;
-(void)setInputBandRange:(CIVector *)arg1 ;
-(NSNumber *)inputThresholdOffset;
-(void)setInputThresholdOffset:(NSNumber *)arg1 ;
-(NSNumber *)inputFilterCut;
-(void)setInputFilterCut:(NSNumber *)arg1 ;
-(NSNumber *)inputFeatherBandRange;
-(void)setInputFeatherBandRange:(NSNumber *)arg1 ;
-(NSNumber *)inputAdaptiveThresholdRange;
-(void)setInputAdaptiveThresholdRange:(NSNumber *)arg1 ;
-(NSNumber *)inputSigmaFallout;
-(void)setInputSigmaFallout:(NSNumber *)arg1 ;
-(id)outputImage;
-(id)foreground;
-(void)setInputImage:(CIImage *)arg1 ;
-(CIImage *)inputImage;
@end

