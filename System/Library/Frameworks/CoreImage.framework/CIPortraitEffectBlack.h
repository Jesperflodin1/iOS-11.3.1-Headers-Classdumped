/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:04:10 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/Frameworks/CoreImage.framework/CoreImage
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CoreImage/CIPortraitEffect.h>

@class NSNumber, CIImage, CIVector;

@interface CIPortraitEffectBlack : CIPortraitEffect {

	NSNumber* inputContour;
	NSNumber* inputDepthThreshold;
	CIImage* inputDepthMap;
	CIImage* inputDisparity;
	CIImage* inputFullSizeImage;
	NSNumber* inputKickLight;
	NSNumber* inputFaceLight;
	NSNumber* inputMaxNumVertices;
	NSNumber* inputSigmaS;
	NSNumber* inputSigmaRLuma;
	NSNumber* inputSigmaRChroma;
	NSNumber* inputLambda;
	NSNumber* inputMaxNumIterations;
	CIVector* inputBandRange;
	NSNumber* inputThresholdOffset;
	NSNumber* inputFilterCut;
	NSNumber* inputFeatherBandRange;
	NSNumber* inputAdaptiveThresholdRange;
	NSNumber* inputSigmaFallout;
	NSNumber* inputMinimumEffectLevel;
	NSNumber* inputBackgroundSeparationLikehood;
	NSNumber* inputUseAbsoluteDisparity;
	NSNumber* inputSharpenRadius;
	NSNumber* inputGrainAmount;
	NSNumber* inputDepthDataScore;
	CIVector* inputFocusRect;
	NSNumber* inputFocalLengthNormalized;
	NSNumber* inputAdaptiveThresholdFaceGroupRange;
	NSNumber* inputAdaptiveThresholdFaceErrorMargin;
	NSNumber* inputAdaptiveThresholdZRangeConst;
	NSNumber* inputAdaptiveThresholdZRangeLinearDepth;
	NSNumber* inputAdaptiveThresholdConstOffset;
	NSNumber* inputAdaptiveThresholdLinearDepthOffset;
	NSNumber* inputAdaptiveThresholdDoDisparityError;

}

@property (nonatomic,retain) NSNumber * inputContour; 
@property (nonatomic,retain) NSNumber * inputDepthThreshold; 
@property (nonatomic,retain) CIImage * inputDepthMap; 
@property (nonatomic,retain) CIImage * inputDisparity; 
@property (nonatomic,retain) CIImage * inputFullSizeImage; 
@property (nonatomic,retain) NSNumber * inputUseAbsoluteDisparity; 
@property (nonatomic,retain) NSNumber * inputSharpenRadius; 
@property (nonatomic,retain) NSNumber * inputGrainAmount; 
@property (nonatomic,copy) NSNumber * inputMaxNumVertices; 
@property (nonatomic,copy) NSNumber * inputSigmaS; 
@property (nonatomic,copy) NSNumber * inputSigmaRLuma; 
@property (nonatomic,copy) NSNumber * inputSigmaRChroma; 
@property (nonatomic,copy) NSNumber * inputLambda; 
@property (nonatomic,copy) NSNumber * inputMaxNumIterations; 
@property (retain) CIVector * inputBandRange; 
@property (nonatomic,copy) NSNumber * inputThresholdOffset; 
@property (nonatomic,copy) NSNumber * inputFilterCut; 
@property (nonatomic,copy) NSNumber * inputFeatherBandRange; 
@property (nonatomic,copy) NSNumber * inputAdaptiveThresholdRange; 
@property (nonatomic,copy) NSNumber * inputSigmaFallout; 
@property (nonatomic,copy) NSNumber * inputFocalLengthNormalized; 
@property (nonatomic,copy) NSNumber * inputAdaptiveThresholdFaceGroupRange; 
@property (nonatomic,copy) NSNumber * inputAdaptiveThresholdFaceErrorMargin; 
@property (nonatomic,copy) NSNumber * inputAdaptiveThresholdZRangeConst; 
@property (nonatomic,copy) NSNumber * inputAdaptiveThresholdZRangeLinearDepth; 
@property (nonatomic,copy) NSNumber * inputAdaptiveThresholdConstOffset; 
@property (nonatomic,copy) NSNumber * inputAdaptiveThresholdLinearDepthOffset; 
@property (nonatomic,copy) NSNumber * inputAdaptiveThresholdDoDisparityError; 
@property (nonatomic,copy) NSNumber * inputMinimumEffectLevel; 
@property (nonatomic,copy) NSNumber * inputBackgroundSeparationLikehood; 
@property (nonatomic,copy) NSNumber * inputDepthDataScore; 
@property (nonatomic,copy) CIVector * inputFocusRect; 
+(id)customAttributes;
-(CIVector *)inputFocusRect;
-(void)setInputFocusRect:(CIVector *)arg1 ;
-(NSNumber *)inputMaxNumVertices;
-(void)setInputMaxNumVertices:(NSNumber *)arg1 ;
-(NSNumber *)inputSigmaS;
-(void)setInputSigmaS:(NSNumber *)arg1 ;
-(NSNumber *)inputSigmaRLuma;
-(void)setInputSigmaRLuma:(NSNumber *)arg1 ;
-(NSNumber *)inputSigmaRChroma;
-(void)setInputSigmaRChroma:(NSNumber *)arg1 ;
-(NSNumber *)inputLambda;
-(void)setInputLambda:(NSNumber *)arg1 ;
-(NSNumber *)inputMaxNumIterations;
-(void)setInputMaxNumIterations:(NSNumber *)arg1 ;
-(CIVector *)inputBandRange;
-(void)setInputBandRange:(CIVector *)arg1 ;
-(NSNumber *)inputThresholdOffset;
-(void)setInputThresholdOffset:(NSNumber *)arg1 ;
-(NSNumber *)inputFilterCut;
-(void)setInputFilterCut:(NSNumber *)arg1 ;
-(NSNumber *)inputFeatherBandRange;
-(void)setInputFeatherBandRange:(NSNumber *)arg1 ;
-(NSNumber *)inputAdaptiveThresholdRange;
-(void)setInputAdaptiveThresholdRange:(NSNumber *)arg1 ;
-(NSNumber *)inputSigmaFallout;
-(void)setInputSigmaFallout:(NSNumber *)arg1 ;
-(id)previewCubeName;
-(id)standbyCubeName;
-(id)backgroundPreviewCubeName;
-(void)setInputDepthThreshold:(NSNumber *)arg1 ;
-(CIImage *)inputDepthMap;
-(void)setInputDepthMap:(CIImage *)arg1 ;
-(NSNumber *)inputDepthThreshold;
-(void)setInputContour:(NSNumber *)arg1 ;
-(id)_faceVignette;
-(id)_applyVignette;
-(NSNumber *)inputContour;
-(void)setInputUseAbsoluteDisparity:(NSNumber *)arg1 ;
-(void)setInputFocalLengthNormalized:(NSNumber *)arg1 ;
-(void)setInputDepthDataScore:(NSNumber *)arg1 ;
-(void)setInputAdaptiveThresholdFaceGroupRange:(NSNumber *)arg1 ;
-(void)setInputAdaptiveThresholdFaceErrorMargin:(NSNumber *)arg1 ;
-(void)setInputAdaptiveThresholdZRangeConst:(NSNumber *)arg1 ;
-(void)setInputAdaptiveThresholdZRangeLinearDepth:(NSNumber *)arg1 ;
-(void)setInputAdaptiveThresholdConstOffset:(NSNumber *)arg1 ;
-(void)setInputAdaptiveThresholdLinearDepthOffset:(NSNumber *)arg1 ;
-(void)setInputAdaptiveThresholdDoDisparityError:(NSNumber *)arg1 ;
-(void)setInputSharpenRadius:(NSNumber *)arg1 ;
-(void)setInputGrainAmount:(NSNumber *)arg1 ;
-(NSNumber *)inputAdaptiveThresholdFaceGroupRange;
-(NSNumber *)inputAdaptiveThresholdFaceErrorMargin;
-(NSNumber *)inputAdaptiveThresholdDoDisparityError;
-(void)setDefaultsAbsoluteDisparity;
-(id)_faceProtect;
-(id)_faceAndBodyFill_orient1;
-(id)_faceAndBodyFill_orient6;
-(id)_getFocusRect:(id)arg1 ;
-(NSNumber *)inputFocalLengthNormalized;
-(id)_offsetImage:(id)arg1 inputDisparity:(id)arg2 thresholdImage:(id)arg3 ;
-(unsigned long long)_maxNumVerticesForImage:(id)arg1 sigmaLuma:(id)arg2 sigmaSpace:(id)arg3 ;
-(id)adaptiveNormalizationAbsolute;
-(NSNumber *)inputAdaptiveThresholdZRangeConst;
-(NSNumber *)inputAdaptiveThresholdZRangeLinearDepth;
-(NSNumber *)inputAdaptiveThresholdConstOffset;
-(NSNumber *)inputAdaptiveThresholdLinearDepthOffset;
-(id)adaptiveNormalizationGPU;
-(id)adaptiveNormalization2;
-(id)blendDepth;
-(id)invertRed;
-(id)_CIRefineBlackDepth;
-(id)_CIPrepareBlackDisparity;
-(id)_CIPrepareBlackDepth;
-(id)_CIApplyBlackDepth;
-(CIImage *)inputDisparity;
-(void)setInputDisparity:(CIImage *)arg1 ;
-(CIImage *)inputFullSizeImage;
-(void)setInputFullSizeImage:(CIImage *)arg1 ;
-(NSNumber *)inputUseAbsoluteDisparity;
-(NSNumber *)inputSharpenRadius;
-(NSNumber *)inputGrainAmount;
-(NSNumber *)inputMinimumEffectLevel;
-(void)setInputMinimumEffectLevel:(NSNumber *)arg1 ;
-(NSNumber *)inputBackgroundSeparationLikehood;
-(void)setInputBackgroundSeparationLikehood:(NSNumber *)arg1 ;
-(NSNumber *)inputDepthDataScore;
-(id)outputImage;
-(void)setDefaults;
@end

