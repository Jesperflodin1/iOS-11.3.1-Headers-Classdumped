/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:07:28 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/Frameworks/SceneKit.framework/SceneKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SceneKit/SceneKit-Structs.h>
#import <libobjc.A.dylib/SCNAnimatable.h>
#import <libobjc.A.dylib/NSSecureCoding.h>

@class SCNOrderedDictionary, NSMutableDictionary, NSArray, NSMutableArray, NSDictionary, NSString;

@interface SCNMorpher : NSObject <SCNAnimatable, NSSecureCoding> {

	C3DMorphRef _morpher;
	unsigned _isPresentationInstance : 1;
	long long _calculationMode;
	SCNOrderedDictionary* _animations;
	NSMutableDictionary* _bindings;
	NSArray* _targets;
	NSMutableArray* _weights;
	NSArray* _channelTargetCounts;
	NSArray* _channelTargetWeights;
	NSDictionary* _targetNameToIndexes;
	NSString* _name;
	BOOL _unifyNormal;
	BOOL _useSparseTargets;

}

@property (nonatomic,copy) NSArray * targets; 
@property (assign,nonatomic) long long calculationMode; 
@property (nonatomic,retain) NSArray * weights; 
@property (assign) BOOL unifiesNormals; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (readonly) NSArray * animationKeys; 
+(BOOL)supportsSecureCoding;
+(id)morpher;
+(id)morpherWithMorphRef:(C3DMorphRef)arg1 ;
+(id)weightIndexStringForIndex:(long long)arg1 ;
+(Class)SCNUID_classForElementOfArray:(id)arg1 ;
-(void)setWeights:(NSArray *)arg1 ;
-(NSArray *)weights;
-(id)init;
-(id)copy;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)dealloc;
-(NSString *)description;
-(void)setName:(id)arg1 ;
-(id)name;
-(id)identifier;
-(void)setIdentifier:(id)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)scene;
-(NSArray *)animationKeys;
-(id)animationForKey:(id)arg1 ;
-(void)removeAnimationForKey:(id)arg1 ;
-(void)addAnimation:(id)arg1 forKey:(id)arg2 ;
-(void)setCalculationMode:(long long)arg1 ;
-(void)removeAllAnimations;
-(void)addAnimation:(id)arg1 ;
-(void)setTargets:(NSArray *)arg1 ;
-(void)setChannelTargetCounts:(id)arg1 ;
-(void)setChannelTargetWeights:(id)arg1 ;
-(const void*)__CFObject;
-(NSArray *)targets;
-(C3DSceneRef)sceneRef;
-(void)addAnimationPlayer:(id)arg1 forKey:(id)arg2 ;
-(id)_scnAnimationForKey:(id)arg1 ;
-(id)animationPlayerForKey:(id)arg1 ;
-(C3DAnimationManagerRef)animationManager;
-(void)_pauseAnimation:(BOOL)arg1 forKey:(id)arg2 pausedByNode:(BOOL)arg3 ;
-(void)removeAnimationForKey:(id)arg1 blendOutDuration:(double)arg2 ;
-(void)removeAnimationForKey:(id)arg1 fadeOutDuration:(double)arg2 ;
-(void)pauseAnimationForKey:(id)arg1 ;
-(void)resumeAnimationForKey:(id)arg1 ;
-(void)setSpeed:(double)arg1 forAnimationKey:(id)arg2 ;
-(BOOL)isAnimationForKeyPaused:(id)arg1 ;
-(BOOL)__removeAnimation:(id)arg1 forKey:(id)arg2 ;
-(void)_syncObjCAnimations;
-(void)_copyAnimationsFrom:(id)arg1 ;
-(id)_scnBindings;
-(void)bindAnimatablePath:(id)arg1 toObject:(id)arg2 withKeyPath:(id)arg3 options:(id)arg4 ;
-(void)unbindAnimatablePath:(id)arg1 ;
-(id)copyAnimationChannelForKeyPath:(id)arg1 animation:(id)arg2 ;
-(BOOL)isPausedOrPausedByInheritance;
-(id)presentationInstance;
-(void)_syncObjCModel;
-(void)_syncEntityObjCModel;
-(C3DMorphRef)morphRef;
-(long long)calculationMode;
-(id)initWithMorphRef:(C3DMorphRef)arg1 ;
-(id)initPresentationMorpherWithMorphRef:(C3DMorphRef)arg1 ;
-(id)presentationMorpher;
-(void)setUnifiesNormals:(BOOL)arg1 ;
-(long long)_weightIndexForTargetNamed:(id)arg1 ;
-(void)setWeight:(double)arg1 forTargetAtIndex:(unsigned long long)arg2 ;
-(double)weightForTargetAtIndex:(unsigned long long)arg1 ;
-(id)channelTargetCounts;
-(id)channelTargetWeights;
-(BOOL)unifiesNormals;
-(void)_customEncodingOfSCNMorpher:(id)arg1 ;
-(void)_customDecodingOfSCNMorpher:(id)arg1 ;
-(void)_didDecodeSCNMorpher:(id)arg1 ;
-(BOOL)shouldMorphNormals;
-(void)setShouldMorphNormals:(BOOL)arg1 ;
-(void)setWeight:(double)arg1 forTargetNamed:(id)arg2 ;
-(double)weightForTargetNamed:(id)arg1 ;
-(BOOL)wantsCPUMorphing;
-(void)setWantsCPUMorphing:(BOOL)arg1 ;
-(void)convertToAdditiveWithBaseGeometry:(id)arg1 ;
-(BOOL)_isUsingSparseTargets;
-(void)convertToSparseWithBaseGeometry:(id)arg1 ;
@end

