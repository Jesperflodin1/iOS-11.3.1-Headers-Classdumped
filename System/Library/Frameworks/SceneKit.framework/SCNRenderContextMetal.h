/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:07:25 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/Frameworks/SceneKit.framework/SceneKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SceneKit/SceneKit-Structs.h>
#import <SceneKit/SCNRenderContextImp.h>
#import <libobjc.A.dylib/SCNBufferStream.h>

@protocol MTLDevice, MTLCommandQueue, OS_dispatch_semaphore, MTLTexture, CAMetalDrawable, MTLCommandBuffer, MTLComputeCommandEncoder, MTLBlitCommandEncoder, MTLDepthStencilState, MTLSamplerState, OS_dispatch_queue, OS_dispatch_group, MTLBuffer, MTLRenderPipelineState, MTLRenderCommandEncoder;
@class SCNMetalResourceManager, NSObject, CAMetalLayer, MTLRenderPassDescriptor, SCNMetalShaderManager, NSMutableArray, NSString;

@interface SCNRenderContextMetal : SCNRenderContextImp <SCNBufferStream> {

	SCNMetalResourceManager* _resourceManager;
	id<MTLDevice> _device;
	BOOL _isValidationEnabled;
	int _profile;
	unsigned _features;
	C3DEngineContextRef _engineContext;
	unsigned _wantsWideGamut : 1;
	unsigned _isOpaque : 1;
	unsigned _disableLinearRendering : 1;
	unsigned _useFunctionConstants : 1;
	id<MTLCommandQueue> _commandQueue;
	NSObject*<OS_dispatch_semaphore> _inFlightSemaphore;
	atomic<int> _pendingGPUFrameCount;
	id<MTLTexture> _textureTarget;
	CAMetalLayer* _layerTarget;
	id<CAMetalDrawable> _drawable;
	MTLRenderPassDescriptor* _currentRenderPassDescriptor;
	 _renderSize;
	SCNMetalShaderManager* _currentShaderManager;
	id<MTLCommandBuffer> _currentCommandBuffer;
	SCNMTLRenderCommandEncoder* _renderEncoder;
	id<MTLCommandBuffer> _currentComputeCommandBuffer;
	id<MTLComputeCommandEncoder> _currentComputeEncoder;
	id<MTLCommandBuffer> _currentBlitCommandBuffer;
	id<MTLBlitCommandEncoder> _currentBlitEncoder;
	_C3DFXPass* _currentPass;
	BOOL _currentPassIsMirrored;
	NSMutableArray* _renderPasses;
	SCD_Struct_SC34 _currentStreamBufferIndices;
	SCNMTLBufferPool* _volatileBufferPools[3];
	SCNMTLBufferPool* _frameVolatileBufferPool;
	NSMutableArray* _volatileMeshes;
	NSMutableArray* _bufferPool;
	NSMutableArray* _usedVolatileMeshElements;
	NSMutableArray* _freeVolatileMeshElements;
	SCNMTLBufferPool* _constantBufferPools[3];
	SCNMTLBufferPool* _frameConstantBufferPool;
	id<MTLDepthStencilState> _defaultDepthStencilState;
	id<MTLSamplerState> _defaultSamplerState;
	_C3DFXMetalProgram* _background2DProgram;
	_C3DFXMetalProgram* _backgroundCubeProgram;
	_C3DFXMetalProgram* _backgroundVideoProgram;
	C3DRasterizerStatesRef _backgroundRasterizerStates;
	double _initialTime;
	NSObject*<OS_dispatch_queue> _resourceQueue;
	NSObject*<OS_dispatch_group> _resourceGroup;
	id<MTLBuffer> _shadowKernelBuffer;
	SCD_Struct_SC36* _processingContext;
	unsigned _seed;
	SCNSceneBuffer _frameUniforms;
	SCD_Struct_SC32 _sceneUniforms;
	SCD_Struct_SC39 _lightsData;
	SCD_Struct_SC41* _nodeUniforms;
	SCD_Struct_SC54* _lighting;
	Cache* _cache;
	SCD_Struct_SC56* _deferredRendering;
	SCD_Struct_SC57 _compositeRendering;
	id<MTLRenderPipelineState> _downSamplePipelineState;
	SCD_Struct_SC58 _skCompositing;
	SCD_Struct_SC59 _debug;
	BOOL _showsAuthoringEnvironment;
	SCD_Struct_SC60 _compilationIssues;
	SCD_Struct_SC61 _renderTargets;
	SCD_Struct_SC62 _counters;
	MTLRenderPassDescriptor* _clientRenderPassDescriptor;
	id<MTLRenderCommandEncoder> _clientRenderCommandEncoder;
	id<MTLCommandBuffer> _clientCommandBuffer;
	unsigned long long _debugOptions;

}

@property (nonatomic,readonly) id<MTLDevice> device; 
@property (nonatomic,readonly) C3DEngineContextRef engineContext; 
@property (nonatomic,readonly) id<MTLTexture> textureTarget; 
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> resourceQueue; 
@property (nonatomic,readonly) NSObject*<OS_dispatch_group> resourceGroup; 
@property (nonatomic,retain) MTLRenderPassDescriptor * clientRenderPassDescriptor;                //@synthesize clientRenderPassDescriptor=_clientRenderPassDescriptor - In the implementation block
@property (nonatomic,retain) id<MTLRenderCommandEncoder> clientRenderCommandEncoder;              //@synthesize clientRenderCommandEncoder=_clientRenderCommandEncoder - In the implementation block
@property (nonatomic,retain) id<MTLCommandBuffer> clientCommandBuffer;                            //@synthesize clientCommandBuffer=_clientCommandBuffer - In the implementation block
@property (nonatomic,retain) id<MTLCommandQueue> commandQueue; 
@property (nonatomic,readonly) void* frameConstantBufferPool; 
@property (nonatomic,readonly) SCNMetalResourceManager * resourceManager; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)registerBindings;
-(_C3DEngineStats*)stats;
-(void)dealloc;
-(BOOL)isOpaque;
-(SCNMetalResourceManager *)resourceManager;
-(void)writeBytes:(void*)arg1 length:(unsigned long long)arg2 ;
-(BOOL)supportsFeatureSet:(unsigned long long)arg1 ;
-(BOOL)mapVolatileMesh:(C3DMeshRef)arg1 verticesCount:(long long)arg2 ;
-(void)unmapVolatileMesh:(C3DMeshRef)arg1 modifiedVerticesCount:(long long)arg2 ;
-(void)drawRenderElement:(_C3DRendererElement*)arg1 withPass:(_C3DFXPass*)arg2 ;
-(id)textureForEffectSlot:(_C3DEffectSlot*)arg1 ;
-(id)newRenderTargetWithDescription:(SCD_Struct_SC27*)arg1 size:(unsigned long long)arg2 ;
-(void)_drawFullScreenTexture:(id)arg1 over:(BOOL)arg2 ;
-(void)pushDebugGroup:(id)arg1 ;
-(void)popDebugGroup;
-(id)currentComputeCommandEncoder;
-(void*)frameConstantBufferPool;
-(void)renderSKSceneWithRenderer:(id)arg1 overlay:(BOOL)arg2 atTime:(double)arg3 ;
-(BOOL)disableLinearRendering;
-(id)currentBlitEncoder;
-(id)currentCommandBuffer;
-(void)renderMesh:(C3DMeshRef)arg1 meshElement:(_C3DMeshElement*)arg2 withProgram:(_C3DFXProgram*)arg3 engineContext:(C3DEngineContextRef)arg4 transform:(C3DMatrix4x4)arg5 color:(const C3DColor4*)arg6 rasterizerStates:(C3DRasterizerStatesRef)arg7 blendState:(C3DBlendStatesRef)arg8 texture:(C3DImageRef)arg9 depthBias:(BOOL)arg10 ;
-(NSObject*<OS_dispatch_group>)resourceGroup;
-(void)renderVideoBackground:(_C3DImageProxy*)arg1 engineContext:(C3DEngineContextRef)arg2 ;
-(void)renderBackground:(_C3DEffectSlot*)arg1 engineContext:(C3DEngineContextRef)arg2 ;
-(void)setClientCommandBuffer:(id<MTLCommandBuffer>)arg1 ;
-(void)setClientRenderPassDescriptor:(MTLRenderPassDescriptor *)arg1 ;
-(void)setClientRenderCommandEncoder:(id<MTLRenderCommandEncoder>)arg1 ;
-(void)beginFrame:(id)arg1 ;
-(void)resetVolatileMeshes;
-(void)resetVolatileMeshElements;
-(void)endFrameWaitingUntilCompleted:(BOOL)arg1 ;
-(id)_finalRenderTexture;
-(id)_renderTargetWithDescription:(SCD_Struct_SC27)arg1 size:(id)arg2 name:(long long)arg3 ;
-(BOOL)_setupDescriptor:(id)arg1 forPass:(_C3DFXPass*)arg2 parameters:(SCD_Struct_SC64*)arg3 ;
-(void)_clearRenderCaches;
-(void)superSampling:(id)arg1 into:(id)arg2 ;
-(void)executeRenderPasses;
-(void)__C3DFXContextDidApplyPass:(_C3DFXPass*)arg1 ;
-(void)setRasterizerStates:(C3DRasterizerStatesRef)arg1 ;
-(void)_setMeshBuffers:(id)arg1 ;
-(void)_drawMeshElement:(id)arg1 instanceCount:(unsigned long long)arg2 ;
-(void)startProcessingRendererElementsWithEngineIterationContext:(SCD_Struct_SC65*)arg1 ;
-(void)beginDeferredLighting;
-(void)renderLight:(_C3DNode*)arg1 lightType:(int)arg2 lightData:(_C3DLightRuntimeData*)arg3 ;
-(void)endDeferredLighting;
-(unsigned long long)debugOptions;
-(void)drawWireframeOverlayForElements:(SCD_Struct_SC66*)arg1 range:(SCD_Struct_SC67)arg2 store:(C3DRendererElementStoreRef)arg3 ;
-(void)stopProcessingRendererElements;
-(id)radianceTextureForEffectSlot:(_C3DEffectSlot*)arg1 ;
-(id)irradianceTextureForEffectSlot:(_C3DEffectSlot*)arg1 ;
-(id)_newMTLBufferFromPoolWithLength:(unsigned long long)arg1 ;
-(void)_recycleMTLBufferToPool:(id)arg1 ;
-(_C3DFXPass*)_createPassWithVertex:(id)arg1 fragment:(id)arg2 ;
-(id)currentRenderPassDescriptor;
-(void)_reduceStatsOfConstantBuffer:(id)arg1 ;
-(id)initWithDevice:(id)arg1 engineContext:(C3DEngineContextRef)arg2 ;
-(C3DEngineContextRef)engineContext;
-(void)setWantsWideGamut:(BOOL)arg1 ;
-(BOOL)wantsWideGamut;
-(long long)pendingGPUFrameCount;
-(void)setDisableLinearRendering:(BOOL)arg1 ;
-(void)setIsOpaque:(BOOL)arg1 ;
-(void)_clearUnusedBindingPoints;
-(id<MTLTexture>)textureTarget;
-(BOOL)beginRenderPass:(_C3DFXPass*)arg1 parameters:(SCD_Struct_SC64)arg2 ;
-(id)_renderCommandEncoderWithDescriptor:(id)arg1 ;
-(void)_clearRenderCommandEncoderCache;
-(void)endRenderPass;
-(void)_logLightingInformation;
-(void)_drawPatchForMeshElement:(id)arg1 instanceCount:(unsigned long long)arg2 ;
-(void)processRendererElements:(SCD_Struct_SC66*)arg1 count:(unsigned)arg2 engineIterationContext:(SCD_Struct_SC65*)arg3 ;
-(id)mainColorTextureForChannel:(unsigned long long)arg1 ;
-(id)mainDepthTexture;
-(id)renderTargetForSemantic:(int)arg1 ;
-(void)_prepareMaterialTextures:(C3DMaterialRef)arg1 ;
-(BOOL)showsAuthoringEnvironment;
-(void)setShowsAuthoringEnvironment:(BOOL)arg1 ;
-(BOOL)collectsCompilationErrors;
-(void)setCollectsCompilationErrors:(BOOL)arg1 ;
-(id)compilationErrors;
-(_C3DMeshElement*)createVolatileMeshElementOfType:(char)arg1 primitiveCount:(long long)arg2 bytesPerIndex:(long long)arg3 ;
-(void)unmapVolatileMeshElement:(_C3DMeshElement*)arg1 ;
-(void)drawFullScreenQuadForPass:(_C3DFXPass*)arg1 ;
-(id)currentRenderCommandEncoder;
-(void)_drawPBRTextures;
-(void)_drawShadowMaps;
-(void)clearRenderPasses;
-(void)addRenderPass:(id)arg1 ;
-(MTLRenderPassDescriptor *)clientRenderPassDescriptor;
-(id<MTLRenderCommandEncoder>)clientRenderCommandEncoder;
-(id<MTLCommandBuffer>)clientCommandBuffer;
-(void)setDebugOptions:(unsigned long long)arg1 ;
-(id<MTLCommandQueue>)commandQueue;
-(void)setCommandQueue:(id<MTLCommandQueue>)arg1 ;
-(int)profile;
-(unsigned)features;
-(NSObject*<OS_dispatch_queue>)resourceQueue;
-(id<MTLDevice>)device;
@end

