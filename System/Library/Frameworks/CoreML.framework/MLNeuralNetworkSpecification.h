/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:04:13 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/Frameworks/CoreML.framework/CoreML
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <CoreML/CoreML-Structs.h>
@class NSString, NSArray, NSDictionary;

@interface MLNeuralNetworkSpecification : NSObject {

	BOOL _isBiasPreprocessingShared;
	int _precision;
	int _engine;
	int _qos;
	NSString* _modelFilePath;
	NSArray* _inputLayerNames;
	NSArray* _outputLayerNames;
	NSString* _name;
	NSDictionary* _inputDescription;
	NSDictionary* _outputDescription;
	map<std::__1::basic_string<char>, bool, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, bool> > >* _orderedBgr;
	map<std::__1::basic_string<char>, bool, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, bool> > >* _isGrayScale;
	map<std::__1::basic_string<char>, float, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, float> > >* _blueBias;
	map<std::__1::basic_string<char>, float, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, float> > >* _greenBias;
	map<std::__1::basic_string<char>, float, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, float> > >* _redBias;
	map<std::__1::basic_string<char>, float, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, float> > >* _grayBias;
	map<std::__1::basic_string<char>, float, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, float> > >* _scale;

}

@property (assign,nonatomic) int precision;                                                                //@synthesize precision=_precision - In the implementation block
@property (assign,nonatomic) int engine;                                                                   //@synthesize engine=_engine - In the implementation block
@property (assign,nonatomic) int qos;                                                                      //@synthesize qos=_qos - In the implementation block
@property (assign,getter=isOrderedBgr,nonatomic) map<std::__1::basic_string<char> orderedBgr;              //@synthesize orderedBgr=_orderedBgr - In the implementation block
@property (assign,nonatomic) map<std::__1::basic_string<char> isGrayScale;                                 //@synthesize isGrayScale=_isGrayScale - In the implementation block
@property (assign,nonatomic) map<std::__1::basic_string<char> blueBias;                                    //@synthesize blueBias=_blueBias - In the implementation block
@property (assign,nonatomic) map<std::__1::basic_string<char> greenBias;                                   //@synthesize greenBias=_greenBias - In the implementation block
@property (assign,nonatomic) map<std::__1::basic_string<char> redBias;                                     //@synthesize redBias=_redBias - In the implementation block
@property (assign,nonatomic) map<std::__1::basic_string<char> grayBias;                                    //@synthesize grayBias=_grayBias - In the implementation block
@property (assign,nonatomic) map<std::__1::basic_string<char> scale;                                       //@synthesize scale=_scale - In the implementation block
@property (assign,nonatomic) BOOL isBiasPreprocessingShared;                                               //@synthesize isBiasPreprocessingShared=_isBiasPreprocessingShared - In the implementation block
@property (nonatomic,retain) NSString * modelFilePath;                                                     //@synthesize modelFilePath=_modelFilePath - In the implementation block
@property (nonatomic,readonly) NSArray * inputLayerNames;                                                  //@synthesize inputLayerNames=_inputLayerNames - In the implementation block
@property (nonatomic,readonly) NSArray * outputLayerNames;                                                 //@synthesize outputLayerNames=_outputLayerNames - In the implementation block
@property (nonatomic,retain) NSString * name;                                                              //@synthesize name=_name - In the implementation block
@property (nonatomic,retain) NSDictionary * inputDescription;                                              //@synthesize inputDescription=_inputDescription - In the implementation block
@property (nonatomic,retain) NSDictionary * outputDescription;                                             //@synthesize outputDescription=_outputDescription - In the implementation block
+(id)specFromFilePath:(id)arg1 inputLayerNames:(id)arg2 outputLayerNames:(id)arg3 parameters:(id)arg4 ;
+(id)specFromFeatureDescriptions:(id)arg1 inputDesc:(id)arg2 outputDesc:(id)arg3 outputLayerNames:(id)arg4 parameters:(id)arg5 ;
-(void)setQos:(int)arg1 ;
-(int)qos;
-(map<std::__1::basic_string<char>)scale;
-(void)setName:(NSString *)arg1 ;
-(NSString *)name;
-(void)setScale:(map<std::__1::basic_string<char>)arg1 ;
-(id)initWithFilePath:(id)arg1 inputLayerNames:(id)arg2 outputLayerNames:(id)arg3 parameters:(id)arg4 ;
-(id)initWithFeatureDescriptions:(id)arg1 inputDesc:(id)arg2 outputDesc:(id)arg3 outputLayerNames:(id)arg4 parameters:(id)arg5 ;
-(NSString *)modelFilePath;
-(void)setModelFilePath:(NSString *)arg1 ;
-(NSArray *)inputLayerNames;
-(NSArray *)outputLayerNames;
-(NSDictionary *)inputDescription;
-(void)setInputDescription:(NSDictionary *)arg1 ;
-(NSDictionary *)outputDescription;
-(void)setOutputDescription:(NSDictionary *)arg1 ;
-(map<std::__1::basic_string<char>, bool, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, bool> > >*)isOrderedBgr;
-(void)setOrderedBgr:(map<std::__1::basic_string<char>)arg1 ;
-(map<std::__1::basic_string<char>)isGrayScale;
-(void)setIsGrayScale:(map<std::__1::basic_string<char>)arg1 ;
-(map<std::__1::basic_string<char>)blueBias;
-(void)setBlueBias:(map<std::__1::basic_string<char>)arg1 ;
-(map<std::__1::basic_string<char>)greenBias;
-(void)setGreenBias:(map<std::__1::basic_string<char>)arg1 ;
-(map<std::__1::basic_string<char>)redBias;
-(void)setRedBias:(map<std::__1::basic_string<char>)arg1 ;
-(map<std::__1::basic_string<char>)grayBias;
-(void)setGrayBias:(map<std::__1::basic_string<char>)arg1 ;
-(BOOL)isBiasPreprocessingShared;
-(void)setIsBiasPreprocessingShared:(BOOL)arg1 ;
-(void)setPrecision:(int)arg1 ;
-(int)engine;
-(void)setEngine:(int)arg1 ;
-(int)precision;
@end

