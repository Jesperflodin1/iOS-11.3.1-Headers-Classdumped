/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:03:46 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/Frameworks/AVKit.framework/AVKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AVKit/AVKit-Structs.h>
#import <UIKit/UIViewController.h>
#import <AVKit/AVPictureInPictureControllerDelegate.h>
#import <UIKit/UIGestureRecognizerDelegate.h>
#import <UIKit/UIPopoverPresentationControllerDelegate.h>
#import <AVKit/AVPlaybackControlsVisibilityControllerDelegate.h>
#import <AVKit/AVFullScreenViewControllerDelegate.h>

@protocol AVPlayerViewControllerDelegate;
@class AVPlayerController, NSDictionary, AVNowPlayingInfoController, AVPictureInPictureController, UIPopoverPresentationController, AVTransitionController, AVPlaybackControlsVisibilityController, AVPlaybackControlsController, AVAppBasedStatusBarAppearanceController, AVPlayerView, __AVPlayerLayerView, AVFullScreenViewController, AVWindow, UIWindow, UIScreen, UIView, UIViewController, AVPlayerViewControllerContentView, AVPlayer, NSString;

@interface AVPlayerViewController : UIViewController <AVPictureInPictureControllerDelegate, UIGestureRecognizerDelegate, UIPopoverPresentationControllerDelegate, AVPlaybackControlsVisibilityControllerDelegate, AVFullScreenViewControllerDelegate> {

	AVPlayerController* _playerController;
	BOOL _playerShouldAutoplay;
	BOOL _showsPlaybackControls;
	BOOL _requiresLinearPlayback;
	BOOL _canChangeStatusBarHidden;
	long long _videoGravity;
	BOOL _allowsPictureInPicturePlayback;
	BOOL _hasClientSetVideoGravity;
	NSDictionary* _pixelBufferAttributes;
	BOOL _didBeginObservations;
	BOOL _allowsFullScreenPresentationsInNewWindow;
	AVNowPlayingInfoController* _nowPlayingInfoController;
	AVPictureInPictureController* _pictureInPictureController;
	UIPopoverPresentationController* _mediaSelectionPopoverPresentationController;
	AVTransitionController* _transitionController;
	AVPlaybackControlsVisibilityController* _playbackControlsVisibilityController;
	AVPlaybackControlsController* _playbackControlsController;
	AVAppBasedStatusBarAppearanceController* _appBasedStatusBarAppearanceController;
	AVPlayerView* _playerViewControllerView;
	__AVPlayerLayerView* _playerLayerView;
	id _screenDidConnectObserver;
	id _screenDidDisconnectObserver;
	id _screenModeDidChangeObserver;
	id _activeAudioRouteDidChangeObserver;
	id _nowPlayingControllerDidReceiveStopCommandEventObserver;
	id _applicationSuspendedObserver;
	id _playerControllerPlaybackDidEndObserver;
	BOOL _playbackControlsViewControllerPictureInPictureButtonEnabled;
	BOOL _transitionFromFullScreenOrDismissViewControllerWhenEnteringBackgroundAfterPictureInPictureStart;
	id<AVPlayerViewControllerDelegate> _delegate;
	SCD_Struct_AV4 _delegateRespondsTo;
	BOOL _showsExitFullScreenButton;
	BOOL _updatesNowPlayingInfoCenter;
	BOOL _entersFullScreenWhenPlaybackBegins;
	BOOL _exitsFullScreenWhenPlaybackEnds;
	BOOL _shouldUseNetworkingResourcesForLiveStreamingWhilePaused;
	BOOL __wasInitializedWithPlayerLayerView;
	BOOL _canPausePlaybackWhenExitingFullScreen;
	AVFullScreenViewController* _fullScreenViewController;
	AVWindow* __fullScreenWindow;
	UIWindow* _secondScreenWindow;
	UIScreen* _playbackTargetScreen;
	/*^block*/id _finishPreparingForInteractiveDismissalHandler;
	/*^block*/id _interactiveDismissalCompletionHandler;
	/*^block*/id __provideCurrentItemAndInitiatePlayback;

}

@property (nonatomic,readonly) UIView * iAdPrerollView; 
@property (assign,nonatomic) BOOL showsExitFullScreenButton; 
@property (getter=isPictureInPicturePossible,nonatomic,readonly) BOOL pictureInPicturePossible; 
@property (getter=isPictureInPictureActive,nonatomic,readonly) BOOL pictureInPictureActive; 
@property (getter=isPictureInPictureSuspended,nonatomic,readonly) BOOL pictureInPictureSuspended; 
@property (nonatomic,readonly) BOOL pictureInPictureWasStartedWhenEnteringBackground; 
@property (nonatomic,readonly) AVPlaybackControlsVisibilityController * playbackControlsVisibilityController; 
@property (nonatomic,readonly) UIWindow * _fullScreenWindow; 
@property (nonatomic,__weak,readonly) UIViewController * fullScreenViewController; 
@property (nonatomic,readonly) AVPlayerViewControllerContentView * contentView; 
@property (getter=isPresentingFullScreenFromInline,nonatomic,readonly) BOOL presentingFullScreenFromInline; 
@property (getter=isPresentedFullScreen,nonatomic,readonly) BOOL presentedFullScreen; 
@property (assign,nonatomic,__weak) AVFullScreenViewController * fullScreenViewController;                                           //@synthesize fullScreenViewController=_fullScreenViewController - In the implementation block
@property (setter=_setFullScreenWindow:,nonatomic,retain) AVWindow * _fullScreenWindow;                                              //@synthesize _fullScreenWindow=__fullScreenWindow - In the implementation block
@property (nonatomic,retain) UIWindow * secondScreenWindow;                                                                          //@synthesize secondScreenWindow=_secondScreenWindow - In the implementation block
@property (nonatomic,retain) UIScreen * playbackTargetScreen;                                                                        //@synthesize playbackTargetScreen=_playbackTargetScreen - In the implementation block
@property (assign,nonatomic) BOOL shouldUseNetworkingResourcesForLiveStreamingWhilePaused;                                           //@synthesize shouldUseNetworkingResourcesForLiveStreamingWhilePaused=_shouldUseNetworkingResourcesForLiveStreamingWhilePaused - In the implementation block
@property (nonatomic,copy) id finishPreparingForInteractiveDismissalHandler;                                                         //@synthesize finishPreparingForInteractiveDismissalHandler=_finishPreparingForInteractiveDismissalHandler - In the implementation block
@property (nonatomic,copy) id interactiveDismissalCompletionHandler;                                                                 //@synthesize interactiveDismissalCompletionHandler=_interactiveDismissalCompletionHandler - In the implementation block
@property (assign,setter=_setWasInitializedWithPlayerLayerView:,nonatomic) BOOL _wasInitializedWithPlayerLayerView;                  //@synthesize _wasInitializedWithPlayerLayerView=__wasInitializedWithPlayerLayerView - In the implementation block
@property (nonatomic,retain) AVPlayerController * playerController; 
@property (nonatomic,copy) NSDictionary * pixelBufferAttributes; 
@property (assign,nonatomic) BOOL canHidePlaybackControls; 
@property (assign,nonatomic) BOOL requiresLinearPlayback; 
@property (assign,nonatomic) BOOL canPausePlaybackWhenExitingFullScreen;                                                             //@synthesize canPausePlaybackWhenExitingFullScreen=_canPausePlaybackWhenExitingFullScreen - In the implementation block
@property (nonatomic,readonly) UIView * interactiveContentOverlayView; 
@property (assign,nonatomic) BOOL canHideInteractiveContentOverlayView; 
@property (assign,nonatomic) long long preferredUnobscuredArea; 
@property (setter=_setProvideCurrentItemAndInitiatePlayback:,nonatomic,copy) id _provideCurrentItemAndInitiatePlayback;              //@synthesize _provideCurrentItemAndInitiatePlayback=__provideCurrentItemAndInitiatePlayback - In the implementation block
@property (assign,nonatomic) BOOL allowsEnteringFullScreen; 
@property (nonatomic,retain) AVPlayer * player; 
@property (assign,nonatomic) BOOL showsPlaybackControls; 
@property (nonatomic,copy) NSString * videoGravity; 
@property (getter=isReadyForDisplay,nonatomic,readonly) BOOL readyForDisplay; 
@property (nonatomic,readonly) CGRect videoBounds; 
@property (nonatomic,readonly) UIView * contentOverlayView; 
@property (assign,nonatomic) BOOL allowsPictureInPicturePlayback; 
@property (assign,nonatomic) BOOL updatesNowPlayingInfoCenter;                                                                       //@synthesize updatesNowPlayingInfoCenter=_updatesNowPlayingInfoCenter - In the implementation block
@property (assign,nonatomic) BOOL entersFullScreenWhenPlaybackBegins;                                                                //@synthesize entersFullScreenWhenPlaybackBegins=_entersFullScreenWhenPlaybackBegins - In the implementation block
@property (assign,nonatomic) BOOL exitsFullScreenWhenPlaybackEnds;                                                                   //@synthesize exitsFullScreenWhenPlaybackEnds=_exitsFullScreenWhenPlaybackEnds - In the implementation block
@property (assign,nonatomic,__weak) id<AVPlayerViewControllerDelegate> delegate; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)keyPathsForValuesAffectingReadyForDisplay;
+(id)keyPathsForValuesAffectingVideoBounds;
+(id)keyPathsForValuesAffectingPixelBufferAttributes;
+(id)keyPathsForValuesAffectingPlayer;
+(id)keyPathsForValuesAffectingVideoGravity;
+(id)keyPathsForValuesAffectingPictureInPicturePossible;
+(id)keyPathsForValuesAffectingPictureInPictureActive;
+(id)keyPathsForValuesAffectingPictureInPictureSuspended;
+(id)keyPathsForValuesAffectingPictureInPictureWasStartedWhenEnteringBackground;
-(NSDictionary *)pixelBufferAttributes;
-(AVPlayerViewControllerContentView *)contentView;
-(id<AVPlayerViewControllerDelegate>)delegate;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)setDelegate:(id<AVPlayerViewControllerDelegate>)arg1 ;
-(void)dealloc;
-(BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2 ;
-(long long)preferredWhitePointAdaptivityStyle;
-(BOOL)prefersHomeIndicatorAutoHidden;
-(long long)preferredStatusBarStyle;
-(BOOL)isPictureInPictureActive;
-(id)keyCommands;
-(void)didMoveToParentViewController:(id)arg1 ;
-(void)setView:(id)arg1 ;
-(void)loadView;
-(id)initWithNibName:(id)arg1 bundle:(id)arg2 ;
-(BOOL)canBecomeFirstResponder;
-(long long)adaptivePresentationStyleForPresentationController:(id)arg1 ;
-(void)viewWillTransitionToSize:(CGSize)arg1 withTransitionCoordinator:(id)arg2 ;
-(void)viewDidLoad;
-(void)viewWillAppear:(BOOL)arg1 ;
-(void)viewDidAppear:(BOOL)arg1 ;
-(void)viewDidDisappear:(BOOL)arg1 ;
-(BOOL)_ignoreAppSupportedOrientations;
-(BOOL)prefersStatusBarHidden;
-(BOOL)modalPresentationCapturesStatusBarAppearance;
-(void)prepareForPopoverPresentation:(id)arg1 ;
-(void)popoverPresentationControllerDidDismissPopover:(id)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)stopPictureInPicture;
-(NSString *)videoGravity;
-(CGRect)videoBounds;
-(BOOL)isPictureInPicturePossible;
-(UIViewController *)fullScreenViewController;
-(BOOL)requiresLinearPlayback;
-(UIWindow *)_fullScreenWindow;
-(void)setFullScreenViewController:(UIViewController *)arg1 ;
-(id)transitioningDelegateForFullScreenViewController:(id)arg1 ;
-(long long)modalPresentationStyleForFullScreenViewController:(id)arg1 presentingViewController:(id)arg2 ;
-(void)fullScreenViewControllerWillBeginFullScreenPresentation:(id)arg1 ;
-(id)viewForFullScreenViewController:(id)arg1 ;
-(BOOL)prefersStatusBarHiddenForFullScreenViewController:(id)arg1 ;
-(void)fullScreenViewControllerNeedsAppBasedStatusBarAppearanceUpdate:(id)arg1 ;
-(id)keyCommandResponderForFullScreenViewController:(id)arg1 ;
-(void)playbackControlsVisibilityController:(id)arg1 updateStatusBarAppearanceUsingAnimator:(id)arg2 ;
-(void)playbackControlsVisibilityController:(id)arg1 willShowView:(id)arg2 ;
-(void)playbackControlsVisibilityControllerDidChangeViewVisibility:(id)arg1 ;
-(void)playbackControlsVisibilityController:(id)arg1 animateAlongsideVisibilityAnimations:(id)arg2 ;
-(void)playbackControlsVisibilityControllerWillExitAutoplayPhase:(id)arg1 ;
-(void)_setVideoGravity:(id)arg1 forLayoutClass:(unsigned long long)arg2 ;
-(BOOL)allowsPictureInPicturePlayback;
-(BOOL)canHidePlaybackControls;
-(void)setCanHidePlaybackControls:(BOOL)arg1 ;
-(BOOL)allowsEnteringFullScreen;
-(void)setAllowsEnteringFullScreen:(BOOL)arg1 ;
-(BOOL)_inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused;
-(void)_setInlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused:(BOOL)arg1 ;
-(BOOL)canHideInteractiveContentOverlayView;
-(long long)preferredUnobscuredArea;
-(void)setPreferredUnobscuredArea:(long long)arg1 ;
-(void)setEntersFullScreenWhenPlaybackBegins:(BOOL)arg1 ;
-(void)enterAutoplayPhase;
-(void)flashAutoplayControls;
-(id)playbackControlsController;
-(void)setShouldUseNetworkingResourcesForLiveStreamingWhilePaused:(BOOL)arg1 ;
-(void)_handleExitFullScreenKeyCommand:(id)arg1 ;
-(void)_handlePlayPauseKeyCommand:(id)arg1 ;
-(void)_handleSkipBack15SecondsKeyCommand:(id)arg1 ;
-(void)_handleSkipAhead15SecondsKeyCommand:(id)arg1 ;
-(void)_handleShowNextFrameKeyCommand:(id)arg1 ;
-(void)_handleGoToBeginningKeyCommand:(id)arg1 ;
-(void)_handleShowPreviousFrameKeyCommand:(id)arg1 ;
-(void)_handleVolumeUpKeyPressedCommand:(id)arg1 ;
-(void)_handleVolumeUpKeyReleasedCommand:(id)arg1 ;
-(void)_handleVolumeDownKeyPressedCommand:(id)arg1 ;
-(void)_handleVolumeDownKeyReleasedCommand:(id)arg1 ;
-(void)_handleRewindKeyPressedCommand:(id)arg1 ;
-(void)_handleRewindKeyReleasedCommand:(id)arg1 ;
-(void)_handleFastForwardKeyPressedCommand:(id)arg1 ;
-(void)_handleFastForwardKeyReleasedCommand:(id)arg1 ;
-(BOOL)_isUnsupportedContent;
-(void)_updateUnsupportedContentIndicatorView;
-(BOOL)_isAudioOnlyContent;
-(void)_updateAudioOnlyIndicatorView;
-(void)_updateExternalPlaybackIndicatorView;
-(void)_updatePlayerLayerViewAndContentOverlayView;
-(void)_updatePlayerLayerViewAndContentOverlayViewExcludingScreen:(id)arg1 ;
-(void)_updatePlaybackControlsController;
-(void)_updateNowPlayingInfoController;
-(void)_handleDoubleTapGesture:(id)arg1 ;
-(void)_handleSingleTapGesture:(id)arg1 ;
-(void)_handleDoubleDoubleTapGesture:(id)arg1 ;
-(void)_notifyDelegateOfMetricsCollectionEvent:(long long)arg1 ;
-(void)setPlaybackTargetScreen:(UIScreen *)arg1 ;
-(BOOL)_isDescendantOfRootViewController;
-(void)_transitionFromFullScreenWithReason:(long long)arg1 animated:(BOOL)arg2 completionHandler:(/*^block*/id)arg3 ;
-(BOOL)_canEnterFullScreen;
-(void)_transitionToFullScreenAnimated:(BOOL)arg1 interactive:(BOOL)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)_transitionFromFullScreenAnimated:(BOOL)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)_restoreContentViewToPlayerViewControllerView;
-(void)_togglePictureInPicture;
-(void)_mediaSelectionDoneButtonTapped:(id)arg1 ;
-(BOOL)_isTransitioningToOrFromFullScreen;
-(BOOL)_modalPresentationStyleIsFullScreen;
-(BOOL)updatesNowPlayingInfoCenter;
-(BOOL)entersFullScreenWhenPlaybackBegins;
-(BOOL)exitsFullScreenWhenPlaybackEnds;
-(void)_setFullScreenWindow:(id)arg1 ;
-(UIWindow *)secondScreenWindow;
-(void)setSecondScreenWindow:(UIWindow *)arg1 ;
-(UIScreen *)playbackTargetScreen;
-(BOOL)shouldUseNetworkingResourcesForLiveStreamingWhilePaused;
-(id)finishPreparingForInteractiveDismissalHandler;
-(void)setFinishPreparingForInteractiveDismissalHandler:(id)arg1 ;
-(id)interactiveDismissalCompletionHandler;
-(void)setInteractiveDismissalCompletionHandler:(id)arg1 ;
-(BOOL)_wasInitializedWithPlayerLayerView;
-(void)_setWasInitializedWithPlayerLayerView:(BOOL)arg1 ;
-(BOOL)canPausePlaybackWhenExitingFullScreen;
-(void)setCanPausePlaybackWhenExitingFullScreen:(BOOL)arg1 ;
-(id)_provideCurrentItemAndInitiatePlayback;
-(void)_setProvideCurrentItemAndInitiatePlayback:(/*^block*/id)arg1 ;
-(BOOL)isPresentedFullScreen;
-(BOOL)isPresentingFullScreenFromInline;
-(AVPlaybackControlsVisibilityController *)playbackControlsVisibilityController;
-(BOOL)pictureInPictureWasStartedWhenEnteringBackground;
-(id)initWithPlayerLayerView:(id)arg1 ;
-(void)togglePlayback:(id)arg1 ;
-(BOOL)isPictureInPictureSuspended;
-(BOOL)showsExitFullScreenButton;
-(void)toggleMuted:(id)arg1 ;
-(void)videoGravityButtonTapped:(id)arg1 ;
-(void)mediaSelectionButtonTapped:(id)arg1 ;
-(void)fullScreenButtonTapped:(id)arg1 ;
-(void)pictureInPictureButtonTapped:(id)arg1 ;
-(BOOL)canBeginInteractivePresentationTransition;
-(BOOL)canBeginInteractiveDismissalTransition;
-(BOOL)beginInteractivePresentationTransition;
-(BOOL)beginInteractiveDismissalTransition;
-(void)prepareForFinishingInteractiveTransition:(/*^block*/id)arg1 ;
-(void)_addObservers;
-(AVPlayer *)player;
-(void)setPlayer:(AVPlayer *)arg1 ;
-(BOOL)isReadyForDisplay;
-(void)setVideoGravity:(NSString *)arg1 ;
-(void)setUpdatesNowPlayingInfoCenter:(BOOL)arg1 ;
-(void)setShowsExitFullScreenButton:(BOOL)arg1 ;
-(void)pictureInPictureControllerWillStartPictureInPicture:(id)arg1 ;
-(void)pictureInPictureControllerDidStartPictureInPicture:(id)arg1 ;
-(void)pictureInPictureController:(id)arg1 failedToStartPictureInPictureWithError:(id)arg2 ;
-(void)pictureInPictureControllerWillStopPictureInPicture:(id)arg1 ;
-(void)pictureInPictureControllerDidStopPictureInPicture:(id)arg1 ;
-(void)pictureInPictureController:(id)arg1 restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:(/*^block*/id)arg2 ;
-(void)startPictureInPicture;
-(void)setExitsFullScreenWhenPlaybackEnds:(BOOL)arg1 ;
-(void)doneButtonTapped:(id)arg1 ;
-(void)setAllowsPictureInPicturePlayback:(BOOL)arg1 ;
-(BOOL)showsPlaybackControls;
-(UIView *)interactiveContentOverlayView;
-(UIView *)iAdPrerollView;
-(void)enterFullScreenAnimated:(BOOL)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)exitFullScreenAnimated:(BOOL)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)setCanHideInteractiveContentOverlayView:(BOOL)arg1 ;
-(void)setRequiresLinearPlayback:(BOOL)arg1 ;
-(AVPlayerController *)playerController;
-(void)setPlayerController:(AVPlayerController *)arg1 ;
-(void)setPixelBufferAttributes:(NSDictionary *)arg1 ;
-(UIView *)contentOverlayView;
-(void)setShowsPlaybackControls:(BOOL)arg1 ;
@end

