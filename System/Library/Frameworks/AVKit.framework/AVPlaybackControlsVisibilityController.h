/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:03:46 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/Frameworks/AVKit.framework/AVKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol AVPlaybackControlsVisibilityControllerDelegate;
@class UIViewPropertyAnimator, AVKeyValueObservationController, NSMapTable, AVUserInteractionObserverGestureRecognizer, NSTimer, AVPlayerController, UIView;

@interface AVPlaybackControlsVisibilityController : NSObject {

	UIViewPropertyAnimator* _visibilityAnimator;
	AVKeyValueObservationController* _keyValueObservationController;
	NSMapTable* _viewsAndViewInfos;
	AVUserInteractionObserverGestureRecognizer* _userInteractionObserverGestureRecognizer;
	double _animationDuration;
	BOOL _visibilityNeedsUpdate;
	BOOL _prefersRegularViewsVisible;
	double _prefersViewsVisibleTimerInterval;
	double _prefersViewsVisibleTimerIntervalForQuicklyHiding;
	NSTimer* _prefersRegularViewsVisibleTimer;
	BOOL _prefersViewsShownForVolumeChangeVisible;
	double _prefersViewsShownForVolumeChangeVisibleTimerInterval;
	NSTimer* _prefersViewsShownForVolumeChangeVisibleTimer;
	BOOL _hidesViewQuicklyWhenPlaybackBegins;
	BOOL _popoverPresented;
	BOOL _pictureInPictureActive;
	BOOL _scrubbing;
	BOOL _transitionInProgress;
	BOOL _playbackWasPausedAndVisibilityNotToggledAfterPausing;
	BOOL _loadingIndicatorWasShownAndVisibilityNotToggledAfterLoadingIndicatorShown;
	BOOL _inAutoplayPhase;
	BOOL _temporarilyAvoidAnimationsWhenStartingToControlViewVisibility;
	BOOL _statusBarAppearanceNeedsUpdate;
	id<AVPlaybackControlsVisibilityControllerDelegate> _delegate;
	BOOL _canHideViews;
	BOOL _showsViewsWhileWaitingToPlay;
	AVPlayerController* _playerController;
	UIView* _viewForUserInteractionObservation;

}

@property (assign) double animationDuration; 
@property (assign) double hideViewsTimerInterval; 
@property (assign) double hideViewsQuicklyTimerInterval; 
@property (assign) double volumeChangeHidePlaybackControlTimerInterval; 
@property (nonatomic,retain) AVPlayerController * playerController;                                    //@synthesize playerController=_playerController - In the implementation block
@property (__weak) id<AVPlaybackControlsVisibilityControllerDelegate> delegate;                        //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) BOOL showsViewPreferingStatusBarVisible; 
@property (assign,nonatomic) BOOL canHideViews;                                                        //@synthesize canHideViews=_canHideViews - In the implementation block
@property (assign,getter=isPictureInPictureActive,nonatomic) BOOL pictureInPictureActive;              //@synthesize pictureInPictureActive=_pictureInPictureActive - In the implementation block
@property (assign,getter=isPopoverPresented,nonatomic) BOOL popoverPresented;                          //@synthesize popoverPresented=_popoverPresented - In the implementation block
@property (assign,nonatomic) BOOL showsViewsWhileWaitingToPlay;                                        //@synthesize showsViewsWhileWaitingToPlay=_showsViewsWhileWaitingToPlay - In the implementation block
@property (assign,nonatomic,__weak) UIView * viewForUserInteractionObservation;                        //@synthesize viewForUserInteractionObservation=_viewForUserInteractionObservation - In the implementation block
-(id)init;
-(id<AVPlaybackControlsVisibilityControllerDelegate>)delegate;
-(void)setDelegate:(id<AVPlaybackControlsVisibilityControllerDelegate>)arg1 ;
-(void)dealloc;
-(BOOL)isPictureInPictureActive;
-(void)setAnimationDuration:(double)arg1 ;
-(double)animationDuration;
-(void)endTransition;
-(void)toggleVisibility;
-(void)enterAutoplayPhase;
-(void)flashAutoplayControls;
-(void)activeAudioRouteOrSystemVolumeDidChange;
-(void)startHidingViewQuicklyWhenPlaybackBegins;
-(void)stopHidingViewQuicklyWhenPlaybackBegins;
-(BOOL)showsViewPreferingStatusBarVisible;
-(void)temporarilyAvoidAnimationsWhenStartingToControlViewVisibility;
-(void)beginTransitionAndHideViewsAnimated:(BOOL)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)startControllingVisibilityOfView:(id)arg1 visibilityBehaviorOptions:(long long)arg2 ;
-(void)stopControllingVisibilityOfView:(id)arg1 ;
-(void)setViewForUserInteractionObservation:(UIView *)arg1 ;
-(void)_startControllingVisibilityIfNeeded;
-(void)_updateVisibilityWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)_setVisibilityNeedsUpdate;
-(void)_updateControlViewVisibilityIfNeeded;
-(void)_exitAutoplayPhaseIfNeeded;
-(void)_performForEachView:(/*^block*/id)arg1 ;
-(id)_viewsPassingTest:(/*^block*/id)arg1 ;
-(BOOL)_hasViewsThatCanBeShown;
-(BOOL)_hasViewsThatCanBeHidden;
-(void)_handleUserInteractionObservationRecognizer:(id)arg1 ;
-(void)_showViewsShownForVolumeChange;
-(void)_showViewsShownForVolumeChangeAndHideAfterDelay;
-(void)_startTimerToHideViewsShownForVolumeChange;
-(void)_stopTimerToHideViewsShownForVolumeChangeIfPlaying;
-(void)_hideViewsShownForVolumeChange;
-(void)_showRegularViews;
-(void)_showRegularViewsAndHideAfterDelay;
-(void)_showRegularViewsAndHideAfterDelayIfPlaying;
-(void)_startTimerToHideRegularViewsIfPlaying;
-(void)_startTimerToHideRegularViews;
-(void)_startTimerToHideRegularViewsAfterDelay:(double)arg1 ifPlaying:(BOOL)arg2 ;
-(void)_stopTimerToHideRegularControlsIfPlaying;
-(void)_hideRegularViews;
-(void)_stopInitiallyHidingViews;
-(void)_stopInitiallyHidingViewsThatAreShownForVolumeChanges;
-(BOOL)_userIsInteractingWithViews;
-(BOOL)canHideViews;
-(void)setCanHideViews:(BOOL)arg1 ;
-(void)setPictureInPictureActive:(BOOL)arg1 ;
-(BOOL)isPopoverPresented;
-(void)setPopoverPresented:(BOOL)arg1 ;
-(BOOL)showsViewsWhileWaitingToPlay;
-(void)setShowsViewsWhileWaitingToPlay:(BOOL)arg1 ;
-(UIView *)viewForUserInteractionObservation;
-(double)hideViewsTimerInterval;
-(void)setHideViewsTimerInterval:(double)arg1 ;
-(double)hideViewsQuicklyTimerInterval;
-(void)setHideViewsQuicklyTimerInterval:(double)arg1 ;
-(double)volumeChangeHidePlaybackControlTimerInterval;
-(void)setVolumeChangeHidePlaybackControlTimerInterval:(double)arg1 ;
-(AVPlayerController *)playerController;
-(void)setPlayerController:(AVPlayerController *)arg1 ;
@end

