/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:03:53 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/Frameworks/CFNetwork.framework/CFNetwork
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <CFNetwork/CFNetwork-Structs.h>
@class NSHTTPCookieStorageInternal, NSArray;

@interface NSHTTPCookieStorage : NSObject {

	NSHTTPCookieStorageInternal* _internal;

}

@property (copy,readonly) NSArray * cookies; 
@property (assign) unsigned long long cookieAcceptPolicy; 
+(id)_sharedCookieStorageLock;
+(id)_groupContainerStoragesLock;
+(id)_groupContainerCookieStorages;
+(void)_setSharedHTTPCookieStorage:(id)arg1 ;
+(id)sharedCookieStorageForGroupContainerIdentifier:(id)arg1 ;
+(id)_csff:(id)arg1 ;
+(id)_csfi:(id)arg1 ;
+(id)sharedHTTPCookieStorage;
-(void)setCookies:(id)arg1 forURL:(id)arg2 mainDocumentURL:(id)arg3 ;
-(NSArray *)cookies;
-(void)deleteCookie:(id)arg1 ;
-(void)getCookiesForTask:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)storeCookies:(id)arg1 forTask:(id)arg2 ;
-(void)removeCookiesSinceDate:(id)arg1 ;
-(OpaqueCFHTTPCookieStorageRef)_CFHTTPCookieStorage;
-(id)_cookiesForURL:(id)arg1 mainDocumentURL:(id)arg2 ;
-(void)_setPrivateBrowsingEnabled:(BOOL)arg1 ;
-(id)cookieRequestHeaderFieldsForURL:(id)arg1 ;
-(void)setCookiesFromResponseHeader:(id)arg1 forURL:(id)arg2 policyBaseURL:(id)arg3 ;
-(id)sortedCookiesUsingDescriptors:(id)arg1 ;
-(void)_getCookiesForURL:(id)arg1 mainDocumentURL:(id)arg2 partition:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)_getCookieStoragePartitionsCompletionHandler:(/*^block*/id)arg1 ;
-(void)_getCookiesForPartition:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)_testingOfStoringOfCookie:(id)arg1 ;
-(id)init;
-(void)dealloc;
-(id)description;
-(id)cookiesForURL:(id)arg1 ;
-(id)_initWithIdentifier:(id)arg1 private:(BOOL)arg2 ;
-(void)setCookieAcceptPolicy:(unsigned long long)arg1 ;
-(OpaqueCFHTTPCookieStorageRef)_cookieStorage;
-(void)setCookie:(id)arg1 ;
-(void)_saveCookies;
-(id)_initWithCFHTTPCookieStorage:(OpaqueCFHTTPCookieStorageRef)arg1 ;
-(unsigned long long)cookieAcceptPolicy;
@end

