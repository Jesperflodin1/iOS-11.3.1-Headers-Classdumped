/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:03:41 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/Frameworks/ARKit.framework/ARKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <ARKit/ARKit-Structs.h>
#import <ARKit/ARResultData.h>

@class NSArray, NSString;

@interface ARPlaneData : NSObject <ARResultData> {

	int _surfaceCount;
	SurfaceDetectionPlane* _surfaces;
	unsigned long long _detectionTypeMask;
	long long _techniqueID;
	NSArray* _anchorIdentifierMap;

}

@property (nonatomic,readonly) SurfaceDetectionPlane* surfaces;                   //@synthesize surfaces=_surfaces - In the implementation block
@property (nonatomic,readonly) int surfaceCount;                                  //@synthesize surfaceCount=_surfaceCount - In the implementation block
@property (nonatomic,readonly) long long maxPlaneID; 
@property (nonatomic,readonly) unsigned long long detectionTypeMask;              //@synthesize detectionTypeMask=_detectionTypeMask - In the implementation block
@property (nonatomic,readonly) long long techniqueID;                             //@synthesize techniqueID=_techniqueID - In the implementation block
@property (nonatomic,retain) NSArray * anchorIdentifierMap;                       //@synthesize anchorIdentifierMap=_anchorIdentifierMap - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(id)anchorsForCameraWithTransform:(SCD_Struct_AR18)arg1 referenceOriginTransform:(SCD_Struct_AR18)arg2 existingAnchors:(id)arg3 anchorsToRemove:(id)arg4 ;
-(id)hitTestFromOrigin:(long long)arg1 ;
-(unsigned long long)detectionTypeMask;
-(long long)maxPlaneID;
-(void)setAnchorIdentifierMap:(NSArray *)arg1 ;
-(id)initWithSurfaces:(SurfaceDetectionPlane*)arg1 surfaceCount:(int)arg2 detectionTypeMask:(unsigned long long)arg3 techniqueIdentifier:(long long)arg4 ;
-(long long)_identifierForSurfaceID:(long long)arg1 ;
-(id)_updatedAnchor:(id)arg1 forSurface:(SurfaceDetectionPlane*)arg2 referenceOriginTransform:(SCD_Struct_AR18)arg3 ;
-(id)_anchorForSurface:(SurfaceDetectionPlane*)arg1 referenceOriginTransform:(SCD_Struct_AR18)arg2 ;
-(SCD_Struct_AR18)_planeToWorldTransformForSurface:(SurfaceDetectionPlane*)arg1 ;
-(long long)_worldAlignmentRotationForReferenceTransform:(SCD_Struct_AR18)arg1 planeAlignment:(long long)arg2 ;
-(NSArray *)anchorIdentifierMap;
-(compressed_pair<float * __attribute__((ext_vector_type(3))), std::__1::allocator<float __attribute__((ext_vector_type(3)))> >)_boundsForSurface:(SurfaceDetectionPlane*)arg1 planeToAnchorTransform:(SCD_Struct_AR18)arg2 alignmentRotation:(long long)arg3 ;
-(id)_geometryForSurface:(SurfaceDetectionPlane*)arg1 planeToAnchorTransform:(SCD_Struct_AR18)arg2 alignmentRotation:(long long)arg3 planeBounds:(compressed_pair<float * __attribute__((ext_vector_type(3))), std::__1::allocator<float __attribute__((ext_vector_type(3)))> >)arg4 ;
-(id)_gridExtentForSurface:(SurfaceDetectionPlane*)arg1 planeToAnchorTransform:(SCD_Struct_AR18)arg2 alignmentRotation:(long long)arg3 ;
-(SurfaceDetectionPlane*)surfaces;
-(int)surfaceCount;
-(long long)techniqueID;
@end

