/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:12:09 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PreferenceBundles/MapsSettings.bundle/MapsSettings
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MapsSettings/MapsSettings-Structs.h>
#import <UIKit/UIViewController.h>
#import <libobjc.A.dylib/MKMapViewDelegate.h>

@protocol LocationRefinementViewControllerDelegate, MKMapViewDelegate;
@class MKMapView, UIView, NSLayoutConstraint, UILabel, NSArray, NSString, MKMapCamera, UIButton, UIImageView;

@interface LocationRefinementViewController : UIViewController <MKMapViewDelegate> {

	BOOL _needsInitialCameraPosition;
	BOOL _viewDidLoadComplete;
	BOOL _visible;
	id<LocationRefinementViewControllerDelegate> _delegate;
	MKMapView* _mapView;
	id<MKMapViewDelegate> _mapViewDelegate;
	UIView* _instructionsContainer;
	NSLayoutConstraint* _instructionsContainerBottomConstraint;
	UILabel* _instructionsLabel;
	NSArray* _mapViewConstraints;
	NSString* _instructionsText;
	NSLayoutConstraint* _userLocationButtonBottomConstraint;
	UIView* _snapToUserLocationContainerView;
	MKMapCamera* _initialCamera;
	UIButton* _snapToUserLocationButton;
	unsigned long long _crosshairType;
	UIImageView* _crosshairImageView;
	NSLayoutConstraint* _crosshairXConstraint;
	NSLayoutConstraint* _crosshairYConstraint;
	double _initialMapViewZoomLevel;

}

@property (nonatomic,retain) MKMapCamera * initialCamera;                                               //@synthesize initialCamera=_initialCamera - In the implementation block
@property (nonatomic,retain) UIButton * snapToUserLocationButton;                                       //@synthesize snapToUserLocationButton=_snapToUserLocationButton - In the implementation block
@property (assign,nonatomic) BOOL needsInitialCameraPosition;                                           //@synthesize needsInitialCameraPosition=_needsInitialCameraPosition - In the implementation block
@property (assign,nonatomic) BOOL viewDidLoadComplete;                                                  //@synthesize viewDidLoadComplete=_viewDidLoadComplete - In the implementation block
@property (assign,nonatomic) BOOL visible;                                                              //@synthesize visible=_visible - In the implementation block
@property (nonatomic,readonly) unsigned long long crosshairType;                                        //@synthesize crosshairType=_crosshairType - In the implementation block
@property (nonatomic,retain) UIImageView * crosshairImageView;                                          //@synthesize crosshairImageView=_crosshairImageView - In the implementation block
@property (nonatomic,retain) NSLayoutConstraint * crosshairXConstraint;                                 //@synthesize crosshairXConstraint=_crosshairXConstraint - In the implementation block
@property (nonatomic,retain) NSLayoutConstraint * crosshairYConstraint;                                 //@synthesize crosshairYConstraint=_crosshairYConstraint - In the implementation block
@property (nonatomic,retain) NSArray * mapViewConstraints;                                              //@synthesize mapViewConstraints=_mapViewConstraints - In the implementation block
@property (assign,nonatomic) double initialMapViewZoomLevel;                                            //@synthesize initialMapViewZoomLevel=_initialMapViewZoomLevel - In the implementation block
@property (assign,nonatomic,__weak) id<LocationRefinementViewControllerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) MKMapView * mapView;                                                     //@synthesize mapView=_mapView - In the implementation block
@property (assign,nonatomic,__weak) id<MKMapViewDelegate> mapViewDelegate;                              //@synthesize mapViewDelegate=_mapViewDelegate - In the implementation block
@property (nonatomic,readonly) UIView * instructionsContainer;                                          //@synthesize instructionsContainer=_instructionsContainer - In the implementation block
@property (nonatomic,readonly) NSLayoutConstraint * instructionsContainerBottomConstraint;              //@synthesize instructionsContainerBottomConstraint=_instructionsContainerBottomConstraint - In the implementation block
@property (nonatomic,readonly) UILabel * instructionsLabel;                                             //@synthesize instructionsLabel=_instructionsLabel - In the implementation block
@property (nonatomic,copy) NSString * instructionsText;                                                 //@synthesize instructionsText=_instructionsText - In the implementation block
@property (assign,nonatomic) CLLocationCoordinate2D selectedCoordinate; 
@property (nonatomic,readonly) NSLayoutConstraint * userLocationButtonBottomConstraint;                 //@synthesize userLocationButtonBottomConstraint=_userLocationButtonBottomConstraint - In the implementation block
@property (nonatomic,readonly) UIView * snapToUserLocationContainerView;                                //@synthesize snapToUserLocationContainerView=_snapToUserLocationContainerView - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(UIImageView *)crosshairImageView;
-(NSLayoutConstraint *)crosshairXConstraint;
-(NSLayoutConstraint *)crosshairYConstraint;
-(BOOL)needsInitialCameraPosition;
-(MKMapCamera *)initialCamera;
-(void)setInitialCamera:(MKMapCamera *)arg1 ;
-(void)setNeedsInitialCameraPosition:(BOOL)arg1 ;
-(void)setSelectedCoordinate:(CLLocationCoordinate2D)arg1 animated:(BOOL)arg2 ;
-(void)applyInitialCameraPosition;
-(void)applyInitialZoomLevel;
-(void)updateCrosshairConstraints;
-(void)updateLocateMeButtonState;
-(double)initialMapViewZoomLevel;
-(void)setInitialMapViewZoomLevel:(double)arg1 ;
-(UIView *)instructionsContainer;
-(unsigned long long)crosshairType;
-(void)setMapViewConstraints:(NSArray *)arg1 ;
-(NSArray *)mapViewConstraints;
-(id)crosshairImage;
-(void)recenterMapView;
-(void)setViewDidLoadComplete:(BOOL)arg1 ;
-(id)initWithCamera:(id)arg1 crosshairType:(unsigned long long)arg2 ;
-(BOOL)protocol:(id)arg1 hasInstanceMethod:(SEL)arg2 ;
-(BOOL)delegateProtocolHasInstanceMethod:(SEL)arg1 ;
-(void)setSelectedCoordinate:(CLLocationCoordinate2D)arg1 ;
-(void)setCrosshairYConstraint:(NSLayoutConstraint *)arg1 ;
-(NSLayoutConstraint *)instructionsContainerBottomConstraint;
-(void)setCrosshairImageView:(UIImageView *)arg1 ;
-(UIView *)snapToUserLocationContainerView;
-(BOOL)viewDidLoadComplete;
-(CLLocationCoordinate2D)selectedCoordinate;
-(UIButton *)snapToUserLocationButton;
-(id)initWithCamera:(id)arg1 showCrosshair:(BOOL)arg2 ;
-(void)setCrosshairXConstraint:(NSLayoutConstraint *)arg1 ;
-(void)setSnapToUserLocationButton:(UIButton *)arg1 ;
-(void)setInstructionsText:(NSString *)arg1 ;
-(NSLayoutConstraint *)userLocationButtonBottomConstraint;
-(MKMapView *)mapView;
-(id<LocationRefinementViewControllerDelegate>)delegate;
-(BOOL)respondsToSelector:(SEL)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)setDelegate:(id<LocationRefinementViewControllerDelegate>)arg1 ;
-(id)initWithNibName:(id)arg1 bundle:(id)arg2 ;
-(BOOL)visible;
-(void)viewDidLayoutSubviews;
-(void)setVisible:(BOOL)arg1 ;
-(id)forwardingTargetForSelector:(SEL)arg1 ;
-(void)viewDidLoad;
-(void)viewWillAppear:(BOOL)arg1 ;
-(void)viewDidAppear:(BOOL)arg1 ;
-(void)viewWillDisappear:(BOOL)arg1 ;
-(CGPoint)mapView:(id)arg1 focusPointForPoint:(CGPoint)arg2 gesture:(long long)arg3 ;
-(void)mapView:(id)arg1 regionDidChangeAnimated:(BOOL)arg2 ;
-(void)mapViewDidFinishLoadingMap:(id)arg1 ;
-(void)mapViewDidFinishRenderingMap:(id)arg1 fullyRendered:(BOOL)arg2 ;
-(void)mapView:(id)arg1 didUpdateUserLocation:(id)arg2 ;
-(void)mapView:(id)arg1 didFailToLocateUserWithError:(id)arg2 ;
-(NSString *)instructionsText;
-(id<MKMapViewDelegate>)mapViewDelegate;
-(void)setMapViewDelegate:(id<MKMapViewDelegate>)arg1 ;
-(UILabel *)instructionsLabel;
@end

