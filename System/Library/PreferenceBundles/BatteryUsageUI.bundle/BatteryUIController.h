/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:11:47 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/PreferenceBundles/BatteryUsageUI.bundle/BatteryUsageUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Preferences/PSListController.h>
#import <UIKit/UIAlertViewDelegate.h>

@class NSMutableArray, PSSpecifier, NSArray, NSTimer, NSString, NSMutableDictionary, UIActivityIndicatorView, BatteryUsageRadarComposeViewController;

@interface BatteryUIController : PSListController <UIAlertViewDelegate> {

	NSMutableArray* _suggestionEntries;
	NSMutableArray* _signatureEntries;
	PSSpecifier* _suggestionGroup;
	PSSpecifier* _signatureGroup;
	NSArray* _usageTimeEntries;
	NSTimer* _timer;
	NSString* _notTrustedString;
	NSString* _chargingString;
	PSSpecifier* _textSpecifier;
	PSSpecifier* _usageSpecifier;
	PSSpecifier* _standbySpecifier;
	int _fullyChargedToken;
	int _pluggedInToken;
	unsigned long long _isCharged;
	unsigned long long _isPlugged;
	float _standbySeconds;
	float _usageSeconds;
	BOOL _trusted;
	PSSpecifier* _batteryGroup;
	PSSpecifier* _spinnerGroup;
	int _batteryUIQueryRange;
	NSMutableArray* _batteryEntries;
	float _batteryTotal;
	PSSpecifier* _batteryGraphSpecifier;
	int _iconDisplayType;
	BOOL _buttonPressed;
	NSTimer* _repeatingTimer;
	NSMutableArray* _battArray;
	BOOL _isFirstTimeLaunchingInternalUI;
	BOOL _isSquishedText;
	int _batteryUIQueryType;
	int _batteryUIType;
	NSMutableDictionary* _currentDictionary;
	UIActivityIndicatorView* _activityIndicator;
	BatteryUsageRadarComposeViewController* _radarController;

}

@property (nonatomic,retain) BatteryUsageRadarComposeViewController * radarController;              //@synthesize radarController=_radarController - In the implementation block
@property (assign,nonatomic) int BUI_MODE; 
@property (nonatomic,retain) NSMutableDictionary * currentDictionary;                               //@synthesize currentDictionary=_currentDictionary - In the implementation block
@property (nonatomic,retain) UIActivityIndicatorView * activityIndicator;                           //@synthesize activityIndicator=_activityIndicator - In the implementation block
@property (assign,nonatomic) int batteryUIQueryType;                                                //@synthesize batteryUIQueryType=_batteryUIQueryType - In the implementation block
@property (assign,nonatomic) int batteryUIType;                                                     //@synthesize batteryUIType=_batteryUIType - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)showInternalViewController;
-(void)didPushButton:(id)arg1 ;
-(BOOL)inDemoMode;
-(void)reportIssue;
-(void)setRadarController:(BatteryUsageRadarComposeViewController *)arg1 ;
-(BatteryUsageRadarComposeViewController *)radarController;
-(int)batteryUIQueryType;
-(id)usageElapsed:(id)arg1 ;
-(id)standbyElapsed:(id)arg1 ;
-(BOOL)shouldShowTime;
-(void)initUsageTimeNotifications;
-(id)_textSpecifier;
-(id)_usageSpecifier;
-(id)_standbySpecifier;
-(BOOL)isInBUIDemoMode;
-(void)updateUsageTimeUI:(BOOL)arg1 ;
-(void)updateUsageTime:(id)arg1 ;
-(void)_fullyChargedStateChanged;
-(void)_pluggedInStateChanged;
-(id)_suggestionGroupSpecifier;
-(void)setBatteryUIQueryType:(int)arg1 ;
-(int)batteryUIType;
-(int)BUI_MODE;
-(void)setCurrentDictionary:(NSMutableDictionary *)arg1 ;
-(NSMutableDictionary *)currentDictionary;
-(id)generateBatteryEntrySpecifiers:(id)arg1 ;
-(void)generateSuggestionsEntrySpecifiers:(id)arg1 ;
-(id)setUpBatterySpecifiers;
-(id)_spinnerSpecifierGroup;
-(id)usageTimeSpecifierArray;
-(id)formatUsageStringInMinOrHr:(id)arg1 ;
-(id)batteryUIQueryRangeKey;
-(id)specifierForBatteryEntry:(id)arg1 ;
-(id)appEnergyValue:(id)arg1 ;
-(id)appFGBGValue:(id)arg1 ;
-(id)appQualifiers:(id)arg1 ;
-(void)rebuildList;
-(void)setBatteryUIType:(int)arg1 ;
-(BOOL)shouldAutoCycle;
-(void)startRepeatingTimer;
-(BOOL)isSquished;
-(id)getBatteryServiceSuggestion:(id)arg1 ;
-(BOOL)shouldDisplayBugSignatures;
-(id)_suggestionEntries;
-(id)setUpBatteryHealthSpecifiers;
-(id)_batteryGroupSpecifier;
-(id)getActiveTime:(id)arg1 ;
-(id)batteryUIQueryRange:(id)arg1 ;
-(id)setUpInternalSpecifiers;
-(id)setUpInternalAppSpecifiers;
-(id)getBatteryPercentageMode:(id)arg1 ;
-(void)setBatterySaverMode:(id)arg1 withSpecifier:(id)arg2 ;
-(id)getBatterySaverMode:(id)arg1 ;
-(id)batteryGraphSpecifier;
-(void)queryForBatteryBreakdown;
-(void)updateSuggestionsSpecifiers;
-(void)resumeUsageTimeNotifications;
-(void)stopUsageTimeNotifications;
-(id)formatUsageStringInMin:(id)arg1 ;
-(id)getChargeCycles:(id)arg1 ;
-(id)getBackgroundActiveTime:(id)arg1 ;
-(void)reloadOtherTypeUI:(id)arg1 ;
-(void)getDemoName:(id)arg1 ;
-(BOOL)showSaveDemoButtonInInternal;
-(void)setBUI_MODE:(int)arg1 ;
-(void)reloadUI;
-(void)stopRepeatingTimer;
-(void)cycleNext:(id)arg1 ;
-(void)didPushBatteryButton:(id)arg1 ;
-(void)setBatteryUIQueryRange:(id)arg1 specifier:(id)arg2 ;
-(void)savePList:(id)arg1 ;
-(id)_signatureGroupSpecifier;
-(void)generateSignaturesEntrySpecifiers:(id)arg1 ;
-(void)logToPowerlogRbattx;
-(void)setBatterySaver:(int)arg1 ;
-(void)logToPowerlogRbattxy;
-(void)didPushBackgroundButton:(id)arg1 ;
-(void)didPushScreenOnButton:(id)arg1 ;
-(id)setUpUsageSpecifiers;
-(void)logToPowerlogRbattx0;
-(BOOL)checkOnInitIfServiceBatteryRequired;
-(id)init;
-(void)dealloc;
-(void)viewDidLoad;
-(void)viewWillAppear:(BOOL)arg1 ;
-(void)viewWillDisappear:(BOOL)arg1 ;
-(void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2 ;
-(void)update:(id)arg1 ;
-(UIActivityIndicatorView *)activityIndicator;
-(void)setActivityIndicator:(UIActivityIndicatorView *)arg1 ;
-(void)startTimer;
-(BOOL)isBatterySaverModeEnabled;
-(void)_lowPowerModeChangedNotification:(id)arg1 ;
-(void)setSpecifier:(id)arg1 ;
-(void)stopTimer;
-(id)specifiers;
-(void)setScreenLock:(id)arg1 specifier:(id)arg2 ;
-(BOOL)isEduMode;
-(id)screenLock:(id)arg1 ;
-(BOOL)showRootNodesInInternal;
@end

