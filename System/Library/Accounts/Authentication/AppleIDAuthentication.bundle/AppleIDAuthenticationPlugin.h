/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:00:02 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/Accounts/Authentication/AppleIDAuthentication.bundle/AppleIDAuthentication
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/AKAppleIDAuthenticationDelegate.h>
#import <libobjc.A.dylib/ACDAccountAuthenticationPlugin.h>
#import <libobjc.A.dylib/NSXPCListenerDelegate.h>
#import <AppleIDAuthentication/AACredentialRecoveryDialogStatusDelegate.h>

@class NSXPCListener, AASigningSession, NSDate, NSMutableSet, AKAppleIDAuthenticationController, AAFollowUpController, NSString;

@interface AppleIDAuthenticationPlugin : NSObject <AKAppleIDAuthenticationDelegate, ACDAccountAuthenticationPlugin, NSXPCListenerDelegate, AACredentialRecoveryDialogStatusDelegate> {

	NSXPCListener* _credentialRecoveryListener;
	/*^block*/id _credentialRecoveryCompletion;
	AASigningSession* _signingSession;
	NSDate* _signingSessionCreationDate;
	NSMutableSet* _accountsAwaitingRemotePasswordEntry;
	AKAppleIDAuthenticationController* _authController;
	AAFollowUpController* _followUpController;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)_authController;
-(id)_frontmostApplicationId;
-(void)_stopListeningForCredentialRecoveryStatus;
-(BOOL)_isAccountInGrayMode:(id)arg1 ;
-(id)_findAndRemoveOldiCloudTokenForAccount:(id)arg1 ;
-(id)_findAndRemoveOldFMIPTokenForAccount:(id)arg1 ;
-(id)_accountTypeIDsThatReplacedAppleIDAccountType;
-(void)_migrateiCloudTokenIfNeededForAccount:(id)arg1 credential:(id)arg2 ;
-(void)_migrateFMIPTokenIfNeededForAccount:(id)arg1 credential:(id)arg2 ;
-(void)_migrateAppleIDTokensIfNeededForAccount:(id)arg1 credential:(id*)arg2 store:(id)arg3 ;
-(void)_fetchTokenForAccount:(id)arg1 accountStore:(id)arg2 withHandler:(/*^block*/id)arg3 ;
-(void)_tryPasswordLoginWithAccount:(id)arg1 store:(id)arg2 cookieHeaders:(id)arg3 companionDevice:(id)arg4 services:(id)arg5 completion:(/*^block*/id)arg6 ;
-(void)_beginPETBasedLoginWithAccount:(id)arg1 PET:(id)arg2 store:(id)arg3 usingCookieHeaders:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)_silentlyAuthenticateAppleID:(id)arg1 altDSID:(id)arg2 companionDevice:(id)arg3 services:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)_convertPasswordToPETForAppleID:(id)arg1 altDSID:(id)arg2 password:(id)arg3 companionDevice:(id)arg4 services:(id)arg5 completion:(/*^block*/id)arg6 ;
-(id)_parametersForProxiedAuthentication;
-(void)_handleHSALoginReponse:(id)arg1 forAccount:(id)arg2 error:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)_handleHSAActionIfNecessary:(id)arg1 withDataString:(id)arg2 forAccount:(id)arg3 ;
-(void)_renewCredentialsForAccount:(id)arg1 accountStore:(id)arg2 options:(id)arg3 errorMessage:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)_presentPasswordAlertForAccount:(id)arg1 inStore:(id)arg2 options:(id)arg3 errorMessage:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)_isAccountReallyInGreyMode:(id)arg1 accountStore:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)_userInfoForRenewCredentialsFollowUpWithAccountStore:(id)arg1 proxiedDevice:(id)arg2 ;
-(void)_handleCallbackFromPasswordAlertWithResults:(id)arg1 error:(id)arg2 forAccount:(id)arg3 inStore:(id)arg4 resetAuthenticatedOnAlertFailure:(BOOL)arg5 completion:(/*^block*/id)arg6 ;
-(BOOL)_isPairedToPreBondiWatch;
-(void)_updateDSID:(id)arg1 withRawPassword:(id)arg2 suggestedAccount:(id)arg3 store:(id)arg4 completion:(/*^block*/id)arg5 ;
-(id)_delegateHintsForAccount:(id)arg1 ;
-(BOOL)_deviceIsSetupForDevEnvironment;
-(void)_showUserAlertWithTitle:(id)arg1 message:(id)arg2 cancelButtonTitle:(id)arg3 otherButtonTitle:(id)arg4 textFieldTitle:(id)arg5 withCompletionBlock:(/*^block*/id)arg6 ;
-(void)_invokeDelegatesWithAuthenticationResponse:(id)arg1 password:(id)arg2 store:(id)arg3 account:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)_alertIfHSAVerificationIsRequiredForiCloudAccount:(id)arg1 withResponse:(id)arg2 ;
-(void)_startListeningForCredentialRecoveryStatus;
-(BOOL)_showNativeCredentialRecovery;
-(void)_launchWebBasedCredentialRecovery;
-(void)credentialRecoveryDidFinishWithSuccess:(BOOL)arg1 error:(id)arg2 ;
-(void)_loginWithAccount:(id)arg1 store:(id)arg2 usingCookieHeaders:(id)arg3 companionDevice:(id)arg4 options:(id)arg5 completion:(/*^block*/id)arg6 ;
-(void)_getPasswordFromCompanionForAccount:(id)arg1 store:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)_parametersForIDSAlertFromLoginResponse:(id)arg1 ;
-(id)_absintheSigningSession;
-(BOOL)_isiCloudTwoFactorAuthRequiredForLoginResponse:(id)arg1 ;
-(void)_showiForgotDialogWithCompletion:(/*^block*/id)arg1 ;
-(id)init;
-(void)dealloc;
-(BOOL)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2 ;
-(BOOL)authenticationController:(id)arg1 shouldContinueWithAuthenticationResults:(id)arg2 error:(id)arg3 forContext:(id)arg4 ;
-(void)renewCredentialsForAccount:(id)arg1 accountStore:(id)arg2 options:(id)arg3 completion:(/*^block*/id)arg4 ;
-(BOOL)isPushSupportedForAccount:(id)arg1 ;
-(void)discoverPropertiesForAccount:(id)arg1 accountStore:(id)arg2 options:(id)arg3 completion:(/*^block*/id)arg4 ;
-(id)credentialForAccount:(id)arg1 client:(id)arg2 store:(id)arg3 error:(id*)arg4 ;
-(void)verifyCredentialsForAccount:(id)arg1 accountStore:(id)arg2 options:(id)arg3 completion:(/*^block*/id)arg4 ;
-(id)renewalIDForAccount:(id)arg1 ;
-(BOOL)_clientHasEntitlement:(id)arg1 ;
@end

