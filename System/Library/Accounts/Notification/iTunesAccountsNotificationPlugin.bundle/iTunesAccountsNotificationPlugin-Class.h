/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:00:22 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /System/Library/Accounts/Notification/iTunesAccountsNotificationPlugin.bundle/iTunesAccountsNotificationPlugin
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/ACDAccountNotificationPlugin.h>

@protocol OS_dispatch_queue;
@class NSObject, NSString;

@interface iTunesAccountsNotificationPlugin : NSObject <ACDAccountNotificationPlugin> {

	NSObject*<OS_dispatch_queue> _accountSyncQueue;
	NSObject*<OS_dispatch_queue> _processingQueue;

}

@property (nonatomic,retain) NSObject*<OS_dispatch_queue> accountSyncQueue;              //@synthesize accountSyncQueue=_accountSyncQueue - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> processingQueue;               //@synthesize processingQueue=_processingQueue - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(BOOL)_shouldProcessChangeForAccount:(id)arg1 oldAccount:(id)arg2 changeType:(int)arg3 ;
+(id)_stringForAccountChangeType:(int)arg1 ;
+(void)_postAccountsChangedNotificationsIfNeededWithLogKey:(id)arg1 ;
+(void)_postActiveAccountChangedNotificationWithLogKey:(id)arg1 ;
+(void)_postStorefontChangedNotificationIfNeededForAccount:(id)arg1 oldAccount:(id)arg2 store:(id)arg3 logKey:(id)arg4 ;
+(void)_updateLocalAccountStorefrontIfNeededForAccount:(id)arg1 store:(id)arg2 logKey:(id)arg3 ;
+(void)_saveAccount:(id)arg1 inStore:(id)arg2 logKey:(id)arg3 ;
+(void)_postAccountsChangedInternalNotificationWithLogKey:(id)arg1 ;
+(void)_postAccountsChangedNotificationWithLogKey:(id)arg1 ;
+(BOOL)_activeAccountExistsInStore:(id)arg1 ;
+(id)_activeStorefrontIdentifier;
+(void)_setActiveStorefrontIdentifier:(id)arg1 ;
+(void)_postStorefrontChangedNotificationWithLogKey:(id)arg1 ;
-(void)setAccountSyncQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(id)_hashedDescriptionForAccount:(id)arg1 ;
-(void)_logDirtyPropertiesForAccount:(id)arg1 oldAccount:(id)arg2 logKey:(id)arg3 ;
-(void)_processAccountAddition:(id)arg1 inStore:(id)arg2 logKey:(id)arg3 ;
-(void)_processAccountDeletion:(id)arg1 inStore:(id)arg2 logKey:(id)arg3 ;
-(void)_processAccountModification:(id)arg1 oldAccount:(id)arg2 inStore:(id)arg3 logKey:(id)arg4 ;
-(BOOL)_mergePrivacyAcknowledgementUsingAccount:(id)arg1 store:(id)arg2 ;
-(BOOL)_canSaveAccount:(id)arg1 withOtherAccounts:(id)arg2 store:(id)arg3 ;
-(void)_resetBiometricsForAccount:(id)arg1 logKey:(id)arg2 ;
-(void)_performOneWayMergeFromLocalAccount:(id)arg1 toActiveAccount:(id)arg2 store:(id)arg3 ;
-(id)_mergePrivacyAcknowledgementDictionary:(id)arg1 withDictionary:(id)arg2 ;
-(NSObject*<OS_dispatch_queue>)accountSyncQueue;
-(void)_addIDMSAccountForAccount:(id)arg1 toPairedDevicesWithStore:(id)arg2 logKey:(id)arg3 ;
-(BOOL)_sendRemoteDeviceCommand:(id)arg1 forAccount:(id)arg2 store:(id)arg3 logKey:(id)arg4 error:(id*)arg5 ;
-(void)_updateAccount:(id)arg1 onPairedDevicesWithStore:(id)arg2 logKey:(id)arg3 ;
-(void)_addAccount:(id)arg1 toPairedDevicesWithStore:(id)arg2 logKey:(id)arg3 ;
-(void)_deactivateAllAccountsExcept:(id)arg1 inStore:(id)arg2 logKey:(id)arg3 ;
-(BOOL)_shouldPerformAccountSyncForStore:(id)arg1 ;
-(void)_logoutOfAccount:(id)arg1 store:(id)arg2 logKey:(id)arg3 ;
-(void)_resetSubscriptionStatusForAccount:(id)arg1 ;
-(void)_resetWishlistForAccount:(id)arg1 ;
-(void)_removeAccount:(id)arg1 fromPairedDevicesWithStore:(id)arg2 logKey:(id)arg3 ;
-(void)_processIDMSAccountModification:(id)arg1 oldAccount:(id)arg2 inStore:(id)arg3 logKey:(id)arg4 ;
-(void)_processiTunesAccountModification:(id)arg1 oldAccount:(id)arg2 inStore:(id)arg3 logKey:(id)arg4 ;
-(void)_resetAccountStoreExpiration;
-(void)_setupAuthenticationControllerWithAccount:(id)arg1 ;
-(void)_resetStoreDownloadQueue;
-(void)_resetSpringBoardDefaultPNGSnapshots;
-(void)_resetMusicSpecificPreferences;
-(id)init;
-(BOOL)canSaveAccount:(id)arg1 inStore:(id)arg2 ;
-(BOOL)account:(id)arg1 willChangeWithType:(int)arg2 inStore:(id)arg3 oldAccount:(id)arg4 ;
-(void)account:(id)arg1 didChangeWithType:(int)arg2 inStore:(id)arg3 oldAccount:(id)arg4 ;
-(NSObject*<OS_dispatch_queue>)processingQueue;
-(void)setProcessingQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
@end

