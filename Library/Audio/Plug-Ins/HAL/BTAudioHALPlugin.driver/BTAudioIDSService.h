/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, August 22, 2018 at 12:31:28 AM Central European Summer Time
* Operating System: Version 11.3.1 (Build 15E302)
* Image Source: /Library/Audio/Plug-Ins/HAL/BTAudioHALPlugin.driver/BTAudioHALPlugin
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <BTAudioHALPlugin/BTAudioHALPlugin-Structs.h>
#import <libobjc.A.dylib/IDSServiceDelegate.h>

@class IDSService, NSString;

@interface BTAudioIDSService : NSObject <IDSServiceDelegate> {

	BOOL compatibleAndConnected;
	BOOL compatibleAndNearby;
	IDSService* _mIdsService;
	NSString* _lastUsedIdentifierKey;

}

@property (nonatomic,retain) IDSService * mIdsService;                 //@synthesize mIdsService=_mIdsService - In the implementation block
@property (assign,nonatomic) BOOL compatibleAndConnected; 
@property (assign,nonatomic) BOOL compatibleAndNearby; 
@property (copy) NSString * lastUsedIdentifierKey;                     //@synthesize lastUsedIdentifierKey=_lastUsedIdentifierKey - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(IDSService *)mIdsService;
-(void)setMIdsService:(IDSService *)arg1 ;
-(BOOL)deviceIsCompatible:(id)arg1 ;
-(BOOL)compatibleAndNearby;
-(void)setCompatibleAndNearby:(BOOL)arg1 ;
-(BOOL)compatibleAndConnected;
-(void)setCompatibleAndConnected:(BOOL)arg1 ;
-(void)handleDidTakeOwnership:(basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)arg1 withResponseIdentifier:(id)arg2 ;
-(NSString *)lastUsedIdentifierKey;
-(void)setLastUsedIdentifierKey:(NSString *)arg1 ;
-(void)handleRequestOwnership:(basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)arg1 withResponseIdentifier:(id)arg2 ;
-(void)handleTakeOwnershipFailed:(basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)arg1 ;
-(void)handleReconcileOwnershipRemoteOwns:(basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)arg1 ;
-(void)handleReconcileOwnershipRemoteReleased:(basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)arg1 ;
-(void)handleUnsupportedArbitrationMsg:(basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)arg1 ;
-(BOOL)sendArbitrationMsg:(id)arg1 forAddress:(basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)arg2 withResponseIdentifier:(id)arg3 ;
-(BOOL)isConnected;
-(id)init;
-(void)dealloc;
-(void)service:(id)arg1 account:(id)arg2 incomingMessage:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)service:(id)arg1 nearbyDevicesChanged:(id)arg2 ;
-(void)service:(id)arg1 connectedDevicesChanged:(id)arg2 ;
@end

